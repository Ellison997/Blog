{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/img/icon_wechat.png","path":"img/icon_wechat.png","modified":1,"renderable":0},{"_id":"source/img/404-bg.jpg","path":"img/404-bg.jpg","modified":1,"renderable":0},{"_id":"source/img/header_img/archive-bg.webp","path":"img/header_img/archive-bg.webp","modified":1,"renderable":0},{"_id":"source/img/signature/tianchunle.png","path":"img/signature/tianchunle.png","modified":1,"renderable":0},{"_id":"themes/beantech/source/css/archive.styl","path":"css/archive.styl","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/beantech.css","path":"css/beantech.css","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/beantech.min.css","path":"css/beantech.min.css","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/highlight.styl","path":"css/highlight.styl","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/rocket.styl","path":"css/rocket.styl","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/signature.styl","path":"css/signature.styl","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/toc.styl","path":"css/toc.styl","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/widget.styl","path":"css/widget.styl","modified":1,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":1,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":1,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":1,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/hux-blog.js","path":"js/hux-blog.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/jquery.categorycloud.js","path":"js/jquery.categorycloud.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/toc.js","path":"js/toc.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"source/img/header_img/Iron-Man-3.webp","path":"img/header_img/Iron-Man-3.webp","modified":1,"renderable":0},{"_id":"source/img/header_img/archive-bg.jpg","path":"img/header_img/archive-bg.jpg","modified":1,"renderable":0},{"_id":"themes/beantech/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":1,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/bootstrap.js","path":"js/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"source/img/header_img/Iron-Man-3.jpg","path":"img/header_img/Iron-Man-3.jpg","modified":1,"renderable":0},{"_id":"source/img/header_img/tag-bg.jpg","path":"img/header_img/tag-bg.jpg","modified":1,"renderable":0},{"_id":"source/img/header_img/tag-bg.webp","path":"img/header_img/tag-bg.webp","modified":1,"renderable":0},{"_id":"source/img/ironman-draw.jpg","path":"img/ironman-draw.jpg","modified":1,"renderable":0},{"_id":"themes/beantech/source/css/bootstrap.css","path":"css/bootstrap.css","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/images/ironman.png","path":"css/images/ironman.png","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/images/rocket.png","path":"css/images/rocket.png","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/jquery.js","path":"js/jquery.js","modified":1,"renderable":1},{"_id":"source/img/header_img/home-bg-2-dark.jpg","path":"img/header_img/home-bg-2-dark.jpg","modified":1,"renderable":0},{"_id":"source/img/header_img/home-bg-2-dark.webp","path":"img/header_img/home-bg-2-dark.webp","modified":1,"renderable":0}],"Cache":[{"_id":"source/404.md","hash":"772171bf1e76315159b5f6b3adf1872eb46538ea","modified":1524748954087},{"_id":"source/CNAME","hash":"42c0f995a76040bd383bfa06884fc4389bc30fb6","modified":1524066228127},{"_id":"themes/beantech/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1506228020000},{"_id":"themes/beantech/_config.yml","hash":"6afd65c055d9b1c70ae67323cc869f1b4aa60348","modified":1506228020000},{"_id":"source/_posts/2018-03-25-使用hexo搭建个人博客遇到的问题及解决方法.md","hash":"c89eb0a60012b1941713de8535de1c1b3e0f7550","modified":1524754111980},{"_id":"source/_posts/2018-04-23-EntityFramework连接PostgreSQL数据库并添加迁移.md","hash":"37f08267d2f986d0c4b83acd2804ea8b97d6b1a5","modified":1527138390955},{"_id":"source/_posts/2018-04-23-Git使用（一）.md","hash":"084f07af2862ea4a73626fb4636876bc7a6a041f","modified":1524493092749},{"_id":"source/_posts/2018-04-23-Git使用（二）.md","hash":"d59af18e1da763b967b2f3b2c86c027114d3be63","modified":1524459460702},{"_id":"source/_posts/2018-04-29-在前端写逻辑会不会被打。。。.md","hash":"9f6b5a533020c4db5efc1bf903b3209d3a2c5cd6","modified":1524987133538},{"_id":"source/_posts/2018-05-03-Drupal8安装说明.md","hash":"ef708130a8e38dad7aecda2fb9428cb2ada43a61","modified":1525611735648},{"_id":"source/_posts/2018-06-21-Markdown基本语法.md","hash":"f22e803a85c13986ee3305378459e2347616ecca","modified":1529553273514},{"_id":"source/_posts/2018-06-21-Markdown高级语法.md","hash":"aa1d72deff0e03217274f9d63450d3220e6ae267","modified":1529553594103},{"_id":"source/_posts/2018-06-21-postgre数据库的备份与恢复.md","hash":"023195963a63b9481a1e65568a2d537006a63345","modified":1529550582221},{"_id":"source/_posts/2018-07-04-BOM的常见内置方法和内置对象.md","hash":"6f178956b23e6fdd83183a5bfbcf693e9bfab31a","modified":1530710412173},{"_id":"source/_posts/hexo-theme-beantech.md","hash":"b37a575ec469d4804d367cedda6e56251c54e57b","modified":1524754078043},{"_id":"source/about/index.md","hash":"8d636929aeb3a7a737fd8fdb897a85ece19f4713","modified":1524967920784},{"_id":"source/archive/index.md","hash":"35c81bdb8a68d7c27f2573cc7f1a91985e98c949","modified":1524967660125},{"_id":"source/category/index.md","hash":"56267f5f07a8333842403dbce165c097d0c1aa96","modified":1524969552482},{"_id":"source/img/icon_wechat.png","hash":"6ba73cbf9042ca3e0da1679078463127a8a24ddb","modified":1524149710435},{"_id":"source/tag/index.md","hash":"45e7662be25eea0f55e1a3f276987646fd5ace0c","modified":1524969556420},{"_id":"themes/beantech/languages_to_be_added/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1506228020000},{"_id":"themes/beantech/languages_to_be_added/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1506228020000},{"_id":"themes/beantech/languages_to_be_added/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1506228020000},{"_id":"themes/beantech/languages_to_be_added/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1506228020000},{"_id":"themes/beantech/languages_to_be_added/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1506228020000},{"_id":"themes/beantech/languages_to_be_added/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1506228020000},{"_id":"themes/beantech/languages_to_be_added/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1506228020000},{"_id":"themes/beantech/languages_to_be_added/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1506228020000},{"_id":"themes/beantech/languages_to_be_added/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1506228020000},{"_id":"themes/beantech/layout/404.ejs","hash":"a4d73541a53e56b7dd46249c6d27cb59f4d97422","modified":1506228020000},{"_id":"themes/beantech/layout/about.ejs","hash":"edcf8fa3bf7093c974d418ffef42ac89c19af128","modified":1506228020000},{"_id":"themes/beantech/layout/archive.ejs","hash":"b84dfe95b87a8be43ad95280e132d86e91bb8991","modified":1524666863148},{"_id":"themes/beantech/layout/category.ejs","hash":"0eb39a6165d50fadfbbbbf4a018080685935f428","modified":1524926900644},{"_id":"themes/beantech/layout/index.ejs","hash":"79a97a547ff85bca6f2cc00768a569f63b8b029c","modified":1524988275437},{"_id":"themes/beantech/layout/keynote.ejs","hash":"f27597648a248e89696c1f7d6f036d42d91afa5f","modified":1524988282422},{"_id":"themes/beantech/layout/layout.ejs","hash":"214b42e4cd7cad065e96576c6809468d507cad20","modified":1524150312192},{"_id":"themes/beantech/layout/page.ejs","hash":"e426c1dd5ababece9be25ff2c6c13055c3d859e6","modified":1524988288855},{"_id":"themes/beantech/layout/post.ejs","hash":"43521e4550a54a1e70a7a87f2d4da755f39d020e","modified":1524988299823},{"_id":"themes/beantech/layout/tag.ejs","hash":"2c72eb2e89130658aa068d80d27b561b509c5dcd","modified":1524754369743},{"_id":"source/_posts/2018-04-23-EntityFramework连接PostgreSQL数据库并添加迁移/Add-Mig.png","hash":"d8644c80cb7f0c1d6a6eda0ac2579a3d00cadebc","modified":1524493423016},{"_id":"source/_posts/2018-04-23-EntityFramework连接PostgreSQL数据库并添加迁移/NuGetPackage.png","hash":"94b54fef06d394197e395f1949d47d9a55b5dd9e","modified":1524493350126},{"_id":"source/_posts/2018-04-23-EntityFramework连接PostgreSQL数据库并添加迁移/database.png","hash":"5c0601540e7ab73d471f7da043c1073030a9137a","modified":1524495291234},{"_id":"source/_posts/2018-04-23-EntityFramework连接PostgreSQL数据库并添加迁移/uodate.png","hash":"eb64f33b1a25128e2f964b196b6bc521afe1bd2e","modified":1524493499518},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/HostSetting.png","hash":"b1dbd307ee5722a2f73168979f08f48a0fecfa0e","modified":1525313671566},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/DrupalDatabases.png","hash":"ae808573c8cdd44d63f93f515afe7581b191d593","modified":1525313379232},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/HostSettingError.png","hash":"9278f2326586283989d7755df76d5a483c9f37ef","modified":1525313709084},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/adminFanyi.png","hash":"e41b0fbeb90ccb6ae8a472e3c8dccba59e1f98b5","modified":1525313590682},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/chown.png","hash":"8abe1e86487981260caaf886af78b064bf2a0693","modified":1525313188911},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/chownHtaccess.png","hash":"d1f39727d7ba92471285cbd159ac28b6d8538224","modified":1525313357420},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/hello.png","hash":"49410d5007cea748210a57f0ca353bda647c6228","modified":1525312803887},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/htaccess.png","hash":"66d29680895f025f4ebbdfcdf55060f0a03d1628","modified":1525313332442},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/installDrupalOK.png","hash":"73c4c5f25b1bb9e9d02445730ca54c8d75396beb","modified":1525313406512},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/settingsConfig.png","hash":"095861293c69319109eb2d97ecade4c30b88577a","modified":1525313734422},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/startHttpd.png","hash":"6416ba8da24092e77cd9b38960a667a7d35ab4ae","modified":1525313135725},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/translatorInput.png","hash":"2b81f5e1696d3791f5e1585f71df2758a1a69853","modified":1525313633019},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/updateHttpd.png","hash":"7c00781eb19af69ff6983a344ac829e23ccfd117","modified":1525313289558},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/wgetDrupal.png","hash":"1479022fbfd9424813df44f48c170e37b0ddaf41","modified":1525313159856},{"_id":"source/_posts/2018-07-04-BOM的常见内置方法和内置对象/BOM.png","hash":"718f50e924808d078472f109c6f9052d627aa83f","modified":1530695528374},{"_id":"source/img/404-bg.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1506228020000},{"_id":"source/img/header_img/archive-bg.webp","hash":"0272f4bf656739f1f9f671c7b4dc40cb35c19710","modified":1524224266117},{"_id":"source/img/signature/tianchunle.png","hash":"4a35305d85115b6581699d24adb0a12fe399b704","modified":1524143885854},{"_id":"themes/beantech/layout/_partial/head.ejs","hash":"27ebeb4c76f7791c517f9176273642c2d9adaae9","modified":1524982657038},{"_id":"themes/beantech/layout/_partial/footer.ejs","hash":"2ddf5514f5506358f6fcd0abf6ba7cfd8fe37cec","modified":1524928689171},{"_id":"themes/beantech/layout/_partial/header.ejs","hash":"9c5a16dd6cf383ce5e40b2c72049afb5ad12b328","modified":1524988265364},{"_id":"themes/beantech/layout/_partial/nav.ejs","hash":"0341631217e6a5c790c02641b5285264228ada1e","modified":1524929133285},{"_id":"themes/beantech/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1506228020000},{"_id":"themes/beantech/layout/_partial/sidebar.ejs","hash":"2e4e528a555917b2a267da4db2440bcc4a7a65ab","modified":1506228020000},{"_id":"themes/beantech/layout/_partial/toc.ejs","hash":"5f809e6f2ec27b7b308d282900165998d0690a86","modified":1524625922666},{"_id":"themes/beantech/layout/_widget/archive.ejs","hash":"7594929d472806ca4c64d9906d9903a96de111a0","modified":1506228020000},{"_id":"themes/beantech/layout/_widget/category.ejs","hash":"1cf485def07dc06e870dc9613767c6c614bcf428","modified":1506228020000},{"_id":"themes/beantech/layout/_widget/featured-tags.ejs","hash":"2c2ed09b84a41f869c651990a658e85ad8c06c7a","modified":1524964716343},{"_id":"themes/beantech/layout/_widget/friends-blog.ejs","hash":"4fc6641f724f41ac55beeee3768b555b78459e83","modified":1524187392531},{"_id":"themes/beantech/layout/_widget/recent-posts.ejs","hash":"e08ab8ba60e31638006acf27f066b989a0a3c433","modified":1506228020000},{"_id":"themes/beantech/layout/_widget/short-about.ejs","hash":"cfceb18f58a7a303bb8a0e3209d16ded65f02c3f","modified":1524927443967},{"_id":"themes/beantech/source/css/archive.styl","hash":"715bcbd085eb95ec26c9805c11c374919cde971c","modified":1506228020000},{"_id":"themes/beantech/source/css/beantech.css","hash":"47bfeb68a78cc725bd9001708b46d8f296b98957","modified":1530696731383},{"_id":"themes/beantech/source/css/beantech.min.css","hash":"1186ad03d647d91c177d2fb5b99042b5c1818edb","modified":1530696720103},{"_id":"themes/beantech/source/css/highlight.styl","hash":"e842080e6d580f0f70a7df71fbde3c4e49463c19","modified":1506228020000},{"_id":"themes/beantech/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1506228020000},{"_id":"themes/beantech/source/css/rocket.styl","hash":"7dbea164c3446b4d43f5ed663c54e856f45079d5","modified":1524969123877},{"_id":"themes/beantech/source/css/signature.styl","hash":"88159b31c59d59c01a0b534af57242662a2a3969","modified":1506228020000},{"_id":"themes/beantech/source/css/toc.styl","hash":"0b96d34563defa81e7c15d5718c05b1add15d953","modified":1524626186417},{"_id":"themes/beantech/source/css/widget.styl","hash":"7a9f735f5ef323dc2950fbd9d76daa16c9a0f1a9","modified":1506228020000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1506228020000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1506228020000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1506228020000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1506228020000},{"_id":"themes/beantech/source/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1506228020000},{"_id":"themes/beantech/source/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1506228020000},{"_id":"themes/beantech/source/js/hux-blog.min.js","hash":"a899c78089772c352c9baab584a47f2c323433d5","modified":1524928273113},{"_id":"themes/beantech/source/js/jquery.categorycloud.js","hash":"65f0b9ea065cf3e97c1e40c94796c8f519292774","modified":1524928492736},{"_id":"themes/beantech/source/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1506228020000},{"_id":"themes/beantech/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1506228020000},{"_id":"themes/beantech/source/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1506228020000},{"_id":"themes/beantech/source/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1506228020000},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/StandardDrupal.png","hash":"6380acb1d2c2d6dcf22179a5be2fa9a31ceb5e84","modified":1525313235099},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/adminPanl.png","hash":"fdf30cc99d04b1ad22fdcdeb9d89b2582ae52d86","modified":1525313547104},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/installCreateUser.png","hash":"989631f475aefc12c581b78caacfaffe59ed145e","modified":1525313100159},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/stttingDrupal.png","hash":"2fb5fab301474ce4fa675ba740d8e474352bbf11","modified":1525313265495},{"_id":"source/_posts/hexo-theme-beantech/Demo.webp","hash":"3d75851520ed2adae9dcb200d7f3731ec25e0fd6","modified":1524140817357},{"_id":"source/img/header_img/Iron-Man-3.webp","hash":"9dcfa38543da4b2a6b5c293a671fdb54e6270da1","modified":1524224259957},{"_id":"source/img/header_img/archive-bg.jpg","hash":"5a18606b468f450b4caba258c42d4bba2b21084f","modified":1524444853057},{"_id":"themes/beantech/source/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1506228020000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1506228020000},{"_id":"themes/beantech/source/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1506228020000},{"_id":"themes/beantech/source/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1506228020000},{"_id":"source/_posts/2018-04-23-EntityFramework连接PostgreSQL数据库并添加迁移/0180424083706.png","hash":"1db0aa1c70b6bdaff286a33c0666686a6ff85676","modified":1524530234787},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/adminMenu.png","hash":"460ff0a5951dc7d2a1257c231468f2179c900cf3","modified":1525313527180},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/installDetail.png","hash":"bc2eb0d10c8d8e71f622c7bcabf67fc55d3fbdaf","modified":1525313035315},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/settingWeb.png","hash":"570f204c5a97f510a18a4280249cf7ab73b795e2","modified":1525313473876},{"_id":"source/_posts/hexo-theme-beantech/home_posts_tag-false.png","hash":"86a3a4320012981f2d42eabc6ea172425f2f941a","modified":1506228020000},{"_id":"source/img/header_img/Iron-Man-3.jpg","hash":"725538fd2f6328e122dc5d32b0f682fd2c13c169","modified":1524191696679},{"_id":"source/img/header_img/tag-bg.jpg","hash":"22c13777c081966fd6753602321786e229491be3","modified":1524444813313},{"_id":"source/img/header_img/tag-bg.webp","hash":"79a092be8f29acd68eafacd464c69afea7a1779e","modified":1524224273330},{"_id":"source/img/ironman-draw.jpg","hash":"86ab868d7a253531c337162310ffa0be46bf0855","modified":1524129176525},{"_id":"themes/beantech/source/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1506228020000},{"_id":"themes/beantech/source/css/images/ironman.png","hash":"66575a11a3cfb5aeb3e5ca4a5b2bc77f8b60179b","modified":1524148571264},{"_id":"themes/beantech/source/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1506228020000},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/installConfig.png","hash":"e198a2deb93412fa25aa3a2c507e827c86a8e2f2","modified":1525313075947},{"_id":"source/_posts/hexo-theme-beantech/home_posts_tag-true.png","hash":"a704520b43f26b88d650098f60689af3af5eb106","modified":1506228020000},{"_id":"themes/beantech/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1506228020000},{"_id":"source/img/header_img/home-bg-2-dark.jpg","hash":"06b78164fc7930d91b22fcf6f0b3684670a807f3","modified":1524969413726},{"_id":"source/img/header_img/home-bg-2-dark.webp","hash":"ab1fef1a3685705f92603aca7a2881dac5278d0e","modified":1524224279254},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/installDrupal.png","hash":"c8fd99955a90186250280a420bc3060c01fd8120","modified":1525313209741},{"_id":"public/post-sitemap.xml","hash":"a5ef05242907431022b605303ed1570918ac3022","modified":1530710434701},{"_id":"public/page-sitemap.xml","hash":"89c95bc89d5297b7e4b9c3f3462e65db7e3119ff","modified":1530710434843},{"_id":"public/category-sitemap.xml","hash":"53eed476705bb9792a67a4572ae93b8b9049bc2b","modified":1530710434874},{"_id":"public/tag-sitemap.xml","hash":"ff4eebffaf40d14aeb4acae364682af828640690","modified":1530710434878},{"_id":"public/sitemap.xsl","hash":"4321fa69dc1b8811d32b7a1478e5603e038cea1a","modified":1530710434878},{"_id":"public/sitemap.xml","hash":"b0cb48c9b4d63f0354c5f32fc56811cf350f177b","modified":1530710434878},{"_id":"public/404.html","hash":"35fca85201a3fb3d02c23250cbdcf11bac9be569","modified":1530710434909},{"_id":"public/category/index.html","hash":"d412579ed9f7bcdfe1b82a8aaec12fa6bd1d381e","modified":1530710434909},{"_id":"public/2018/06/postgre数据库的备份与恢复/index.html","hash":"396b08e288f2d2ae35fb37bc9fcbbe616e2ea633","modified":1530710434910},{"_id":"public/2018/05/Drupal8安装说明/index.html","hash":"4b94a136eef7ec11272756c8551906427e09ffa1","modified":1530710434910},{"_id":"public/2018/04/EntityFramework连接PostgreSQL数据库并添加迁移/index.html","hash":"9a49e803c4be07400ca4ba34a424ed225649552c","modified":1530710434910},{"_id":"public/2018/03/使用hexo搭建个人博客遇到的问题及解决方法/index.html","hash":"a100aca304843635841f28ab5dd51aa6776a2666","modified":1530710434910},{"_id":"public/categories/ASP-NET/index.html","hash":"35a0946a260117e771e517ba3326eab9f431d62a","modified":1530710434910},{"_id":"public/categories/问题总结/index.html","hash":"fd9a831b0a3b0f69f6d5d9d1b0abfdf36f595c51","modified":1530710434910},{"_id":"public/categories/代码托管/index.html","hash":"f2ffdad4cc3de08d6a78db5f8acae9cbd1e4bab1","modified":1530710434910},{"_id":"public/categories/前端/index.html","hash":"1029603730cc940ded2dda600ef408e2ed18574f","modified":1530710434910},{"_id":"public/categories/CMS/index.html","hash":"c41fc900f10e6696386b86c52093cef015dec5c0","modified":1530710434910},{"_id":"public/categories/编辑器/index.html","hash":"0a13cdd9adfd20ef1a62d5ee995b96b70a6e3caf","modified":1530710434910},{"_id":"public/categories/数据库/index.html","hash":"d5e4ee0cb55f2939140d315da1ce1d6a7e6622c4","modified":1530710434910},{"_id":"public/categories/教程/index.html","hash":"cf6662556c6b8a4eaff627fea9e7fc54e0009195","modified":1530710434911},{"_id":"public/tag/index.html","hash":"fbfdd3f0b47a651d0f2caaff367b7958b619b52f","modified":1530710434911},{"_id":"public/2018/07/BOM的常见内置方法和内置对象/index.html","hash":"2bd7c71270b75e26c948be171d7e8ab25818cb95","modified":1530710434911},{"_id":"public/2018/06/Markdown高级语法/index.html","hash":"73575b28b04f4b539be6113ec7f5c88fed303bc5","modified":1530710434911},{"_id":"public/2018/06/Markdown基本语法/index.html","hash":"3c54af52440f76e295613d9bac92f9c9ba3e0388","modified":1530710434911},{"_id":"public/2018/04/在前端写逻辑会不会被打。。。/index.html","hash":"a6aad246751f56a62e6db992ade44898eff942c7","modified":1530710434911},{"_id":"public/2018/04/Git使用（二）/index.html","hash":"c4d2560a3eb3cfaf3fdeb852f204c362eb2cb725","modified":1530710434911},{"_id":"public/2018/04/Git使用（一）/index.html","hash":"91dce286287582ed9c2b565ce6b2b0248bf734bf","modified":1530710434911},{"_id":"public/2017/04/hexo-theme-beantech/index.html","hash":"ab4be6a99c7f30cd697cdd2e111ff6d50738647a","modified":1530710434911},{"_id":"public/tags/EntityFramework/index.html","hash":"7ce39c49b3e6c0a3c48f2858926c750b03c734b0","modified":1530710434911},{"_id":"public/tags/hexo/index.html","hash":"183359349e477b996f8b1378d147bf31119c3418","modified":1530710434911},{"_id":"public/tags/博客/index.html","hash":"33ee8738146c61b6110dd8fec246e39e1c3c69c2","modified":1530710434912},{"_id":"public/tags/Git/index.html","hash":"d29a5eca5a0e2c1752ef975137e15448a67e6651","modified":1530710434912},{"_id":"public/tags/JavaScript/index.html","hash":"e336a70c32b614c3aa6d529a8a8ac615c06d2974","modified":1530710434912},{"_id":"public/tags/ES6/index.html","hash":"d31de961c2902a3636df81052eab599d554ec1e3","modified":1530710434912},{"_id":"public/tags/Drupal8/index.html","hash":"1ff222de7e1d6700c201828f9a4ecbef47417c2c","modified":1530710434912},{"_id":"public/tags/CentOS/index.html","hash":"97619d9584656c232c0e3271d5b25976b5bc60d8","modified":1530710434912},{"_id":"public/tags/PHP/index.html","hash":"a65a3dc22cca9a06448a6b98204ef2ae4ac99fb8","modified":1530710434912},{"_id":"public/tags/Markdown/index.html","hash":"a73ccee52543aee5bda6fbb8ecb53f65b434bb95","modified":1530710434912},{"_id":"public/tags/语法/index.html","hash":"2cab7efb2247b7afb5b9a9b6e955c172210dcbf0","modified":1530710434912},{"_id":"public/tags/postgreSQL/index.html","hash":"35ae2f0f7b95271efc87715f45c369e971965d9d","modified":1530710434912},{"_id":"public/tags/Blog/index.html","hash":"30668528dc85ea0b036ddb9486a0cc03cec7ba83","modified":1530710434912},{"_id":"public/about/index.html","hash":"e1b3534f330d7fef2016d3f53807eb3d00b952cb","modified":1530710434912},{"_id":"public/archive/index.html","hash":"9c96d75d1086275059ecf2f2fc09b09845189f69","modified":1530710434913},{"_id":"public/archives/index.html","hash":"600a20ba2b6b6f8bdc82fba9c56351af752bec61","modified":1530710434913},{"_id":"public/archives/archives/2/index.html","hash":"2f0025beb36db1199693935c45b7e0e78ca9c36a","modified":1530710434913},{"_id":"public/archives/2017/index.html","hash":"383141ab187793e111f474d212bc749b03050f52","modified":1530710434913},{"_id":"public/archives/2018/index.html","hash":"9ce08600e4ca46f1109d74ad541e311273efa66e","modified":1530710434913},{"_id":"public/archives/2017/04/index.html","hash":"c429e11a2aed4893457c234623d4b7ff55ec9bf0","modified":1530710434913},{"_id":"public/archives/2018/03/index.html","hash":"e974f4e29c98a3c1d07df4369ee7969d4368b588","modified":1530710434913},{"_id":"public/archives/2018/04/index.html","hash":"f28af72bd62d3b9d0101f4c839ba122ea0ed94b8","modified":1530710434913},{"_id":"public/archives/2018/05/index.html","hash":"a8d926ce885bf4a19a0753c95922fb6fb188611e","modified":1530710434913},{"_id":"public/archives/2018/06/index.html","hash":"db9fd4b2055f057d8043d7f3171afcd3710de964","modified":1530710434913},{"_id":"public/archives/2018/07/index.html","hash":"48ec41cfd228a9a8a4c418ea70cf9f6fec088540","modified":1530710434913},{"_id":"public/index.html","hash":"511b6848c032435d1d68243a9e0093ee27e7299f","modified":1530710434913},{"_id":"public/archives/2/index.html","hash":"f62ea0ffc416b62a383674347b048e3f3b4cedca","modified":1530710434913},{"_id":"public/CNAME","hash":"42c0f995a76040bd383bfa06884fc4389bc30fb6","modified":1530710434937},{"_id":"public/img/icon_wechat.png","hash":"6ba73cbf9042ca3e0da1679078463127a8a24ddb","modified":1530710434937},{"_id":"public/img/header_img/archive-bg.webp","hash":"0272f4bf656739f1f9f671c7b4dc40cb35c19710","modified":1530710434937},{"_id":"public/img/signature/tianchunle.png","hash":"4a35305d85115b6581699d24adb0a12fe399b704","modified":1530710434937},{"_id":"public/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1530710434937},{"_id":"public/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1530710434937},{"_id":"public/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1530710434937},{"_id":"public/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1530710434937},{"_id":"public/css/images/ironman.png","hash":"66575a11a3cfb5aeb3e5ca4a5b2bc77f8b60179b","modified":1530710434937},{"_id":"public/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1530710434937},{"_id":"public/2018/07/BOM的常见内置方法和内置对象/BOM.png","hash":"718f50e924808d078472f109c6f9052d627aa83f","modified":1530710434937},{"_id":"public/2018/04/EntityFramework连接PostgreSQL数据库并添加迁移/Add-Mig.png","hash":"d8644c80cb7f0c1d6a6eda0ac2579a3d00cadebc","modified":1530710434937},{"_id":"public/2018/04/EntityFramework连接PostgreSQL数据库并添加迁移/NuGetPackage.png","hash":"94b54fef06d394197e395f1949d47d9a55b5dd9e","modified":1530710434937},{"_id":"public/2018/04/EntityFramework连接PostgreSQL数据库并添加迁移/database.png","hash":"5c0601540e7ab73d471f7da043c1073030a9137a","modified":1530710434938},{"_id":"public/2018/04/EntityFramework连接PostgreSQL数据库并添加迁移/uodate.png","hash":"eb64f33b1a25128e2f964b196b6bc521afe1bd2e","modified":1530710434938},{"_id":"public/2018/05/Drupal8安装说明/DrupalDatabases.png","hash":"ae808573c8cdd44d63f93f515afe7581b191d593","modified":1530710434938},{"_id":"public/2018/05/Drupal8安装说明/HostSetting.png","hash":"b1dbd307ee5722a2f73168979f08f48a0fecfa0e","modified":1530710434938},{"_id":"public/2018/05/Drupal8安装说明/HostSettingError.png","hash":"9278f2326586283989d7755df76d5a483c9f37ef","modified":1530710434938},{"_id":"public/2018/05/Drupal8安装说明/adminFanyi.png","hash":"e41b0fbeb90ccb6ae8a472e3c8dccba59e1f98b5","modified":1530710434938},{"_id":"public/2018/05/Drupal8安装说明/chown.png","hash":"8abe1e86487981260caaf886af78b064bf2a0693","modified":1530710434938},{"_id":"public/2018/05/Drupal8安装说明/chownHtaccess.png","hash":"d1f39727d7ba92471285cbd159ac28b6d8538224","modified":1530710434938},{"_id":"public/2018/05/Drupal8安装说明/hello.png","hash":"49410d5007cea748210a57f0ca353bda647c6228","modified":1530710434938},{"_id":"public/2018/05/Drupal8安装说明/htaccess.png","hash":"66d29680895f025f4ebbdfcdf55060f0a03d1628","modified":1530710434938},{"_id":"public/2018/05/Drupal8安装说明/installDrupalOK.png","hash":"73c4c5f25b1bb9e9d02445730ca54c8d75396beb","modified":1530710434938},{"_id":"public/2018/05/Drupal8安装说明/settingsConfig.png","hash":"095861293c69319109eb2d97ecade4c30b88577a","modified":1530710434938},{"_id":"public/2018/05/Drupal8安装说明/startHttpd.png","hash":"6416ba8da24092e77cd9b38960a667a7d35ab4ae","modified":1530710434938},{"_id":"public/2018/05/Drupal8安装说明/translatorInput.png","hash":"2b81f5e1696d3791f5e1585f71df2758a1a69853","modified":1530710434938},{"_id":"public/2018/05/Drupal8安装说明/updateHttpd.png","hash":"7c00781eb19af69ff6983a344ac829e23ccfd117","modified":1530710434939},{"_id":"public/2018/05/Drupal8安装说明/wgetDrupal.png","hash":"1479022fbfd9424813df44f48c170e37b0ddaf41","modified":1530710434939},{"_id":"public/img/header_img/Iron-Man-3.webp","hash":"9dcfa38543da4b2a6b5c293a671fdb54e6270da1","modified":1530710435202},{"_id":"public/img/header_img/archive-bg.jpg","hash":"5a18606b468f450b4caba258c42d4bba2b21084f","modified":1530710435204},{"_id":"public/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1530710435205},{"_id":"public/2017/04/hexo-theme-beantech/Demo.webp","hash":"3d75851520ed2adae9dcb200d7f3731ec25e0fd6","modified":1530710435206},{"_id":"public/2018/05/Drupal8安装说明/StandardDrupal.png","hash":"6380acb1d2c2d6dcf22179a5be2fa9a31ceb5e84","modified":1530710435206},{"_id":"public/2018/05/Drupal8安装说明/adminPanl.png","hash":"fdf30cc99d04b1ad22fdcdeb9d89b2582ae52d86","modified":1530710435206},{"_id":"public/2018/05/Drupal8安装说明/installCreateUser.png","hash":"989631f475aefc12c581b78caacfaffe59ed145e","modified":1530710435206},{"_id":"public/2018/05/Drupal8安装说明/stttingDrupal.png","hash":"2fb5fab301474ce4fa675ba740d8e474352bbf11","modified":1530710435206},{"_id":"public/css/archive.css","hash":"8db895ebaeff19ac145c961abcfd5d4a8d67a8ea","modified":1530710435223},{"_id":"public/css/highlight.css","hash":"03d1f0a648e9bdf7b1f57d217313cbac5d0c7eb1","modified":1530710435223},{"_id":"public/css/rocket.css","hash":"cc7482b850d4c9f0d87052d8d2d69ed46c9fc4f8","modified":1530710435223},{"_id":"public/css/signature.css","hash":"820fa4743cea34a61808cd8f7de528605c32d7e3","modified":1530710435223},{"_id":"public/css/toc.css","hash":"14f4eaed0e06f592e17afb0b959a3381569d6dfb","modified":1530710435223},{"_id":"public/css/widget.css","hash":"da95ad3f1938f24d20f1fa77d7a38f0c392b5ec8","modified":1530710435224},{"_id":"public/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1530710435224},{"_id":"public/js/hux-blog.min.js","hash":"a899c78089772c352c9baab584a47f2c323433d5","modified":1530710435224},{"_id":"public/js/jquery.categorycloud.js","hash":"65f0b9ea065cf3e97c1e40c94796c8f519292774","modified":1530710435224},{"_id":"public/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1530710435224},{"_id":"public/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1530710435224},{"_id":"public/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1530710435224},{"_id":"public/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1530710435224},{"_id":"public/css/beantech.css","hash":"47bfeb68a78cc725bd9001708b46d8f296b98957","modified":1530710435224},{"_id":"public/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1530710435224},{"_id":"public/css/beantech.min.css","hash":"6463e5c8f79ce79b36d3025aae2194d02274700c","modified":1530710435224},{"_id":"public/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1530710435224},{"_id":"public/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1530710435224},{"_id":"public/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1530710435224},{"_id":"public/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1530710435224},{"_id":"public/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1530710435225},{"_id":"public/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1530710435225},{"_id":"public/img/404-bg.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1530710435225},{"_id":"public/img/header_img/Iron-Man-3.jpg","hash":"725538fd2f6328e122dc5d32b0f682fd2c13c169","modified":1530710435225},{"_id":"public/img/header_img/tag-bg.jpg","hash":"22c13777c081966fd6753602321786e229491be3","modified":1530710435226},{"_id":"public/img/header_img/tag-bg.webp","hash":"79a092be8f29acd68eafacd464c69afea7a1779e","modified":1530710435226},{"_id":"public/2018/04/EntityFramework连接PostgreSQL数据库并添加迁移/0180424083706.png","hash":"1db0aa1c70b6bdaff286a33c0666686a6ff85676","modified":1530710435226},{"_id":"public/2018/05/Drupal8安装说明/adminMenu.png","hash":"460ff0a5951dc7d2a1257c231468f2179c900cf3","modified":1530710435226},{"_id":"public/2018/05/Drupal8安装说明/installDetail.png","hash":"bc2eb0d10c8d8e71f622c7bcabf67fc55d3fbdaf","modified":1530710435227},{"_id":"public/2018/05/Drupal8安装说明/settingWeb.png","hash":"570f204c5a97f510a18a4280249cf7ab73b795e2","modified":1530710435231},{"_id":"public/2017/04/hexo-theme-beantech/home_posts_tag-false.png","hash":"86a3a4320012981f2d42eabc6ea172425f2f941a","modified":1530710435232},{"_id":"public/2018/05/Drupal8安装说明/installConfig.png","hash":"e198a2deb93412fa25aa3a2c507e827c86a8e2f2","modified":1530710435245},{"_id":"public/2017/04/hexo-theme-beantech/home_posts_tag-true.png","hash":"a704520b43f26b88d650098f60689af3af5eb106","modified":1530710435246},{"_id":"public/img/ironman-draw.jpg","hash":"86ab868d7a253531c337162310ffa0be46bf0855","modified":1530710435266},{"_id":"public/img/header_img/home-bg-2-dark.jpg","hash":"06b78164fc7930d91b22fcf6f0b3684670a807f3","modified":1530710435266},{"_id":"public/img/header_img/home-bg-2-dark.webp","hash":"ab1fef1a3685705f92603aca7a2881dac5278d0e","modified":1530710435280},{"_id":"public/2018/05/Drupal8安装说明/installDrupal.png","hash":"c8fd99955a90186250280a420bc3060c01fd8120","modified":1530710435319}],"Category":[{"name":"ASP.NET","_id":"cjj75gxvj0005tktuoq0q5cd0"},{"name":"问题总结","_id":"cjj75gxvr000btktuhxos4vsq"},{"name":"代码托管","_id":"cjj75gxvx000htktuea6dkd3z"},{"name":"前端","_id":"cjj75gxwj000stktuq08et6hb"},{"name":"CMS","_id":"cjj75gxwm000xtktuzu67ahmm"},{"name":"编辑器","_id":"cjj75gxwo0011tktu6n0wtd65"},{"name":"数据库","_id":"cjj75gxwp0014tktuujbgk3tz"},{"name":"教程","_id":"cjj75gxwr0019tktupkxjgcta"}],"Data":[],"Page":[{"layout":"404","description":"你来到了没有知识的荒原 :(","header-img":"img/404-bg.jpg","_content":"\n","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原 :(\"\nheader-img: \"img/404-bg.jpg\"\n---\n\n","date":"2018-04-26T13:22:34.087Z","updated":"2018-04-26T13:22:34.087Z","path":"404.html","title":"","comments":1,"_id":"cjj75gxtu0000tktuh94cgy1b","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"About","description":"每天对未来都充满恐惧，所以要在成长的路长不断前行","header-img":"img/header_img/Iron-Man-3.jpg","comments":0,"_content":"\n> 愿你出走半生，归来仍是少年！\n\n","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"About\"\ndescription: \"每天对未来都充满恐惧，所以要在成长的路长不断前行\"\nheader-img: \"img/header_img/Iron-Man-3.jpg\"\ncomments: false\n---\n\n> 愿你出走半生，归来仍是少年！\n\n","date":"2018-04-29T02:12:00.784Z","updated":"2018-04-29T02:12:00.784Z","path":"about/index.html","_id":"cjj75gxvf0002tktuuvsuolol","content":"<blockquote>\n<p>愿你出走半生，归来仍是少年！</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>愿你出走半生，归来仍是少年！</p>\n</blockquote>\n"},{"layout":"archive","title":"Archives","header-img":"img/header_img/archive-bg.jpg","description":"挺喜欢技术，但也不愿宅","_content":"","source":"archive/index.md","raw":"---\nlayout: \"archive\"\ntitle: \"Archives\"\nheader-img: \"img/header_img/archive-bg.jpg\"\ndescription: \"挺喜欢技术，但也不愿宅\"\n---\n","date":"2018-04-29T02:07:40.125Z","updated":"2018-04-29T02:07:40.125Z","path":"archive/index.html","comments":1,"_id":"cjj75gxvi0004tktun13w2z84","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"category","title":"","description":"就会这么点东西，你还有什么借口不去努力","header-img":"img/header_img/tag-bg.jpg","_content":"","source":"category/index.md","raw":"---\nlayout: \"category\"\ntitle: \ndescription: \"就会这么点东西，你还有什么借口不去努力\"\nheader-img: \"img/header_img/tag-bg.jpg\"\n---\n","date":"2018-04-29T02:39:12.482Z","updated":"2018-04-29T02:39:12.482Z","path":"category/index.html","comments":1,"_id":"cjj75gxvm0008tktud4hs7em1","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"tag","title":"Tags","description":"就会这么点东西，你还有什么借口不去努力","header-img":"img/header_img/tag-bg.jpg","_content":"","source":"tag/index.md","raw":"---\nlayout: \"tag\"\ntitle: \"Tags\"\ndescription: \"就会这么点东西，你还有什么借口不去努力\"\nheader-img: \"img/header_img/tag-bg.jpg\"\n---\n","date":"2018-04-29T02:39:16.421Z","updated":"2018-04-29T02:39:16.420Z","path":"tag/index.html","comments":1,"_id":"cjj75gxxa001ptktu3524kuct","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"EntityFramework连接PostgreSQL数据库并添加迁移","catalog":true,"date":"2018-04-23T07:06:32.000Z","subtitle":null,"header-img":null,"_content":"\n> 开发环境：EntityFrameworkCore 2.02 AspNetCore 2.0\n> IDE: Visual Studio 2017\n> 数据库：PostgreSQL 9.6\n\n# 新建数据库\n通过PostgreSQL GUI管理工具pgAdmin 创建一个数据库  \n","source":"_posts/2018-04-23-EntityFramework连接PostgreSQL数据库并添加迁移.md","raw":"---\ntitle: EntityFramework连接PostgreSQL数据库并添加迁移\ncatalog: true\ndate: 2018-04-23 15:06:32\nsubtitle:\nheader-img:\ntags:\n- EntityFramework\ncategory:\n- ASP.NET\n---\n\n> 开发环境：EntityFrameworkCore 2.02 AspNetCore 2.0\n> IDE: Visual Studio 2017\n> 数据库：PostgreSQL 9.6\n\n# 新建数据库\n通过PostgreSQL GUI管理工具pgAdmin 创建一个数据库  \n","slug":"EntityFramework连接PostgreSQL数据库并添加迁移","published":1,"updated":"2018-05-24T05:06:30.955Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj75gxvb0001tktuxr85dulf","content":"<blockquote>\n<p>开发环境：EntityFrameworkCore 2.02 AspNetCore 2.0<br>\nIDE: Visual Studio 2017<br>\n数据库：PostgreSQL 9.6</p>\n</blockquote>\n<h1>新建数据库</h1>\n<p>通过PostgreSQL GUI管理工具pgAdmin 创建一个数据库</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>开发环境：EntityFrameworkCore 2.02 AspNetCore 2.0<br>\nIDE: Visual Studio 2017<br>\n数据库：PostgreSQL 9.6</p>\n</blockquote>\n<h1>新建数据库</h1>\n<p>通过PostgreSQL GUI管理工具pgAdmin 创建一个数据库</p>\n"},{"title":"使用hexo搭建个人博客遇到的问题及解决方法","catalog":true,"date":"2018-03-25T13:34:11.000Z","subtitle":null,"header-img":null,"_content":"\n# 文章目录锚点指向 #undefined\n参考资料：  \nhttps://github.com/ppoffice/hexo-theme-icarus/issues/286  \n解决问题还是Google好使啊，百度搜半天没找到  \n原因：使用的hexo-toc插件和Hexo中的toc不能同时使用  \n解决办法：卸载hexo-toc插件，并在 _config.yml文件中添加配置：  \n```yml\nmarkdown:\n  anchors:\n    level: 2              ## 为二级以上的标题添加目录\n    permalinkSymbol: ''\n  render:\n    html: true        ## 不转义HTML内容\n    xhtmlOut: false\n    breaks: true        ## 文本换行\n    linkify: true       ## 呈现链接\n    typographer: true\n    quotes: '“”‘’'\n```\n\n","source":"_posts/2018-03-25-使用hexo搭建个人博客遇到的问题及解决方法.md","raw":"---\ntitle: 使用hexo搭建个人博客遇到的问题及解决方法\ncatalog: true\ndate: 2018-03-25 21:34:11\nsubtitle:\nheader-img:\ntags:\n- hexo \n- 博客\ncategory:\n- 问题总结\n---\n\n# 文章目录锚点指向 #undefined\n参考资料：  \nhttps://github.com/ppoffice/hexo-theme-icarus/issues/286  \n解决问题还是Google好使啊，百度搜半天没找到  \n原因：使用的hexo-toc插件和Hexo中的toc不能同时使用  \n解决办法：卸载hexo-toc插件，并在 _config.yml文件中添加配置：  \n```yml\nmarkdown:\n  anchors:\n    level: 2              ## 为二级以上的标题添加目录\n    permalinkSymbol: ''\n  render:\n    html: true        ## 不转义HTML内容\n    xhtmlOut: false\n    breaks: true        ## 文本换行\n    linkify: true       ## 呈现链接\n    typographer: true\n    quotes: '“”‘’'\n```\n\n","slug":"使用hexo搭建个人博客遇到的问题及解决方法","published":1,"updated":"2018-04-26T14:48:31.980Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj75gxvg0003tktunwgsu7v5","content":"<h1>文章目录锚点指向 #undefined</h1>\n<p>参考资料：<br>\n<a href=\"https://github.com/ppoffice/hexo-theme-icarus/issues/286\" target=\"_blank\" rel=\"noopener\">https://github.com/ppoffice/hexo-theme-icarus/issues/286</a><br>\n解决问题还是Google好使啊，百度搜半天没找到<br>\n原因：使用的hexo-toc插件和Hexo中的toc不能同时使用<br>\n解决办法：卸载hexo-toc插件，并在 _config.yml文件中添加配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\"><span class=\"attr\">  anchors:</span></span><br><span class=\"line\"><span class=\"attr\">    level:</span> <span class=\"number\">2</span>              <span class=\"comment\">## 为二级以上的标题添加目录</span></span><br><span class=\"line\"><span class=\"attr\">    permalinkSymbol:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">  render:</span></span><br><span class=\"line\"><span class=\"attr\">    html:</span> <span class=\"literal\">true</span>        <span class=\"comment\">## 不转义HTML内容</span></span><br><span class=\"line\"><span class=\"attr\">    xhtmlOut:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">    breaks:</span> <span class=\"literal\">true</span>        <span class=\"comment\">## 文本换行</span></span><br><span class=\"line\"><span class=\"attr\">    linkify:</span> <span class=\"literal\">true</span>       <span class=\"comment\">## 呈现链接</span></span><br><span class=\"line\"><span class=\"attr\">    typographer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    quotes:</span> <span class=\"string\">'“”‘’'</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1>文章目录锚点指向 #undefined</h1>\n<p>参考资料：<br>\n<a href=\"https://github.com/ppoffice/hexo-theme-icarus/issues/286\" target=\"_blank\" rel=\"noopener\">https://github.com/ppoffice/hexo-theme-icarus/issues/286</a><br>\n解决问题还是Google好使啊，百度搜半天没找到<br>\n原因：使用的hexo-toc插件和Hexo中的toc不能同时使用<br>\n解决办法：卸载hexo-toc插件，并在 _config.yml文件中添加配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\"><span class=\"attr\">  anchors:</span></span><br><span class=\"line\"><span class=\"attr\">    level:</span> <span class=\"number\">2</span>              <span class=\"comment\">## 为二级以上的标题添加目录</span></span><br><span class=\"line\"><span class=\"attr\">    permalinkSymbol:</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"attr\">  render:</span></span><br><span class=\"line\"><span class=\"attr\">    html:</span> <span class=\"literal\">true</span>        <span class=\"comment\">## 不转义HTML内容</span></span><br><span class=\"line\"><span class=\"attr\">    xhtmlOut:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">    breaks:</span> <span class=\"literal\">true</span>        <span class=\"comment\">## 文本换行</span></span><br><span class=\"line\"><span class=\"attr\">    linkify:</span> <span class=\"literal\">true</span>       <span class=\"comment\">## 呈现链接</span></span><br><span class=\"line\"><span class=\"attr\">    typographer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    quotes:</span> <span class=\"string\">'“”‘’'</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Git使用 (一)","catalog":true,"date":"2018-04-23T03:19:39.000Z","subtitle":null,"header-img":null,"_content":"> 创建版本库、版本回退、工作区和暂存区、管理修改、撤销修改、删除文件\n\n---\n\n## 创建版本库\n初始化一个仓库： git init  \n添加文件到Git 仓库： git add fileName 可以多次使用，添加多个文件  \n使用git commit命令提交到git:  git commit  \n查看工作区的状态: git status  \n如果状态说文件被修改过：  使用 git diff  查看被修改的内容\n\n## 版本回退\nHEAD 指向的版本是当前版本， Git 允许我们在历史版本中穿梭  \n查看提交历史：  git log  确定要回退到哪个版本  \n查看历史命令：  git reflog    \n跳转版本 :git reset --hard commit_id(提交的id)或者HEAD^(上一个版本\n\n## 工作区和暂存区\n工作区：就是你项目的文件夹  \n版本库（Repository)： 工作区中的一个隐藏的文件夹.git 是git的版本库  \n暂存区： Git版本库中有很多东西，最重要的就是stage暂存区（或者叫index)的暂存区，还有Git为我们自动创建的第一个分支master,以及指向master的一个指针叫HEAD  \ngit add 命令实际上是要把提交的所有更改放到了暂存区（Stage)，然后，执行 git commit 就可以一次性的把暂存区的所有修改提交到分支\n\n## 管理修改\n每次修改，如果不add到暂存区，那就不会加入到commit中\n\n## 撤销修改\n在还没add到暂存区之前\n使用 git checkout --file 可以让这个文件回到最近一次 git commit 或者 git add时的状态  \n乱改了工作区的某个文件内容，又添加到了暂存区，想要丢弃更改。要分两部：  \n1、第一个命令：git reset HEAD file(文件名)，就把文件从暂存区清除了  \n2、然后再执行  git checkout -- file 回到。。。。。状态\n\n## 删除文件\n在工作区中删除了文件、但是你之前已经提交过文件  \n使用 git status命令去查看git的状态，它会告诉你那些文件被删除了  \n想要恢复删除的文件?  \n使用 git checkout -- file 命令，使用版本库的版本替换工作区的版本，无论是删除还是修改，都可以一键还原，，，，（只能恢复到版本库中的最新版本，会丢失最近一次提交后你修改的内容）  \n想要彻底删除这个文件？   使用 git rm file(文件名) 再git commit 提交\n\n","source":"_posts/2018-04-23-Git使用（一）.md","raw":"---\ntitle: Git使用 (一)\ncatalog: true\ndate: 2018-04-23 11:19:39\nsubtitle: \nheader-img:\ntags: Git\ncategory: 代码托管\n---\n> 创建版本库、版本回退、工作区和暂存区、管理修改、撤销修改、删除文件\n\n---\n\n## 创建版本库\n初始化一个仓库： git init  \n添加文件到Git 仓库： git add fileName 可以多次使用，添加多个文件  \n使用git commit命令提交到git:  git commit  \n查看工作区的状态: git status  \n如果状态说文件被修改过：  使用 git diff  查看被修改的内容\n\n## 版本回退\nHEAD 指向的版本是当前版本， Git 允许我们在历史版本中穿梭  \n查看提交历史：  git log  确定要回退到哪个版本  \n查看历史命令：  git reflog    \n跳转版本 :git reset --hard commit_id(提交的id)或者HEAD^(上一个版本\n\n## 工作区和暂存区\n工作区：就是你项目的文件夹  \n版本库（Repository)： 工作区中的一个隐藏的文件夹.git 是git的版本库  \n暂存区： Git版本库中有很多东西，最重要的就是stage暂存区（或者叫index)的暂存区，还有Git为我们自动创建的第一个分支master,以及指向master的一个指针叫HEAD  \ngit add 命令实际上是要把提交的所有更改放到了暂存区（Stage)，然后，执行 git commit 就可以一次性的把暂存区的所有修改提交到分支\n\n## 管理修改\n每次修改，如果不add到暂存区，那就不会加入到commit中\n\n## 撤销修改\n在还没add到暂存区之前\n使用 git checkout --file 可以让这个文件回到最近一次 git commit 或者 git add时的状态  \n乱改了工作区的某个文件内容，又添加到了暂存区，想要丢弃更改。要分两部：  \n1、第一个命令：git reset HEAD file(文件名)，就把文件从暂存区清除了  \n2、然后再执行  git checkout -- file 回到。。。。。状态\n\n## 删除文件\n在工作区中删除了文件、但是你之前已经提交过文件  \n使用 git status命令去查看git的状态，它会告诉你那些文件被删除了  \n想要恢复删除的文件?  \n使用 git checkout -- file 命令，使用版本库的版本替换工作区的版本，无论是删除还是修改，都可以一键还原，，，，（只能恢复到版本库中的最新版本，会丢失最近一次提交后你修改的内容）  \n想要彻底删除这个文件？   使用 git rm file(文件名) 再git commit 提交\n\n","slug":"Git使用（一）","published":1,"updated":"2018-04-23T14:18:12.749Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj75gxvl0007tktut411t61x","content":"<blockquote>\n<p>创建版本库、版本回退、工作区和暂存区、管理修改、撤销修改、删除文件</p>\n</blockquote>\n<hr>\n<h2 id=\"创建版本库\">创建版本库</h2>\n<p>初始化一个仓库： git init<br>\n添加文件到Git 仓库： git add fileName 可以多次使用，添加多个文件<br>\n使用git commit命令提交到git:  git commit<br>\n查看工作区的状态: git status<br>\n如果状态说文件被修改过：  使用 git diff  查看被修改的内容</p>\n<h2 id=\"版本回退\">版本回退</h2>\n<p>HEAD 指向的版本是当前版本， Git 允许我们在历史版本中穿梭<br>\n查看提交历史：  git log  确定要回退到哪个版本<br>\n查看历史命令：  git reflog<br>\n跳转版本 :git reset --hard commit_id(提交的id)或者HEAD^(上一个版本</p>\n<h2 id=\"工作区和暂存区\">工作区和暂存区</h2>\n<p>工作区：就是你项目的文件夹<br>\n版本库（Repository)： 工作区中的一个隐藏的文件夹.git 是git的版本库<br>\n暂存区： Git版本库中有很多东西，最重要的就是stage暂存区（或者叫index)的暂存区，还有Git为我们自动创建的第一个分支master,以及指向master的一个指针叫HEAD<br>\ngit add 命令实际上是要把提交的所有更改放到了暂存区（Stage)，然后，执行 git commit 就可以一次性的把暂存区的所有修改提交到分支</p>\n<h2 id=\"管理修改\">管理修改</h2>\n<p>每次修改，如果不add到暂存区，那就不会加入到commit中</p>\n<h2 id=\"撤销修改\">撤销修改</h2>\n<p>在还没add到暂存区之前<br>\n使用 git checkout --file 可以让这个文件回到最近一次 git commit 或者 git add时的状态<br>\n乱改了工作区的某个文件内容，又添加到了暂存区，想要丢弃更改。要分两部：<br>\n1、第一个命令：git reset HEAD file(文件名)，就把文件从暂存区清除了<br>\n2、然后再执行  git checkout – file 回到。。。。。状态</p>\n<h2 id=\"删除文件\">删除文件</h2>\n<p>在工作区中删除了文件、但是你之前已经提交过文件<br>\n使用 git status命令去查看git的状态，它会告诉你那些文件被删除了<br>\n想要恢复删除的文件?<br>\n使用 git checkout – file 命令，使用版本库的版本替换工作区的版本，无论是删除还是修改，都可以一键还原，，，，（只能恢复到版本库中的最新版本，会丢失最近一次提交后你修改的内容）<br>\n想要彻底删除这个文件？   使用 git rm file(文件名) 再git commit 提交</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>创建版本库、版本回退、工作区和暂存区、管理修改、撤销修改、删除文件</p>\n</blockquote>\n<hr>\n<h2 id=\"创建版本库\">创建版本库</h2>\n<p>初始化一个仓库： git init<br>\n添加文件到Git 仓库： git add fileName 可以多次使用，添加多个文件<br>\n使用git commit命令提交到git:  git commit<br>\n查看工作区的状态: git status<br>\n如果状态说文件被修改过：  使用 git diff  查看被修改的内容</p>\n<h2 id=\"版本回退\">版本回退</h2>\n<p>HEAD 指向的版本是当前版本， Git 允许我们在历史版本中穿梭<br>\n查看提交历史：  git log  确定要回退到哪个版本<br>\n查看历史命令：  git reflog<br>\n跳转版本 :git reset --hard commit_id(提交的id)或者HEAD^(上一个版本</p>\n<h2 id=\"工作区和暂存区\">工作区和暂存区</h2>\n<p>工作区：就是你项目的文件夹<br>\n版本库（Repository)： 工作区中的一个隐藏的文件夹.git 是git的版本库<br>\n暂存区： Git版本库中有很多东西，最重要的就是stage暂存区（或者叫index)的暂存区，还有Git为我们自动创建的第一个分支master,以及指向master的一个指针叫HEAD<br>\ngit add 命令实际上是要把提交的所有更改放到了暂存区（Stage)，然后，执行 git commit 就可以一次性的把暂存区的所有修改提交到分支</p>\n<h2 id=\"管理修改\">管理修改</h2>\n<p>每次修改，如果不add到暂存区，那就不会加入到commit中</p>\n<h2 id=\"撤销修改\">撤销修改</h2>\n<p>在还没add到暂存区之前<br>\n使用 git checkout --file 可以让这个文件回到最近一次 git commit 或者 git add时的状态<br>\n乱改了工作区的某个文件内容，又添加到了暂存区，想要丢弃更改。要分两部：<br>\n1、第一个命令：git reset HEAD file(文件名)，就把文件从暂存区清除了<br>\n2、然后再执行  git checkout – file 回到。。。。。状态</p>\n<h2 id=\"删除文件\">删除文件</h2>\n<p>在工作区中删除了文件、但是你之前已经提交过文件<br>\n使用 git status命令去查看git的状态，它会告诉你那些文件被删除了<br>\n想要恢复删除的文件?<br>\n使用 git checkout – file 命令，使用版本库的版本替换工作区的版本，无论是删除还是修改，都可以一键还原，，，，（只能恢复到版本库中的最新版本，会丢失最近一次提交后你修改的内容）<br>\n想要彻底删除这个文件？   使用 git rm file(文件名) 再git commit 提交</p>\n"},{"title":"Git使用（二）","catalog":true,"date":"2018-04-23T04:54:25.000Z","subtitle":null,"header-img":null,"_content":"> 远程仓库、添加远程仓库、从远程库克隆、创建与合并分支、解决冲突、分支管理策略\n> bug分支、feature分支、多人协作\n\n## 远程仓库\n可以使用gitHub ，也可以自己搭建git服务器  \n使用githun：创建SSH Key 创建了之后再“用户”主目录下会有一个.ssh的文件夹  \n如果没有，使用 Git Bash 创建SSH Key：\nssh-keygen -t rsa -C \"chuntain997@gmail.com\"  一路回车就行，没啥重要的无需设置密码  \n完成之后，在用户主目录中会有有一个 .ssh的文件夹，里面有id_rsa和id_rsa.pub两个文件，id_rsa是私钥，不能泄露 ，id_rsa是共钥，可以谁便说 反正没私钥也没啥用  \n然后就在gitHub 中添加这个公钥吧。GitHub只有知道了你的工钥才能知道这个文件是你自己推送的\n\n## 添加远程仓库\n要关联一个远程库，使用命令：git remote add origin(注释) git@server-name:path/repo-name.git  \norigin:远程库的名字就是origin，这是Git默认的叫法，也可以改成别的  \n关联远程库之后使用，命令：git push -u origin master  第一次推送master的所有的内容；   -u参数，不但会推送，还会关联master分支  \n以后，每次提交后，只要有需要，就可以使用命令：git push origin master 推送最新修改\n\n## 从远程库克隆\n1、获得远程库的地址 2、使用git clone 克隆一个本地库  \n命令:git clone   git clone git@github.com:Mandy997/Mandy997.github.io.git  \nGit不但支持ssh协议,还支持https等其他协议，默认使用git://使用ssh\n使用http不但速度慢 而且每次推送都必须输入口令\n\n## 创建与合并分支\n每次提交，Git都把他们串成一条线，这条时间线就是一个分支，一开始有一个指针，就是主分支master,然后你想增加一个分支dev,在这条时间线上就增加了一个指针dev,它指向与master相同的提交，再把HEAD指向dev，就表示当前分支在dev上了  \n如果在dev的工作完成了，就可以把dev合并到master上，git就会把master指向dev当前的提交，就完成了合并  \n创建dev分支命令:git branch dev  \n切换分支： git checkout dev  \n创建+切换分支命令： git checkout -b dev(分支名字)  \n合并某分支到当前分支：git merge name  \n删除分支: git branch -d name  \n查看分支：git branch\n\n## 解决冲突\n当master和另一个分支dev都有新的提交的时候。git无法执行“快速合并”,只能试着把各自的修改合并起来，但这种合并就可能有冲突。  \n使用命令：git merge name（分支名） 进行合并分支  \n有时候会出现这两句  \nCONFLICT (content): Merge conflict in readme.txt  \nAutomatic merge failed; fix conflicts and then commit the result.  \n就说明合并到分支冲突了，必须手动解决冲突后再提交。这时候我们就可以直接在ide中查看到冲突的内容  \n使用 git status 命令也可以告诉我们冲突的文件  \nGit用<<<<<<<，=======，>>>>>>>标记出不同分支的内容  \n修改之后，再次提交  \n使用带参数的git log 也可以看到分支合并的情况。。。  \ngit log --graph --pretty=oneline --abbrev-commit \n\n## 分支管理策略\n一般情况下，合并分支的时候，Git会用 Fast forward 模式，但在这种模式下，删除分支后，会丢掉分支信息  \n如果要强制禁用 Fast forwart 模式。Git 就会在 merge 时生成一个新的commit，这样，从分支历史上就可以看出分支信息了  \n准备合并分支的时候，注意使用 --no-ff参数，表示禁用 Fast forward，本次合并要创建一个新的commit，所以加上-m 参数，把commit的描述写进去  \n命令如下：git merge --no-ff -m \"merge with no-ff\" dev\n### 分支策略\n在实际开发中，我们应该按照几个基本原则进行分支管理：  \n首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；  \n那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；  \n你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。\n\n## Bug分支\n当出现Bug的时候，你要尽快去修复Bug .但是你手头上的工作只进行了一半还没有提交\n这时候就可以用到Git提供的一个'stash'功能，可以把当前的工作现场“储藏”起来，等以后恢复现场继续工作  \n储存工作现场命令： git stash  \n储藏完工作区 再用 git status 查看工作区，就是干净的。。这时候就可以放心的去创建分支修复bug  \n首先要确定在哪个分支修复bug,如果在master分支上修复，那就从master创建临时分支  \n修复完bug之后，继续切换到dev分支上干活，这时候使用 git status查看工作区状态还是干净的  \n使用命令：git stash list 查看刚才的工作现场  \nGit 把 stash 内容存放在了某个地方，但是要恢复一下，有两个办法：  \n使用命令：git stash apply 恢复，但是在恢复后，stash内容并不会删除，需要使用'git stash drop 删除'；  \n另一种方法就是用 git stash pop ,恢复的同时也可以把stash内容也删了  \n你也可以多次stash ， 恢复的时候，先用 git stash list查看，然后恢复到指定的stash,用命令：git stash apply stash@{0}\n\n## feature分支\n软件开发中，总是有不断地新功能要添加进来，添加一个新功能时，不会希望把主分支搞乱的  \n所以每添加一个新功能，最好新建一个 'Feature分支' 在这个分支上开发，完成之后再合并，最后删除\n\n## 多人协作\n查看远程库的信息： git remote  \n详细信息： git remote -v  \n向远程库推送：  \nmaster分支是主分支，因此要时刻与远程同步；  \ndev分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；  \nbug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug;  \nfeature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。","source":"_posts/2018-04-23-Git使用（二）.md","raw":"---\ntitle: Git使用（二）\ncatalog: true\ndate: 2018-04-23 12:54:25\nsubtitle:\nheader-img:\ntags: Git\ncategory: 代码托管\n---\n> 远程仓库、添加远程仓库、从远程库克隆、创建与合并分支、解决冲突、分支管理策略\n> bug分支、feature分支、多人协作\n\n## 远程仓库\n可以使用gitHub ，也可以自己搭建git服务器  \n使用githun：创建SSH Key 创建了之后再“用户”主目录下会有一个.ssh的文件夹  \n如果没有，使用 Git Bash 创建SSH Key：\nssh-keygen -t rsa -C \"chuntain997@gmail.com\"  一路回车就行，没啥重要的无需设置密码  \n完成之后，在用户主目录中会有有一个 .ssh的文件夹，里面有id_rsa和id_rsa.pub两个文件，id_rsa是私钥，不能泄露 ，id_rsa是共钥，可以谁便说 反正没私钥也没啥用  \n然后就在gitHub 中添加这个公钥吧。GitHub只有知道了你的工钥才能知道这个文件是你自己推送的\n\n## 添加远程仓库\n要关联一个远程库，使用命令：git remote add origin(注释) git@server-name:path/repo-name.git  \norigin:远程库的名字就是origin，这是Git默认的叫法，也可以改成别的  \n关联远程库之后使用，命令：git push -u origin master  第一次推送master的所有的内容；   -u参数，不但会推送，还会关联master分支  \n以后，每次提交后，只要有需要，就可以使用命令：git push origin master 推送最新修改\n\n## 从远程库克隆\n1、获得远程库的地址 2、使用git clone 克隆一个本地库  \n命令:git clone   git clone git@github.com:Mandy997/Mandy997.github.io.git  \nGit不但支持ssh协议,还支持https等其他协议，默认使用git://使用ssh\n使用http不但速度慢 而且每次推送都必须输入口令\n\n## 创建与合并分支\n每次提交，Git都把他们串成一条线，这条时间线就是一个分支，一开始有一个指针，就是主分支master,然后你想增加一个分支dev,在这条时间线上就增加了一个指针dev,它指向与master相同的提交，再把HEAD指向dev，就表示当前分支在dev上了  \n如果在dev的工作完成了，就可以把dev合并到master上，git就会把master指向dev当前的提交，就完成了合并  \n创建dev分支命令:git branch dev  \n切换分支： git checkout dev  \n创建+切换分支命令： git checkout -b dev(分支名字)  \n合并某分支到当前分支：git merge name  \n删除分支: git branch -d name  \n查看分支：git branch\n\n## 解决冲突\n当master和另一个分支dev都有新的提交的时候。git无法执行“快速合并”,只能试着把各自的修改合并起来，但这种合并就可能有冲突。  \n使用命令：git merge name（分支名） 进行合并分支  \n有时候会出现这两句  \nCONFLICT (content): Merge conflict in readme.txt  \nAutomatic merge failed; fix conflicts and then commit the result.  \n就说明合并到分支冲突了，必须手动解决冲突后再提交。这时候我们就可以直接在ide中查看到冲突的内容  \n使用 git status 命令也可以告诉我们冲突的文件  \nGit用<<<<<<<，=======，>>>>>>>标记出不同分支的内容  \n修改之后，再次提交  \n使用带参数的git log 也可以看到分支合并的情况。。。  \ngit log --graph --pretty=oneline --abbrev-commit \n\n## 分支管理策略\n一般情况下，合并分支的时候，Git会用 Fast forward 模式，但在这种模式下，删除分支后，会丢掉分支信息  \n如果要强制禁用 Fast forwart 模式。Git 就会在 merge 时生成一个新的commit，这样，从分支历史上就可以看出分支信息了  \n准备合并分支的时候，注意使用 --no-ff参数，表示禁用 Fast forward，本次合并要创建一个新的commit，所以加上-m 参数，把commit的描述写进去  \n命令如下：git merge --no-ff -m \"merge with no-ff\" dev\n### 分支策略\n在实际开发中，我们应该按照几个基本原则进行分支管理：  \n首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；  \n那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；  \n你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。\n\n## Bug分支\n当出现Bug的时候，你要尽快去修复Bug .但是你手头上的工作只进行了一半还没有提交\n这时候就可以用到Git提供的一个'stash'功能，可以把当前的工作现场“储藏”起来，等以后恢复现场继续工作  \n储存工作现场命令： git stash  \n储藏完工作区 再用 git status 查看工作区，就是干净的。。这时候就可以放心的去创建分支修复bug  \n首先要确定在哪个分支修复bug,如果在master分支上修复，那就从master创建临时分支  \n修复完bug之后，继续切换到dev分支上干活，这时候使用 git status查看工作区状态还是干净的  \n使用命令：git stash list 查看刚才的工作现场  \nGit 把 stash 内容存放在了某个地方，但是要恢复一下，有两个办法：  \n使用命令：git stash apply 恢复，但是在恢复后，stash内容并不会删除，需要使用'git stash drop 删除'；  \n另一种方法就是用 git stash pop ,恢复的同时也可以把stash内容也删了  \n你也可以多次stash ， 恢复的时候，先用 git stash list查看，然后恢复到指定的stash,用命令：git stash apply stash@{0}\n\n## feature分支\n软件开发中，总是有不断地新功能要添加进来，添加一个新功能时，不会希望把主分支搞乱的  \n所以每添加一个新功能，最好新建一个 'Feature分支' 在这个分支上开发，完成之后再合并，最后删除\n\n## 多人协作\n查看远程库的信息： git remote  \n详细信息： git remote -v  \n向远程库推送：  \nmaster分支是主分支，因此要时刻与远程同步；  \ndev分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；  \nbug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug;  \nfeature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。","slug":"Git使用（二）","published":1,"updated":"2018-04-23T04:57:40.702Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj75gxvo0009tktu5oy3er95","content":"<blockquote>\n<p>远程仓库、添加远程仓库、从远程库克隆、创建与合并分支、解决冲突、分支管理策略<br>\nbug分支、feature分支、多人协作</p>\n</blockquote>\n<h2 id=\"远程仓库\">远程仓库</h2>\n<p>可以使用gitHub ，也可以自己搭建git服务器<br>\n使用githun：创建SSH Key 创建了之后再“用户”主目录下会有一个.ssh的文件夹<br>\n如果没有，使用 Git Bash 创建SSH Key：<br>\nssh-keygen -t rsa -C <a href=\"mailto:%22chuntain997@gmail.com\" target=\"_blank\" rel=\"noopener\">&quot;chuntain997@gmail.com</a>&quot;  一路回车就行，没啥重要的无需设置密码<br>\n完成之后，在用户主目录中会有有一个 .ssh的文件夹，里面有id_rsa和id_rsa.pub两个文件，id_rsa是私钥，不能泄露 ，id_rsa是共钥，可以谁便说 反正没私钥也没啥用<br>\n然后就在gitHub 中添加这个公钥吧。GitHub只有知道了你的工钥才能知道这个文件是你自己推送的</p>\n<h2 id=\"添加远程仓库\">添加远程仓库</h2>\n<p>要关联一个远程库，使用命令：git remote add origin(注释) git@server-name:path/repo-name.git<br>\norigin:远程库的名字就是origin，这是Git默认的叫法，也可以改成别的<br>\n关联远程库之后使用，命令：git push -u origin master  第一次推送master的所有的内容；   -u参数，不但会推送，还会关联master分支<br>\n以后，每次提交后，只要有需要，就可以使用命令：git push origin master 推送最新修改</p>\n<h2 id=\"从远程库克隆\">从远程库克隆</h2>\n<p>1、获得远程库的地址 2、使用git clone 克隆一个本地库<br>\n命令:git clone   git clone <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:Mandy997/Mandy997.github.io.git<br>\nGit不但支持ssh协议,还支持https等其他协议，默认使用git://使用ssh<br>\n使用http不但速度慢 而且每次推送都必须输入口令</p>\n<h2 id=\"创建与合并分支\">创建与合并分支</h2>\n<p>每次提交，Git都把他们串成一条线，这条时间线就是一个分支，一开始有一个指针，就是主分支master,然后你想增加一个分支dev,在这条时间线上就增加了一个指针dev,它指向与master相同的提交，再把HEAD指向dev，就表示当前分支在dev上了<br>\n如果在dev的工作完成了，就可以把dev合并到master上，git就会把master指向dev当前的提交，就完成了合并<br>\n创建dev分支命令:git branch dev<br>\n切换分支： git checkout dev<br>\n创建+切换分支命令： git checkout -b dev(分支名字)<br>\n合并某分支到当前分支：git merge name<br>\n删除分支: git branch -d name<br>\n查看分支：git branch</p>\n<h2 id=\"解决冲突\">解决冲突</h2>\n<p>当master和另一个分支dev都有新的提交的时候。git无法执行“快速合并”,只能试着把各自的修改合并起来，但这种合并就可能有冲突。<br>\n使用命令：git merge name（分支名） 进行合并分支<br>\n有时候会出现这两句<br>\nCONFLICT (content): Merge conflict in readme.txt<br>\nAutomatic merge failed; fix conflicts and then commit the result.<br>\n就说明合并到分支冲突了，必须手动解决冲突后再提交。这时候我们就可以直接在ide中查看到冲突的内容<br>\n使用 git status 命令也可以告诉我们冲突的文件<br>\nGit用&lt;&lt;&lt;&lt;&lt;&lt;&lt;，=======，&gt;&gt;&gt;&gt;&gt;&gt;&gt;标记出不同分支的内容<br>\n修改之后，再次提交<br>\n使用带参数的git log 也可以看到分支合并的情况。。。<br>\ngit log --graph --pretty=oneline --abbrev-commit</p>\n<h2 id=\"分支管理策略\">分支管理策略</h2>\n<p>一般情况下，合并分支的时候，Git会用 Fast forward 模式，但在这种模式下，删除分支后，会丢掉分支信息<br>\n如果要强制禁用 Fast forwart 模式。Git 就会在 merge 时生成一个新的commit，这样，从分支历史上就可以看出分支信息了<br>\n准备合并分支的时候，注意使用 --no-ff参数，表示禁用 Fast forward，本次合并要创建一个新的commit，所以加上-m 参数，把commit的描述写进去<br>\n命令如下：git merge --no-ff -m “merge with no-ff” dev</p>\n<h3 id=\"分支策略\">分支策略</h3>\n<p>在实际开发中，我们应该按照几个基本原则进行分支管理：<br>\n首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；<br>\n那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；<br>\n你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。</p>\n<h2 id=\"bug分支\">Bug分支</h2>\n<p>当出现Bug的时候，你要尽快去修复Bug .但是你手头上的工作只进行了一半还没有提交<br>\n这时候就可以用到Git提供的一个’stash’功能，可以把当前的工作现场“储藏”起来，等以后恢复现场继续工作<br>\n储存工作现场命令： git stash<br>\n储藏完工作区 再用 git status 查看工作区，就是干净的。。这时候就可以放心的去创建分支修复bug<br>\n首先要确定在哪个分支修复bug,如果在master分支上修复，那就从master创建临时分支<br>\n修复完bug之后，继续切换到dev分支上干活，这时候使用 git status查看工作区状态还是干净的<br>\n使用命令：git stash list 查看刚才的工作现场<br>\nGit 把 stash 内容存放在了某个地方，但是要恢复一下，有两个办法：<br>\n使用命令：git stash apply 恢复，但是在恢复后，stash内容并不会删除，需要使用’git stash drop 删除’；<br>\n另一种方法就是用 git stash pop ,恢复的同时也可以把stash内容也删了<br>\n你也可以多次stash ， 恢复的时候，先用 git stash list查看，然后恢复到指定的stash,用命令：git stash apply stash@{0}</p>\n<h2 id=\"feature分支\">feature分支</h2>\n<p>软件开发中，总是有不断地新功能要添加进来，添加一个新功能时，不会希望把主分支搞乱的<br>\n所以每添加一个新功能，最好新建一个 ‘Feature分支’ 在这个分支上开发，完成之后再合并，最后删除</p>\n<h2 id=\"多人协作\">多人协作</h2>\n<p>查看远程库的信息： git remote<br>\n详细信息： git remote -v<br>\n向远程库推送：<br>\nmaster分支是主分支，因此要时刻与远程同步；<br>\ndev分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；<br>\nbug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug;<br>\nfeature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>远程仓库、添加远程仓库、从远程库克隆、创建与合并分支、解决冲突、分支管理策略<br>\nbug分支、feature分支、多人协作</p>\n</blockquote>\n<h2 id=\"远程仓库\">远程仓库</h2>\n<p>可以使用gitHub ，也可以自己搭建git服务器<br>\n使用githun：创建SSH Key 创建了之后再“用户”主目录下会有一个.ssh的文件夹<br>\n如果没有，使用 Git Bash 创建SSH Key：<br>\nssh-keygen -t rsa -C <a href=\"mailto:%22chuntain997@gmail.com\" target=\"_blank\" rel=\"noopener\">&quot;chuntain997@gmail.com</a>&quot;  一路回车就行，没啥重要的无需设置密码<br>\n完成之后，在用户主目录中会有有一个 .ssh的文件夹，里面有id_rsa和id_rsa.pub两个文件，id_rsa是私钥，不能泄露 ，id_rsa是共钥，可以谁便说 反正没私钥也没啥用<br>\n然后就在gitHub 中添加这个公钥吧。GitHub只有知道了你的工钥才能知道这个文件是你自己推送的</p>\n<h2 id=\"添加远程仓库\">添加远程仓库</h2>\n<p>要关联一个远程库，使用命令：git remote add origin(注释) git@server-name:path/repo-name.git<br>\norigin:远程库的名字就是origin，这是Git默认的叫法，也可以改成别的<br>\n关联远程库之后使用，命令：git push -u origin master  第一次推送master的所有的内容；   -u参数，不但会推送，还会关联master分支<br>\n以后，每次提交后，只要有需要，就可以使用命令：git push origin master 推送最新修改</p>\n<h2 id=\"从远程库克隆\">从远程库克隆</h2>\n<p>1、获得远程库的地址 2、使用git clone 克隆一个本地库<br>\n命令:git clone   git clone <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:Mandy997/Mandy997.github.io.git<br>\nGit不但支持ssh协议,还支持https等其他协议，默认使用git://使用ssh<br>\n使用http不但速度慢 而且每次推送都必须输入口令</p>\n<h2 id=\"创建与合并分支\">创建与合并分支</h2>\n<p>每次提交，Git都把他们串成一条线，这条时间线就是一个分支，一开始有一个指针，就是主分支master,然后你想增加一个分支dev,在这条时间线上就增加了一个指针dev,它指向与master相同的提交，再把HEAD指向dev，就表示当前分支在dev上了<br>\n如果在dev的工作完成了，就可以把dev合并到master上，git就会把master指向dev当前的提交，就完成了合并<br>\n创建dev分支命令:git branch dev<br>\n切换分支： git checkout dev<br>\n创建+切换分支命令： git checkout -b dev(分支名字)<br>\n合并某分支到当前分支：git merge name<br>\n删除分支: git branch -d name<br>\n查看分支：git branch</p>\n<h2 id=\"解决冲突\">解决冲突</h2>\n<p>当master和另一个分支dev都有新的提交的时候。git无法执行“快速合并”,只能试着把各自的修改合并起来，但这种合并就可能有冲突。<br>\n使用命令：git merge name（分支名） 进行合并分支<br>\n有时候会出现这两句<br>\nCONFLICT (content): Merge conflict in readme.txt<br>\nAutomatic merge failed; fix conflicts and then commit the result.<br>\n就说明合并到分支冲突了，必须手动解决冲突后再提交。这时候我们就可以直接在ide中查看到冲突的内容<br>\n使用 git status 命令也可以告诉我们冲突的文件<br>\nGit用&lt;&lt;&lt;&lt;&lt;&lt;&lt;，=======，&gt;&gt;&gt;&gt;&gt;&gt;&gt;标记出不同分支的内容<br>\n修改之后，再次提交<br>\n使用带参数的git log 也可以看到分支合并的情况。。。<br>\ngit log --graph --pretty=oneline --abbrev-commit</p>\n<h2 id=\"分支管理策略\">分支管理策略</h2>\n<p>一般情况下，合并分支的时候，Git会用 Fast forward 模式，但在这种模式下，删除分支后，会丢掉分支信息<br>\n如果要强制禁用 Fast forwart 模式。Git 就会在 merge 时生成一个新的commit，这样，从分支历史上就可以看出分支信息了<br>\n准备合并分支的时候，注意使用 --no-ff参数，表示禁用 Fast forward，本次合并要创建一个新的commit，所以加上-m 参数，把commit的描述写进去<br>\n命令如下：git merge --no-ff -m “merge with no-ff” dev</p>\n<h3 id=\"分支策略\">分支策略</h3>\n<p>在实际开发中，我们应该按照几个基本原则进行分支管理：<br>\n首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；<br>\n那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；<br>\n你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。</p>\n<h2 id=\"bug分支\">Bug分支</h2>\n<p>当出现Bug的时候，你要尽快去修复Bug .但是你手头上的工作只进行了一半还没有提交<br>\n这时候就可以用到Git提供的一个’stash’功能，可以把当前的工作现场“储藏”起来，等以后恢复现场继续工作<br>\n储存工作现场命令： git stash<br>\n储藏完工作区 再用 git status 查看工作区，就是干净的。。这时候就可以放心的去创建分支修复bug<br>\n首先要确定在哪个分支修复bug,如果在master分支上修复，那就从master创建临时分支<br>\n修复完bug之后，继续切换到dev分支上干活，这时候使用 git status查看工作区状态还是干净的<br>\n使用命令：git stash list 查看刚才的工作现场<br>\nGit 把 stash 内容存放在了某个地方，但是要恢复一下，有两个办法：<br>\n使用命令：git stash apply 恢复，但是在恢复后，stash内容并不会删除，需要使用’git stash drop 删除’；<br>\n另一种方法就是用 git stash pop ,恢复的同时也可以把stash内容也删了<br>\n你也可以多次stash ， 恢复的时候，先用 git stash list查看，然后恢复到指定的stash,用命令：git stash apply stash@{0}</p>\n<h2 id=\"feature分支\">feature分支</h2>\n<p>软件开发中，总是有不断地新功能要添加进来，添加一个新功能时，不会希望把主分支搞乱的<br>\n所以每添加一个新功能，最好新建一个 ‘Feature分支’ 在这个分支上开发，完成之后再合并，最后删除</p>\n<h2 id=\"多人协作\">多人协作</h2>\n<p>查看远程库的信息： git remote<br>\n详细信息： git remote -v<br>\n向远程库推送：<br>\nmaster分支是主分支，因此要时刻与远程同步；<br>\ndev分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；<br>\nbug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug;<br>\nfeature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。</p>\n"},{"title":"在前端写逻辑会不会被打","catalog":true,"date":"2018-04-29T07:08:07.000Z","subtitle":null,"header-img":null,"_content":"\n> 根据数据中的月份对数据进行排序，月份为String类型。如“1月，2月，3月，11月，12月” \n# 代码实现  \n```javascript\n// 根据月份排序  \n monthSort(planList: any[]): any[] {  \n   if (planList.length == 0) {  \n     return [];  \n   }  \n   let plans;  \n   let planOne;  \n   let planTwo;  \n   let planTwoTemp;  \n   let planThree;  \n   let planThreeTemp;  \n   // 有当前月份  \n   const isInArray = (arr, value) => {  \n     for (let i = 0; i < arr.length; i++) {  \n       if (value === arr[i]) {  \n         return true;  \n       }  \n     }  \n     return false;  \n   }  \n   // 比当前月份大  \n   const isGreaterArray = (item, value) => {  \n     const monthNumber = Number(value.slice(0, value.length - 1));  \n     const imonths = item.months.split(\",\");  \n     for (let i = 0; i < imonths.length; i++) {  \n       let monthTemp = Number(imonths[i].slice(0, imonths[i].length - 1));  \n       if (monthNumber < monthTemp) {  \n         return true;  \n       }  \n     }  \n     return false;  \n   }  \n   const presentMonth = new Date().getMonth() + 1 + \"月\";  \n   // 过滤当前月  \n   const filterIsInArray = (item, month) => {  \n     const imonths = item.months.split(\",\");  \n     return isInArray(imonths, month);  \n   }  \n   // 过滤出一个数组中与其他数组的差值  \n   const repetition = (item, arr) => {  \n     const arrids = [];  \n     for (let i = 0; i < arr.length; i++) {  \n       arrids.push(arr[i].id);  \n     }  \n     let i = arrids.length;  \n     while (i--) {  \n       if (arrids[i] === item.id) {  \n         return false;  \n       }  \n     }  \n     return true;  \n   }  \n   // 过滤出当前月  \n   planOne = [...planList.filter(item => filterIsInArray(item, presentMonth))];  \n   planTwoTemp = [...planList.filter(item => repetition(item, planOne))];  \n   planTwo = [...planTwoTemp.filter(item => isGreaterArray(item, presentMonth))];  \n   planThreeTemp = planOne.concat(planTwo);  \n   planThree = [...planList.filter(item => repetition(item, planThreeTemp))];  \n   plans = planThreeTemp.concat(planThree);  \n   return plans;  \n }  \n```","source":"_posts/2018-04-29-在前端写逻辑会不会被打。。。.md","raw":"---\ntitle: 在前端写逻辑会不会被打\ncatalog: true\ndate: 2018-04-29 15:08:07\nsubtitle:\nheader-img:\ntags:\n- JavaScript\n- ES6\ncategory:\n- 前端\n---\n\n> 根据数据中的月份对数据进行排序，月份为String类型。如“1月，2月，3月，11月，12月” \n# 代码实现  \n```javascript\n// 根据月份排序  \n monthSort(planList: any[]): any[] {  \n   if (planList.length == 0) {  \n     return [];  \n   }  \n   let plans;  \n   let planOne;  \n   let planTwo;  \n   let planTwoTemp;  \n   let planThree;  \n   let planThreeTemp;  \n   // 有当前月份  \n   const isInArray = (arr, value) => {  \n     for (let i = 0; i < arr.length; i++) {  \n       if (value === arr[i]) {  \n         return true;  \n       }  \n     }  \n     return false;  \n   }  \n   // 比当前月份大  \n   const isGreaterArray = (item, value) => {  \n     const monthNumber = Number(value.slice(0, value.length - 1));  \n     const imonths = item.months.split(\",\");  \n     for (let i = 0; i < imonths.length; i++) {  \n       let monthTemp = Number(imonths[i].slice(0, imonths[i].length - 1));  \n       if (monthNumber < monthTemp) {  \n         return true;  \n       }  \n     }  \n     return false;  \n   }  \n   const presentMonth = new Date().getMonth() + 1 + \"月\";  \n   // 过滤当前月  \n   const filterIsInArray = (item, month) => {  \n     const imonths = item.months.split(\",\");  \n     return isInArray(imonths, month);  \n   }  \n   // 过滤出一个数组中与其他数组的差值  \n   const repetition = (item, arr) => {  \n     const arrids = [];  \n     for (let i = 0; i < arr.length; i++) {  \n       arrids.push(arr[i].id);  \n     }  \n     let i = arrids.length;  \n     while (i--) {  \n       if (arrids[i] === item.id) {  \n         return false;  \n       }  \n     }  \n     return true;  \n   }  \n   // 过滤出当前月  \n   planOne = [...planList.filter(item => filterIsInArray(item, presentMonth))];  \n   planTwoTemp = [...planList.filter(item => repetition(item, planOne))];  \n   planTwo = [...planTwoTemp.filter(item => isGreaterArray(item, presentMonth))];  \n   planThreeTemp = planOne.concat(planTwo);  \n   planThree = [...planList.filter(item => repetition(item, planThreeTemp))];  \n   plans = planThreeTemp.concat(planThree);  \n   return plans;  \n }  \n```","slug":"在前端写逻辑会不会被打。。。","published":1,"updated":"2018-04-29T07:32:13.538Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj75gxvp000atktut9znwcvw","content":"<blockquote>\n<p>根据数据中的月份对数据进行排序，月份为String类型。如“1月，2月，3月，11月，12月”</p>\n</blockquote>\n<h1>代码实现</h1>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 根据月份排序  </span></span><br><span class=\"line\"> monthSort(planList: any[]): any[] &#123;  </span><br><span class=\"line\">   <span class=\"keyword\">if</span> (planList.length == <span class=\"number\">0</span>) &#123;  </span><br><span class=\"line\">     <span class=\"keyword\">return</span> [];  </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   <span class=\"keyword\">let</span> plans;  </span><br><span class=\"line\">   <span class=\"keyword\">let</span> planOne;  </span><br><span class=\"line\">   <span class=\"keyword\">let</span> planTwo;  </span><br><span class=\"line\">   <span class=\"keyword\">let</span> planTwoTemp;  </span><br><span class=\"line\">   <span class=\"keyword\">let</span> planThree;  </span><br><span class=\"line\">   <span class=\"keyword\">let</span> planThreeTemp;  </span><br><span class=\"line\">   <span class=\"comment\">// 有当前月份  </span></span><br><span class=\"line\">   <span class=\"keyword\">const</span> isInArray = <span class=\"function\">(<span class=\"params\">arr, value</span>) =&gt;</span> &#123;  </span><br><span class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;  </span><br><span class=\"line\">       <span class=\"keyword\">if</span> (value === arr[i]) &#123;  </span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  </span><br><span class=\"line\">       &#125;  </span><br><span class=\"line\">     &#125;  </span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;  </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   <span class=\"comment\">// 比当前月份大  </span></span><br><span class=\"line\">   <span class=\"keyword\">const</span> isGreaterArray = <span class=\"function\">(<span class=\"params\">item, value</span>) =&gt;</span> &#123;  </span><br><span class=\"line\">     <span class=\"keyword\">const</span> monthNumber = <span class=\"built_in\">Number</span>(value.slice(<span class=\"number\">0</span>, value.length - <span class=\"number\">1</span>));  </span><br><span class=\"line\">     <span class=\"keyword\">const</span> imonths = item.months.split(<span class=\"string\">\",\"</span>);  </span><br><span class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; imonths.length; i++) &#123;  </span><br><span class=\"line\">       <span class=\"keyword\">let</span> monthTemp = <span class=\"built_in\">Number</span>(imonths[i].slice(<span class=\"number\">0</span>, imonths[i].length - <span class=\"number\">1</span>));  </span><br><span class=\"line\">       <span class=\"keyword\">if</span> (monthNumber &lt; monthTemp) &#123;  </span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  </span><br><span class=\"line\">       &#125;  </span><br><span class=\"line\">     &#125;  </span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;  </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   <span class=\"keyword\">const</span> presentMonth = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getMonth() + <span class=\"number\">1</span> + <span class=\"string\">\"月\"</span>;  </span><br><span class=\"line\">   <span class=\"comment\">// 过滤当前月  </span></span><br><span class=\"line\">   <span class=\"keyword\">const</span> filterIsInArray = <span class=\"function\">(<span class=\"params\">item, month</span>) =&gt;</span> &#123;  </span><br><span class=\"line\">     <span class=\"keyword\">const</span> imonths = item.months.split(<span class=\"string\">\",\"</span>);  </span><br><span class=\"line\">     <span class=\"keyword\">return</span> isInArray(imonths, month);  </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   <span class=\"comment\">// 过滤出一个数组中与其他数组的差值  </span></span><br><span class=\"line\">   <span class=\"keyword\">const</span> repetition = <span class=\"function\">(<span class=\"params\">item, arr</span>) =&gt;</span> &#123;  </span><br><span class=\"line\">     <span class=\"keyword\">const</span> arrids = [];  </span><br><span class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;  </span><br><span class=\"line\">       arrids.push(arr[i].id);  </span><br><span class=\"line\">     &#125;  </span><br><span class=\"line\">     <span class=\"keyword\">let</span> i = arrids.length;  </span><br><span class=\"line\">     <span class=\"keyword\">while</span> (i--) &#123;  </span><br><span class=\"line\">       <span class=\"keyword\">if</span> (arrids[i] === item.id) &#123;  </span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;  </span><br><span class=\"line\">       &#125;  </span><br><span class=\"line\">     &#125;  </span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   <span class=\"comment\">// 过滤出当前月  </span></span><br><span class=\"line\">   planOne = [...planList.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> filterIsInArray(item, presentMonth))];  </span><br><span class=\"line\">   planTwoTemp = [...planList.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> repetition(item, planOne))];  </span><br><span class=\"line\">   planTwo = [...planTwoTemp.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> isGreaterArray(item, presentMonth))];  </span><br><span class=\"line\">   planThreeTemp = planOne.concat(planTwo);  </span><br><span class=\"line\">   planThree = [...planList.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> repetition(item, planThreeTemp))];  </span><br><span class=\"line\">   plans = planThreeTemp.concat(planThree);  </span><br><span class=\"line\">   <span class=\"keyword\">return</span> plans;  </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>根据数据中的月份对数据进行排序，月份为String类型。如“1月，2月，3月，11月，12月”</p>\n</blockquote>\n<h1>代码实现</h1>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 根据月份排序  </span></span><br><span class=\"line\"> monthSort(planList: any[]): any[] &#123;  </span><br><span class=\"line\">   <span class=\"keyword\">if</span> (planList.length == <span class=\"number\">0</span>) &#123;  </span><br><span class=\"line\">     <span class=\"keyword\">return</span> [];  </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   <span class=\"keyword\">let</span> plans;  </span><br><span class=\"line\">   <span class=\"keyword\">let</span> planOne;  </span><br><span class=\"line\">   <span class=\"keyword\">let</span> planTwo;  </span><br><span class=\"line\">   <span class=\"keyword\">let</span> planTwoTemp;  </span><br><span class=\"line\">   <span class=\"keyword\">let</span> planThree;  </span><br><span class=\"line\">   <span class=\"keyword\">let</span> planThreeTemp;  </span><br><span class=\"line\">   <span class=\"comment\">// 有当前月份  </span></span><br><span class=\"line\">   <span class=\"keyword\">const</span> isInArray = <span class=\"function\">(<span class=\"params\">arr, value</span>) =&gt;</span> &#123;  </span><br><span class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;  </span><br><span class=\"line\">       <span class=\"keyword\">if</span> (value === arr[i]) &#123;  </span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  </span><br><span class=\"line\">       &#125;  </span><br><span class=\"line\">     &#125;  </span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;  </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   <span class=\"comment\">// 比当前月份大  </span></span><br><span class=\"line\">   <span class=\"keyword\">const</span> isGreaterArray = <span class=\"function\">(<span class=\"params\">item, value</span>) =&gt;</span> &#123;  </span><br><span class=\"line\">     <span class=\"keyword\">const</span> monthNumber = <span class=\"built_in\">Number</span>(value.slice(<span class=\"number\">0</span>, value.length - <span class=\"number\">1</span>));  </span><br><span class=\"line\">     <span class=\"keyword\">const</span> imonths = item.months.split(<span class=\"string\">\",\"</span>);  </span><br><span class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; imonths.length; i++) &#123;  </span><br><span class=\"line\">       <span class=\"keyword\">let</span> monthTemp = <span class=\"built_in\">Number</span>(imonths[i].slice(<span class=\"number\">0</span>, imonths[i].length - <span class=\"number\">1</span>));  </span><br><span class=\"line\">       <span class=\"keyword\">if</span> (monthNumber &lt; monthTemp) &#123;  </span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  </span><br><span class=\"line\">       &#125;  </span><br><span class=\"line\">     &#125;  </span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;  </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   <span class=\"keyword\">const</span> presentMonth = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getMonth() + <span class=\"number\">1</span> + <span class=\"string\">\"月\"</span>;  </span><br><span class=\"line\">   <span class=\"comment\">// 过滤当前月  </span></span><br><span class=\"line\">   <span class=\"keyword\">const</span> filterIsInArray = <span class=\"function\">(<span class=\"params\">item, month</span>) =&gt;</span> &#123;  </span><br><span class=\"line\">     <span class=\"keyword\">const</span> imonths = item.months.split(<span class=\"string\">\",\"</span>);  </span><br><span class=\"line\">     <span class=\"keyword\">return</span> isInArray(imonths, month);  </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   <span class=\"comment\">// 过滤出一个数组中与其他数组的差值  </span></span><br><span class=\"line\">   <span class=\"keyword\">const</span> repetition = <span class=\"function\">(<span class=\"params\">item, arr</span>) =&gt;</span> &#123;  </span><br><span class=\"line\">     <span class=\"keyword\">const</span> arrids = [];  </span><br><span class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;  </span><br><span class=\"line\">       arrids.push(arr[i].id);  </span><br><span class=\"line\">     &#125;  </span><br><span class=\"line\">     <span class=\"keyword\">let</span> i = arrids.length;  </span><br><span class=\"line\">     <span class=\"keyword\">while</span> (i--) &#123;  </span><br><span class=\"line\">       <span class=\"keyword\">if</span> (arrids[i] === item.id) &#123;  </span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;  </span><br><span class=\"line\">       &#125;  </span><br><span class=\"line\">     &#125;  </span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;  </span><br><span class=\"line\">   &#125;  </span><br><span class=\"line\">   <span class=\"comment\">// 过滤出当前月  </span></span><br><span class=\"line\">   planOne = [...planList.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> filterIsInArray(item, presentMonth))];  </span><br><span class=\"line\">   planTwoTemp = [...planList.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> repetition(item, planOne))];  </span><br><span class=\"line\">   planTwo = [...planTwoTemp.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> isGreaterArray(item, presentMonth))];  </span><br><span class=\"line\">   planThreeTemp = planOne.concat(planTwo);  </span><br><span class=\"line\">   planThree = [...planList.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> repetition(item, planThreeTemp))];  </span><br><span class=\"line\">   plans = planThreeTemp.concat(planThree);  </span><br><span class=\"line\">   <span class=\"keyword\">return</span> plans;  </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>"},{"title":"Drupal8安装说明","catalog":true,"date":"2018-05-03T01:47:30.000Z","subtitle":null,"header-img":null,"_content":"# Drupal 8.X 需求\n类型|需求  \n-|:-\nDatabases|1.MySQL 5.5.3/MariaDB 5.5.20/Percona Server 5.5.8 or higher with PDO and an InnoDB-compatible primary storage engine,<br>2.PostgreSQL 9.1.2 or higher with PDO,<br>3.SQLite 3.6.8 or higher\nPHP|PHP 5.5.9 or higher\n# 环境安装\n系统环境：ContOS7, LAMP（Linux+Apache+Mysql+PHP）\nLAMP是Linux + Apache + MySQL + PHP的缩写，但从RHEL / CentOS 7开始已经不会内置MySQL，改为使用MariaDB，MariaDB使用上与MySQL相同，旧有的MySQL资料库也可以直接升级使用。\n## CentOS7 安装说明\n安装引导之后选择安装语言： 在左侧选择中文,右侧选择简体中文（中国）  \n然后会跳转到安装信息摘要，选择相应的配置后点击开始安装  \n在安装过程中你可以设置root密码或者创建一个你自己的用户，根据提示进行设置  \n等待安装完成，安装完成后点击重启。\n\n\n\n","source":"_posts/2018-05-03-Drupal8安装说明.md","raw":"---\ntitle: Drupal8安装说明\ncatalog: true\ndate: 2018-05-03 09:47:30\nsubtitle:\nheader-img:\ntags:\n- Drupal8\n- CentOS\n- PHP\ncategory:\n- CMS\n---\n# Drupal 8.X 需求\n类型|需求  \n-|:-\nDatabases|1.MySQL 5.5.3/MariaDB 5.5.20/Percona Server 5.5.8 or higher with PDO and an InnoDB-compatible primary storage engine,<br>2.PostgreSQL 9.1.2 or higher with PDO,<br>3.SQLite 3.6.8 or higher\nPHP|PHP 5.5.9 or higher\n# 环境安装\n系统环境：ContOS7, LAMP（Linux+Apache+Mysql+PHP）\nLAMP是Linux + Apache + MySQL + PHP的缩写，但从RHEL / CentOS 7开始已经不会内置MySQL，改为使用MariaDB，MariaDB使用上与MySQL相同，旧有的MySQL资料库也可以直接升级使用。\n## CentOS7 安装说明\n安装引导之后选择安装语言： 在左侧选择中文,右侧选择简体中文（中国）  \n然后会跳转到安装信息摘要，选择相应的配置后点击开始安装  \n在安装过程中你可以设置root密码或者创建一个你自己的用户，根据提示进行设置  \n等待安装完成，安装完成后点击重启。\n\n\n\n","slug":"Drupal8安装说明","published":1,"updated":"2018-05-06T13:02:15.648Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj75gxvt000etktu8mfbdh7i","content":"<h1>Drupal 8.X 需求</h1>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th style=\"text-align:left\">需求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Databases</td>\n<td style=\"text-align:left\">1.MySQL 5.5.3/MariaDB 5.5.20/Percona Server 5.5.8 or higher with PDO and an InnoDB-compatible primary storage engine,<br>2.PostgreSQL 9.1.2 or higher with PDO,<br>3.SQLite 3.6.8 or higher</td>\n</tr>\n<tr>\n<td>PHP</td>\n<td style=\"text-align:left\">PHP 5.5.9 or higher</td>\n</tr>\n</tbody>\n</table>\n<h1>环境安装</h1>\n<p>系统环境：ContOS7, LAMP（Linux+Apache+Mysql+PHP）<br>\nLAMP是Linux + Apache + MySQL + PHP的缩写，但从RHEL / CentOS 7开始已经不会内置MySQL，改为使用MariaDB，MariaDB使用上与MySQL相同，旧有的MySQL资料库也可以直接升级使用。</p>\n<h2 id=\"centos7-安装说明\">CentOS7 安装说明</h2>\n<p>安装引导之后选择安装语言： 在左侧选择中文,右侧选择简体中文（中国）<br>\n然后会跳转到安装信息摘要，选择相应的配置后点击开始安装<br>\n在安装过程中你可以设置root密码或者创建一个你自己的用户，根据提示进行设置<br>\n等待安装完成，安装完成后点击重启。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1>Drupal 8.X 需求</h1>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th style=\"text-align:left\">需求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Databases</td>\n<td style=\"text-align:left\">1.MySQL 5.5.3/MariaDB 5.5.20/Percona Server 5.5.8 or higher with PDO and an InnoDB-compatible primary storage engine,<br>2.PostgreSQL 9.1.2 or higher with PDO,<br>3.SQLite 3.6.8 or higher</td>\n</tr>\n<tr>\n<td>PHP</td>\n<td style=\"text-align:left\">PHP 5.5.9 or higher</td>\n</tr>\n</tbody>\n</table>\n<h1>环境安装</h1>\n<p>系统环境：ContOS7, LAMP（Linux+Apache+Mysql+PHP）<br>\nLAMP是Linux + Apache + MySQL + PHP的缩写，但从RHEL / CentOS 7开始已经不会内置MySQL，改为使用MariaDB，MariaDB使用上与MySQL相同，旧有的MySQL资料库也可以直接升级使用。</p>\n<h2 id=\"centos7-安装说明\">CentOS7 安装说明</h2>\n<p>安装引导之后选择安装语言： 在左侧选择中文,右侧选择简体中文（中国）<br>\n然后会跳转到安装信息摘要，选择相应的配置后点击开始安装<br>\n在安装过程中你可以设置root密码或者创建一个你自己的用户，根据提示进行设置<br>\n等待安装完成，安装完成后点击重启。</p>\n"},{"title":"Markdown基本语法","catalog":true,"date":"2018-06-21T03:52:12.000Z","subtitle":null,"header-img":null,"_content":"> 原文链接：\n> https://github.com/wizardforcel/markdown-simple-world/blob/master/2.md\n---\n# Markdown 基本语法\n\n## 段落\n\n非常自然，一行文字就是一个段落。\n\n比如\n\n```\n这是一个段落。\n```\n\n会被解释成\n\n```\n<p>这是一个段落。</p>\n```\n\n如果你需要另起一段，请在两个段落之间隔一个空行。\n\n```\n这是一个段落。\n\n这是另一个段落。\n```\n\n会解释成\n\n```\n<p>这是一个段落<p>\n<p>这是另一个段落</p>\n```\n\n不隔一个空行的换行行为，在一些编辑器中被解释为换行，即插入一个`<br />`标签。对与另外一些编辑器，会被解释为插入一个空格。对于后者，若要插入换行标签，请在当前一行的结尾打两个空格。\n\n## 粗体、斜体\n\n可以使用星号`*`或下划线`_`指定粗体或者斜体。\n\n```\n*这是斜体*\n_这也是斜体_\n**这是粗体**\n***这是粗体+斜体***\n```\n\n会被解释成\n\n```\n<em>这是斜体</em>\n<em>这也是斜体</em>\n<strong>这是粗体</strong>\n<strong><em>这是粗体+斜体</strong></em>\n```\n\n## 删除线\n\n一部分编辑器支持删除线，它不是经典markdown中的要素。用波浪线`~`定义删除线。\n\n```\n~~就像这样~~\n```\n\n会被解释成\n\n```\n<strike>就像这样</strike>\n```\n\n## 标题\n\nmarkdown总支持1~6六级标题，通过在一行之前加上不同数量的井号来表示。\n\n```\n# 这是 H1 #\n\n## 这是 H2 ##\n\n### 这是 H3 ###\n\n...\n\n###### 这是 H6 ######\n```\n\n行尾可以加上任意数量的井号字符，这些字符不会算作标题内容。通常会加上相等数量的字符以保持对称。\n\n此外，H1和H2也可以采用在文本下方添加底线来实现，比如：\n\n```\n这是 H1\n=======\n\n这是 H2\n-------\n```\n\n## 引用\n\n通过在行首加上大于号`>`来添加引用格式。\n\n```\n> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\nid sem consectetuer libero luctus adipiscing.\n```\n\n引用可以嵌套：\n\n```\n> This is the first level of quoting.\n>\n> > This is nested blockquote.\n>\n> Back to the first level.\n```\n\n也可以嵌套其他格式：\n\n```\n> ## 这是一个标题。\n>\n> 1.   这是第一行列表项。\n> 2.   这是第二行列表项。\n>\n> 给出一些例子代码：\n>\n>     return shell_exec(\"echo $input | $markdown_script\");\n```\n\n## 列表\n\n无序列表使用星号、加号或是减号作为列表标记：\n\n```\n*   Red\n*   Green\n*   Blue\n```\n\n等同于\n\n```\n+   Red\n+   Green\n+   Blue\n```\n\n和\n\n```\n-   Red\n-   Green\n-   Blue\n```\n\n有序列表则使用数字接着一个英文句点：\n\n```\n1.  Bird\n2.  McHale\n3.  Parish\n```\n\n数字并不会影响输出的 HTML 结果，也就是说上面的例子等同于：\n\n```\n1.  Bird\n1.  McHale\n1.  Parish\n```\n\n## 内联代码\n\n用反引号`` ` ``来标记内联代码，它们会解释成`<code>`标签。如果代码的内容中有反引号，请用两个反引号包裹。代码中的`&`、`<`、`>`符号都会自动转义，请放心使用。\n\n## 代码区域\n\n有两种方式标记代码区域，原生风格是行首缩进四个空格。\n\n```\n这是一个普通段落：\n\n    这是一个代码区块。\n```\n\n会被解释成\n\n```\n<p>这是一个普通段落：</p>\n\n<pre><code>这是一个代码区块。\n</code></pre>\n```\n\n除了行首的4个空格会被移出，其它不变。像内联代码一样，上述三种符号也会被转义。但在代码段中，星号之类的markdown标记符号则不会解析。\n\n还有一种是github的风格，代码段的前后用三个反引号独占一行来标记。\n\n![](img/2-1.png)\n\n目前主流编辑器都支持这种风格。\n\n## 分隔线\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：\n\n```\n* * *\n***\n*****\n- - -\n---------------------------------------\n```\n\n## 链接\n\n```\n[an example](http://example.com/)\n[an example](http://example.com/ \"Optional Title\")\n```\n\n会被解释为\n\n```\n<a href='http://example.com/'>an example</a>\n<a href='http://example.com/' title=\"Optional Title\">an example</a>\n```\n\n除了上面的行内式，也可以使用参考式：\n\n```\n[an example][id]\n```\n\n然后在任意空白位置定义：\n\n```\n[id]: http://example.com/ \"Optional Title\"\n```\n\n## 图像\n\n```\n![Alt text](/path/to/img.jpg)\n![Alt text](/path/to/img.jpg \"Optional Title\")\n```\n\n会被解释为\n\n```\n<img src='/path/to/img.jpg' alt='Alt text' />\n<img src='/path/to/img.jpg' alt='Alt text' title='Optional Title' />\n```\n\n同样，图像也有类似的参考式语法。\n\n## 自动链接\n\n如果链接的地址和名字重复，可以用尖括号语法将其简化。\n\n```\n<http://example.com/>\n```\n\n就相当于\n\n```\n[http://example.com/](http://example.com/)\n```\n\n切记，大多数编辑器都会自动将符合url规则的东西视为链接，并且解释成链接。很多时候作者由于疏忽等缘故，链接和后面的中文之间缺少空格，导致链接不正常。所以我建议，链接要么加上尖括号，要么两端加上空格。\n\n## 转义\n\nmarkdown支持在以下字符前面插入反斜杠\n\n```\n\\   反斜线\n`   反引号\n*   星号\n_   底线\n{}  花括号\n[]  方括号\n()  括弧\n#   井字号\n+   加号\n-   减号\n.   英文句点\n!   惊叹号\n```\n\n插入之后，将不再解析这些字符，而是原样输出。\n\n## 表格\n\n表格是github风格独有的语法，但近年来渐渐被大多数编辑器支持。\n\n```\n| Item     | Value | Qty   |\n| :------- | ----: | :---: |\n| Computer | $1600 |  5    |\n| Phone    | $12   |  12   |\n| Pipe     | $1    |  234  |\n```\n\n会被解释成\n\n```\n<table>\n<thead>\n<tr>\n  <th align=\"left\">Item</th>\n  <th align=\"right\">Value</th>\n  <th align=\"center\">Qty</th>\n</tr>\n</thead>\n<tbody><tr>\n  <td align=\"left\">Computer</td>\n  <td align=\"right\">$1600</td>\n  <td align=\"center\">5</td>\n</tr>\n<tr>\n  <td align=\"left\">Phone</td>\n  <td align=\"right\">$12</td>\n  <td align=\"center\">12</td>\n</tr>\n<tr>\n  <td align=\"left\">Pipe</td>\n  <td align=\"right\">$1</td>\n  <td align=\"center\">234</td>\n</tr>\n</tbody></table>\n```\n\n要注意第二行的冒号决定了居左居右还是居中，如果你不加冒号，默认是居左的。\n\n另外可以把第一行去掉，做成没有表头的表格，但第二行始终是要有的。\n\n## 内联 HTML\n\nmarkdown 的语法简洁，但有其局限性，所以特意保留了内联html这种方式。任何html标签及其内容，都会原样输出到结果中。也就是说，标签中的星号等作为markdown结构的符号，以及构成html标签和实体的符号，都不会做任何转义。","source":"_posts/2018-06-21-Markdown基本语法.md","raw":"---\ntitle: Markdown基本语法\ncatalog: true\ndate: 2018-06-21 11:52:12\nsubtitle:\nheader-img:\ntags:\n- Markdown\n- 语法\ncategory:\n- 编辑器\n---\n> 原文链接：\n> https://github.com/wizardforcel/markdown-simple-world/blob/master/2.md\n---\n# Markdown 基本语法\n\n## 段落\n\n非常自然，一行文字就是一个段落。\n\n比如\n\n```\n这是一个段落。\n```\n\n会被解释成\n\n```\n<p>这是一个段落。</p>\n```\n\n如果你需要另起一段，请在两个段落之间隔一个空行。\n\n```\n这是一个段落。\n\n这是另一个段落。\n```\n\n会解释成\n\n```\n<p>这是一个段落<p>\n<p>这是另一个段落</p>\n```\n\n不隔一个空行的换行行为，在一些编辑器中被解释为换行，即插入一个`<br />`标签。对与另外一些编辑器，会被解释为插入一个空格。对于后者，若要插入换行标签，请在当前一行的结尾打两个空格。\n\n## 粗体、斜体\n\n可以使用星号`*`或下划线`_`指定粗体或者斜体。\n\n```\n*这是斜体*\n_这也是斜体_\n**这是粗体**\n***这是粗体+斜体***\n```\n\n会被解释成\n\n```\n<em>这是斜体</em>\n<em>这也是斜体</em>\n<strong>这是粗体</strong>\n<strong><em>这是粗体+斜体</strong></em>\n```\n\n## 删除线\n\n一部分编辑器支持删除线，它不是经典markdown中的要素。用波浪线`~`定义删除线。\n\n```\n~~就像这样~~\n```\n\n会被解释成\n\n```\n<strike>就像这样</strike>\n```\n\n## 标题\n\nmarkdown总支持1~6六级标题，通过在一行之前加上不同数量的井号来表示。\n\n```\n# 这是 H1 #\n\n## 这是 H2 ##\n\n### 这是 H3 ###\n\n...\n\n###### 这是 H6 ######\n```\n\n行尾可以加上任意数量的井号字符，这些字符不会算作标题内容。通常会加上相等数量的字符以保持对称。\n\n此外，H1和H2也可以采用在文本下方添加底线来实现，比如：\n\n```\n这是 H1\n=======\n\n这是 H2\n-------\n```\n\n## 引用\n\n通过在行首加上大于号`>`来添加引用格式。\n\n```\n> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\nconsectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\nVestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\nid sem consectetuer libero luctus adipiscing.\n```\n\n引用可以嵌套：\n\n```\n> This is the first level of quoting.\n>\n> > This is nested blockquote.\n>\n> Back to the first level.\n```\n\n也可以嵌套其他格式：\n\n```\n> ## 这是一个标题。\n>\n> 1.   这是第一行列表项。\n> 2.   这是第二行列表项。\n>\n> 给出一些例子代码：\n>\n>     return shell_exec(\"echo $input | $markdown_script\");\n```\n\n## 列表\n\n无序列表使用星号、加号或是减号作为列表标记：\n\n```\n*   Red\n*   Green\n*   Blue\n```\n\n等同于\n\n```\n+   Red\n+   Green\n+   Blue\n```\n\n和\n\n```\n-   Red\n-   Green\n-   Blue\n```\n\n有序列表则使用数字接着一个英文句点：\n\n```\n1.  Bird\n2.  McHale\n3.  Parish\n```\n\n数字并不会影响输出的 HTML 结果，也就是说上面的例子等同于：\n\n```\n1.  Bird\n1.  McHale\n1.  Parish\n```\n\n## 内联代码\n\n用反引号`` ` ``来标记内联代码，它们会解释成`<code>`标签。如果代码的内容中有反引号，请用两个反引号包裹。代码中的`&`、`<`、`>`符号都会自动转义，请放心使用。\n\n## 代码区域\n\n有两种方式标记代码区域，原生风格是行首缩进四个空格。\n\n```\n这是一个普通段落：\n\n    这是一个代码区块。\n```\n\n会被解释成\n\n```\n<p>这是一个普通段落：</p>\n\n<pre><code>这是一个代码区块。\n</code></pre>\n```\n\n除了行首的4个空格会被移出，其它不变。像内联代码一样，上述三种符号也会被转义。但在代码段中，星号之类的markdown标记符号则不会解析。\n\n还有一种是github的风格，代码段的前后用三个反引号独占一行来标记。\n\n![](img/2-1.png)\n\n目前主流编辑器都支持这种风格。\n\n## 分隔线\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：\n\n```\n* * *\n***\n*****\n- - -\n---------------------------------------\n```\n\n## 链接\n\n```\n[an example](http://example.com/)\n[an example](http://example.com/ \"Optional Title\")\n```\n\n会被解释为\n\n```\n<a href='http://example.com/'>an example</a>\n<a href='http://example.com/' title=\"Optional Title\">an example</a>\n```\n\n除了上面的行内式，也可以使用参考式：\n\n```\n[an example][id]\n```\n\n然后在任意空白位置定义：\n\n```\n[id]: http://example.com/ \"Optional Title\"\n```\n\n## 图像\n\n```\n![Alt text](/path/to/img.jpg)\n![Alt text](/path/to/img.jpg \"Optional Title\")\n```\n\n会被解释为\n\n```\n<img src='/path/to/img.jpg' alt='Alt text' />\n<img src='/path/to/img.jpg' alt='Alt text' title='Optional Title' />\n```\n\n同样，图像也有类似的参考式语法。\n\n## 自动链接\n\n如果链接的地址和名字重复，可以用尖括号语法将其简化。\n\n```\n<http://example.com/>\n```\n\n就相当于\n\n```\n[http://example.com/](http://example.com/)\n```\n\n切记，大多数编辑器都会自动将符合url规则的东西视为链接，并且解释成链接。很多时候作者由于疏忽等缘故，链接和后面的中文之间缺少空格，导致链接不正常。所以我建议，链接要么加上尖括号，要么两端加上空格。\n\n## 转义\n\nmarkdown支持在以下字符前面插入反斜杠\n\n```\n\\   反斜线\n`   反引号\n*   星号\n_   底线\n{}  花括号\n[]  方括号\n()  括弧\n#   井字号\n+   加号\n-   减号\n.   英文句点\n!   惊叹号\n```\n\n插入之后，将不再解析这些字符，而是原样输出。\n\n## 表格\n\n表格是github风格独有的语法，但近年来渐渐被大多数编辑器支持。\n\n```\n| Item     | Value | Qty   |\n| :------- | ----: | :---: |\n| Computer | $1600 |  5    |\n| Phone    | $12   |  12   |\n| Pipe     | $1    |  234  |\n```\n\n会被解释成\n\n```\n<table>\n<thead>\n<tr>\n  <th align=\"left\">Item</th>\n  <th align=\"right\">Value</th>\n  <th align=\"center\">Qty</th>\n</tr>\n</thead>\n<tbody><tr>\n  <td align=\"left\">Computer</td>\n  <td align=\"right\">$1600</td>\n  <td align=\"center\">5</td>\n</tr>\n<tr>\n  <td align=\"left\">Phone</td>\n  <td align=\"right\">$12</td>\n  <td align=\"center\">12</td>\n</tr>\n<tr>\n  <td align=\"left\">Pipe</td>\n  <td align=\"right\">$1</td>\n  <td align=\"center\">234</td>\n</tr>\n</tbody></table>\n```\n\n要注意第二行的冒号决定了居左居右还是居中，如果你不加冒号，默认是居左的。\n\n另外可以把第一行去掉，做成没有表头的表格，但第二行始终是要有的。\n\n## 内联 HTML\n\nmarkdown 的语法简洁，但有其局限性，所以特意保留了内联html这种方式。任何html标签及其内容，都会原样输出到结果中。也就是说，标签中的星号等作为markdown结构的符号，以及构成html标签和实体的符号，都不会做任何转义。","slug":"Markdown基本语法","published":1,"updated":"2018-06-21T03:54:33.514Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj75gxvw000ftktuwdnj6gpp","content":"<blockquote>\n<p>原文链接：<br>\n<a href=\"https://github.com/wizardforcel/markdown-simple-world/blob/master/2.md\" target=\"_blank\" rel=\"noopener\">https://github.com/wizardforcel/markdown-simple-world/blob/master/2.md</a></p>\n</blockquote>\n<hr>\n<h1>Markdown 基本语法</h1>\n<h2 id=\"段落\">段落</h2>\n<p>非常自然，一行文字就是一个段落。</p>\n<p>比如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是一个段落。</span><br></pre></td></tr></table></figure>\n<p>会被解释成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;这是一个段落。&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p>如果你需要另起一段，请在两个段落之间隔一个空行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是一个段落。</span><br><span class=\"line\"></span><br><span class=\"line\">这是另一个段落。</span><br></pre></td></tr></table></figure>\n<p>会解释成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;这是一个段落&lt;p&gt;</span><br><span class=\"line\">&lt;p&gt;这是另一个段落&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p>不隔一个空行的换行行为，在一些编辑器中被解释为换行，即插入一个<code>&lt;br /&gt;</code>标签。对与另外一些编辑器，会被解释为插入一个空格。对于后者，若要插入换行标签，请在当前一行的结尾打两个空格。</p>\n<h2 id=\"粗体-斜体\">粗体、斜体</h2>\n<p>可以使用星号<code>*</code>或下划线<code>_</code>指定粗体或者斜体。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*这是斜体*</span><br><span class=\"line\">_这也是斜体_</span><br><span class=\"line\">**这是粗体**</span><br><span class=\"line\">***这是粗体+斜体***</span><br></pre></td></tr></table></figure>\n<p>会被解释成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;em&gt;这是斜体&lt;/em&gt;</span><br><span class=\"line\">&lt;em&gt;这也是斜体&lt;/em&gt;</span><br><span class=\"line\">&lt;strong&gt;这是粗体&lt;/strong&gt;</span><br><span class=\"line\">&lt;strong&gt;&lt;em&gt;这是粗体+斜体&lt;/strong&gt;&lt;/em&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"删除线\">删除线</h2>\n<p>一部分编辑器支持删除线，它不是经典markdown中的要素。用波浪线<code>~</code>定义删除线。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~~就像这样~~</span><br></pre></td></tr></table></figure>\n<p>会被解释成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;strike&gt;就像这样&lt;/strike&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"标题\">标题</h2>\n<p>markdown总支持1~6六级标题，通过在一行之前加上不同数量的井号来表示。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 这是 H1 #</span><br><span class=\"line\"></span><br><span class=\"line\">## 这是 H2 ##</span><br><span class=\"line\"></span><br><span class=\"line\">### 这是 H3 ###</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">###### 这是 H6 ######</span><br></pre></td></tr></table></figure>\n<p>行尾可以加上任意数量的井号字符，这些字符不会算作标题内容。通常会加上相等数量的字符以保持对称。</p>\n<p>此外，H1和H2也可以采用在文本下方添加底线来实现，比如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是 H1</span><br><span class=\"line\">=======</span><br><span class=\"line\"></span><br><span class=\"line\">这是 H2</span><br><span class=\"line\">-------</span><br></pre></td></tr></table></figure>\n<h2 id=\"引用\">引用</h2>\n<p>通过在行首加上大于号<code>&gt;</code>来添加引用格式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class=\"line\">consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class=\"line\">Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class=\"line\">id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure>\n<p>引用可以嵌套：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; This is the first level of quoting.</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; &gt; This is nested blockquote.</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; Back to the first level.</span><br></pre></td></tr></table></figure>\n<p>也可以嵌套其他格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; ## 这是一个标题。</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; 1.   这是第一行列表项。</span><br><span class=\"line\">&gt; 2.   这是第二行列表项。</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; 给出一些例子代码：</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"列表\">列表</h2>\n<p>无序列表使用星号、加号或是减号作为列表标记：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*   Red</span><br><span class=\"line\">*   Green</span><br><span class=\"line\">*   Blue</span><br></pre></td></tr></table></figure>\n<p>等同于</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+   Red</span><br><span class=\"line\">+   Green</span><br><span class=\"line\">+   Blue</span><br></pre></td></tr></table></figure>\n<p>和</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-   Red</span><br><span class=\"line\">-   Green</span><br><span class=\"line\">-   Blue</span><br></pre></td></tr></table></figure>\n<p>有序列表则使用数字接着一个英文句点：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.  Bird</span><br><span class=\"line\">2.  McHale</span><br><span class=\"line\">3.  Parish</span><br></pre></td></tr></table></figure>\n<p>数字并不会影响输出的 HTML 结果，也就是说上面的例子等同于：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.  Bird</span><br><span class=\"line\">1.  McHale</span><br><span class=\"line\">1.  Parish</span><br></pre></td></tr></table></figure>\n<h2 id=\"内联代码\">内联代码</h2>\n<p>用反引号<code>`</code>来标记内联代码，它们会解释成<code>&lt;code&gt;</code>标签。如果代码的内容中有反引号，请用两个反引号包裹。代码中的<code>&amp;</code>、<code>&lt;</code>、<code>&gt;</code>符号都会自动转义，请放心使用。</p>\n<h2 id=\"代码区域\">代码区域</h2>\n<p>有两种方式标记代码区域，原生风格是行首缩进四个空格。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是一个普通段落：</span><br><span class=\"line\"></span><br><span class=\"line\">    这是一个代码区块。</span><br></pre></td></tr></table></figure>\n<p>会被解释成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;这是一个普通段落：&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;pre&gt;&lt;code&gt;这是一个代码区块。</span><br><span class=\"line\">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure>\n<p>除了行首的4个空格会被移出，其它不变。像内联代码一样，上述三种符号也会被转义。但在代码段中，星号之类的markdown标记符号则不会解析。</p>\n<p>还有一种是github的风格，代码段的前后用三个反引号独占一行来标记。</p>\n<p><img src=\"img/2-1.png\" alt=\"\"></p>\n<p>目前主流编辑器都支持这种风格。</p>\n<h2 id=\"分隔线\">分隔线</h2>\n<p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* * *</span><br><span class=\"line\">***</span><br><span class=\"line\">*****</span><br><span class=\"line\">- - -</span><br><span class=\"line\">---------------------------------------</span><br></pre></td></tr></table></figure>\n<h2 id=\"链接\">链接</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[an example](http://example.com/)</span><br><span class=\"line\">[an example](http://example.com/ &quot;Optional Title&quot;)</span><br></pre></td></tr></table></figure>\n<p>会被解释为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=&apos;http://example.com/&apos;&gt;an example&lt;/a&gt;</span><br><span class=\"line\">&lt;a href=&apos;http://example.com/&apos; title=&quot;Optional Title&quot;&gt;an example&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n<p>除了上面的行内式，也可以使用参考式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[an example][id]</span><br></pre></td></tr></table></figure>\n<p>然后在任意空白位置定义：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[id]: http://example.com/ &quot;Optional Title&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"图像\">图像</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![Alt text](/path/to/img.jpg)</span><br><span class=\"line\">![Alt text](/path/to/img.jpg &quot;Optional Title&quot;)</span><br></pre></td></tr></table></figure>\n<p>会被解释为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&apos;/path/to/img.jpg&apos; alt=&apos;Alt text&apos; /&gt;</span><br><span class=\"line\">&lt;img src=&apos;/path/to/img.jpg&apos; alt=&apos;Alt text&apos; title=&apos;Optional Title&apos; /&gt;</span><br></pre></td></tr></table></figure>\n<p>同样，图像也有类似的参考式语法。</p>\n<h2 id=\"自动链接\">自动链接</h2>\n<p>如果链接的地址和名字重复，可以用尖括号语法将其简化。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;http://example.com/&gt;</span><br></pre></td></tr></table></figure>\n<p>就相当于</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[http://example.com/](http://example.com/)</span><br></pre></td></tr></table></figure>\n<p>切记，大多数编辑器都会自动将符合url规则的东西视为链接，并且解释成链接。很多时候作者由于疏忽等缘故，链接和后面的中文之间缺少空格，导致链接不正常。所以我建议，链接要么加上尖括号，要么两端加上空格。</p>\n<h2 id=\"转义\">转义</h2>\n<p>markdown支持在以下字符前面插入反斜杠</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\   反斜线</span><br><span class=\"line\">`   反引号</span><br><span class=\"line\">*   星号</span><br><span class=\"line\">_   底线</span><br><span class=\"line\">&#123;&#125;  花括号</span><br><span class=\"line\">[]  方括号</span><br><span class=\"line\">()  括弧</span><br><span class=\"line\">#   井字号</span><br><span class=\"line\">+   加号</span><br><span class=\"line\">-   减号</span><br><span class=\"line\">.   英文句点</span><br><span class=\"line\">!   惊叹号</span><br></pre></td></tr></table></figure>\n<p>插入之后，将不再解析这些字符，而是原样输出。</p>\n<h2 id=\"表格\">表格</h2>\n<p>表格是github风格独有的语法，但近年来渐渐被大多数编辑器支持。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| Item     | Value | Qty   |</span><br><span class=\"line\">| :------- | ----: | :---: |</span><br><span class=\"line\">| Computer | $1600 |  5    |</span><br><span class=\"line\">| Phone    | $12   |  12   |</span><br><span class=\"line\">| Pipe     | $1    |  234  |</span><br></pre></td></tr></table></figure>\n<p>会被解释成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;table&gt;</span><br><span class=\"line\">&lt;thead&gt;</span><br><span class=\"line\">&lt;tr&gt;</span><br><span class=\"line\">  &lt;th align=&quot;left&quot;&gt;Item&lt;/th&gt;</span><br><span class=\"line\">  &lt;th align=&quot;right&quot;&gt;Value&lt;/th&gt;</span><br><span class=\"line\">  &lt;th align=&quot;center&quot;&gt;Qty&lt;/th&gt;</span><br><span class=\"line\">&lt;/tr&gt;</span><br><span class=\"line\">&lt;/thead&gt;</span><br><span class=\"line\">&lt;tbody&gt;&lt;tr&gt;</span><br><span class=\"line\">  &lt;td align=&quot;left&quot;&gt;Computer&lt;/td&gt;</span><br><span class=\"line\">  &lt;td align=&quot;right&quot;&gt;$1600&lt;/td&gt;</span><br><span class=\"line\">  &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;</span><br><span class=\"line\">&lt;/tr&gt;</span><br><span class=\"line\">&lt;tr&gt;</span><br><span class=\"line\">  &lt;td align=&quot;left&quot;&gt;Phone&lt;/td&gt;</span><br><span class=\"line\">  &lt;td align=&quot;right&quot;&gt;$12&lt;/td&gt;</span><br><span class=\"line\">  &lt;td align=&quot;center&quot;&gt;12&lt;/td&gt;</span><br><span class=\"line\">&lt;/tr&gt;</span><br><span class=\"line\">&lt;tr&gt;</span><br><span class=\"line\">  &lt;td align=&quot;left&quot;&gt;Pipe&lt;/td&gt;</span><br><span class=\"line\">  &lt;td align=&quot;right&quot;&gt;$1&lt;/td&gt;</span><br><span class=\"line\">  &lt;td align=&quot;center&quot;&gt;234&lt;/td&gt;</span><br><span class=\"line\">&lt;/tr&gt;</span><br><span class=\"line\">&lt;/tbody&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure>\n<p>要注意第二行的冒号决定了居左居右还是居中，如果你不加冒号，默认是居左的。</p>\n<p>另外可以把第一行去掉，做成没有表头的表格，但第二行始终是要有的。</p>\n<h2 id=\"内联-html\">内联 HTML</h2>\n<p>markdown 的语法简洁，但有其局限性，所以特意保留了内联html这种方式。任何html标签及其内容，都会原样输出到结果中。也就是说，标签中的星号等作为markdown结构的符号，以及构成html标签和实体的符号，都不会做任何转义。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>原文链接：<br>\n<a href=\"https://github.com/wizardforcel/markdown-simple-world/blob/master/2.md\" target=\"_blank\" rel=\"noopener\">https://github.com/wizardforcel/markdown-simple-world/blob/master/2.md</a></p>\n</blockquote>\n<hr>\n<h1>Markdown 基本语法</h1>\n<h2 id=\"段落\">段落</h2>\n<p>非常自然，一行文字就是一个段落。</p>\n<p>比如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是一个段落。</span><br></pre></td></tr></table></figure>\n<p>会被解释成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;这是一个段落。&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p>如果你需要另起一段，请在两个段落之间隔一个空行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是一个段落。</span><br><span class=\"line\"></span><br><span class=\"line\">这是另一个段落。</span><br></pre></td></tr></table></figure>\n<p>会解释成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;这是一个段落&lt;p&gt;</span><br><span class=\"line\">&lt;p&gt;这是另一个段落&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p>不隔一个空行的换行行为，在一些编辑器中被解释为换行，即插入一个<code>&lt;br /&gt;</code>标签。对与另外一些编辑器，会被解释为插入一个空格。对于后者，若要插入换行标签，请在当前一行的结尾打两个空格。</p>\n<h2 id=\"粗体-斜体\">粗体、斜体</h2>\n<p>可以使用星号<code>*</code>或下划线<code>_</code>指定粗体或者斜体。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*这是斜体*</span><br><span class=\"line\">_这也是斜体_</span><br><span class=\"line\">**这是粗体**</span><br><span class=\"line\">***这是粗体+斜体***</span><br></pre></td></tr></table></figure>\n<p>会被解释成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;em&gt;这是斜体&lt;/em&gt;</span><br><span class=\"line\">&lt;em&gt;这也是斜体&lt;/em&gt;</span><br><span class=\"line\">&lt;strong&gt;这是粗体&lt;/strong&gt;</span><br><span class=\"line\">&lt;strong&gt;&lt;em&gt;这是粗体+斜体&lt;/strong&gt;&lt;/em&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"删除线\">删除线</h2>\n<p>一部分编辑器支持删除线，它不是经典markdown中的要素。用波浪线<code>~</code>定义删除线。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~~就像这样~~</span><br></pre></td></tr></table></figure>\n<p>会被解释成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;strike&gt;就像这样&lt;/strike&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"标题\">标题</h2>\n<p>markdown总支持1~6六级标题，通过在一行之前加上不同数量的井号来表示。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 这是 H1 #</span><br><span class=\"line\"></span><br><span class=\"line\">## 这是 H2 ##</span><br><span class=\"line\"></span><br><span class=\"line\">### 这是 H3 ###</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">###### 这是 H6 ######</span><br></pre></td></tr></table></figure>\n<p>行尾可以加上任意数量的井号字符，这些字符不会算作标题内容。通常会加上相等数量的字符以保持对称。</p>\n<p>此外，H1和H2也可以采用在文本下方添加底线来实现，比如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是 H1</span><br><span class=\"line\">=======</span><br><span class=\"line\"></span><br><span class=\"line\">这是 H2</span><br><span class=\"line\">-------</span><br></pre></td></tr></table></figure>\n<h2 id=\"引用\">引用</h2>\n<p>通过在行首加上大于号<code>&gt;</code>来添加引用格式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class=\"line\">consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class=\"line\">Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class=\"line\">id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure>\n<p>引用可以嵌套：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; This is the first level of quoting.</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; &gt; This is nested blockquote.</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; Back to the first level.</span><br></pre></td></tr></table></figure>\n<p>也可以嵌套其他格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; ## 这是一个标题。</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; 1.   这是第一行列表项。</span><br><span class=\"line\">&gt; 2.   这是第二行列表项。</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt; 给出一些例子代码：</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"列表\">列表</h2>\n<p>无序列表使用星号、加号或是减号作为列表标记：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*   Red</span><br><span class=\"line\">*   Green</span><br><span class=\"line\">*   Blue</span><br></pre></td></tr></table></figure>\n<p>等同于</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+   Red</span><br><span class=\"line\">+   Green</span><br><span class=\"line\">+   Blue</span><br></pre></td></tr></table></figure>\n<p>和</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-   Red</span><br><span class=\"line\">-   Green</span><br><span class=\"line\">-   Blue</span><br></pre></td></tr></table></figure>\n<p>有序列表则使用数字接着一个英文句点：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.  Bird</span><br><span class=\"line\">2.  McHale</span><br><span class=\"line\">3.  Parish</span><br></pre></td></tr></table></figure>\n<p>数字并不会影响输出的 HTML 结果，也就是说上面的例子等同于：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.  Bird</span><br><span class=\"line\">1.  McHale</span><br><span class=\"line\">1.  Parish</span><br></pre></td></tr></table></figure>\n<h2 id=\"内联代码\">内联代码</h2>\n<p>用反引号<code>`</code>来标记内联代码，它们会解释成<code>&lt;code&gt;</code>标签。如果代码的内容中有反引号，请用两个反引号包裹。代码中的<code>&amp;</code>、<code>&lt;</code>、<code>&gt;</code>符号都会自动转义，请放心使用。</p>\n<h2 id=\"代码区域\">代码区域</h2>\n<p>有两种方式标记代码区域，原生风格是行首缩进四个空格。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是一个普通段落：</span><br><span class=\"line\"></span><br><span class=\"line\">    这是一个代码区块。</span><br></pre></td></tr></table></figure>\n<p>会被解释成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;这是一个普通段落：&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;pre&gt;&lt;code&gt;这是一个代码区块。</span><br><span class=\"line\">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure>\n<p>除了行首的4个空格会被移出，其它不变。像内联代码一样，上述三种符号也会被转义。但在代码段中，星号之类的markdown标记符号则不会解析。</p>\n<p>还有一种是github的风格，代码段的前后用三个反引号独占一行来标记。</p>\n<p><img src=\"img/2-1.png\" alt=\"\"></p>\n<p>目前主流编辑器都支持这种风格。</p>\n<h2 id=\"分隔线\">分隔线</h2>\n<p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* * *</span><br><span class=\"line\">***</span><br><span class=\"line\">*****</span><br><span class=\"line\">- - -</span><br><span class=\"line\">---------------------------------------</span><br></pre></td></tr></table></figure>\n<h2 id=\"链接\">链接</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[an example](http://example.com/)</span><br><span class=\"line\">[an example](http://example.com/ &quot;Optional Title&quot;)</span><br></pre></td></tr></table></figure>\n<p>会被解释为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=&apos;http://example.com/&apos;&gt;an example&lt;/a&gt;</span><br><span class=\"line\">&lt;a href=&apos;http://example.com/&apos; title=&quot;Optional Title&quot;&gt;an example&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n<p>除了上面的行内式，也可以使用参考式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[an example][id]</span><br></pre></td></tr></table></figure>\n<p>然后在任意空白位置定义：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[id]: http://example.com/ &quot;Optional Title&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"图像\">图像</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![Alt text](/path/to/img.jpg)</span><br><span class=\"line\">![Alt text](/path/to/img.jpg &quot;Optional Title&quot;)</span><br></pre></td></tr></table></figure>\n<p>会被解释为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&apos;/path/to/img.jpg&apos; alt=&apos;Alt text&apos; /&gt;</span><br><span class=\"line\">&lt;img src=&apos;/path/to/img.jpg&apos; alt=&apos;Alt text&apos; title=&apos;Optional Title&apos; /&gt;</span><br></pre></td></tr></table></figure>\n<p>同样，图像也有类似的参考式语法。</p>\n<h2 id=\"自动链接\">自动链接</h2>\n<p>如果链接的地址和名字重复，可以用尖括号语法将其简化。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;http://example.com/&gt;</span><br></pre></td></tr></table></figure>\n<p>就相当于</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[http://example.com/](http://example.com/)</span><br></pre></td></tr></table></figure>\n<p>切记，大多数编辑器都会自动将符合url规则的东西视为链接，并且解释成链接。很多时候作者由于疏忽等缘故，链接和后面的中文之间缺少空格，导致链接不正常。所以我建议，链接要么加上尖括号，要么两端加上空格。</p>\n<h2 id=\"转义\">转义</h2>\n<p>markdown支持在以下字符前面插入反斜杠</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\   反斜线</span><br><span class=\"line\">`   反引号</span><br><span class=\"line\">*   星号</span><br><span class=\"line\">_   底线</span><br><span class=\"line\">&#123;&#125;  花括号</span><br><span class=\"line\">[]  方括号</span><br><span class=\"line\">()  括弧</span><br><span class=\"line\">#   井字号</span><br><span class=\"line\">+   加号</span><br><span class=\"line\">-   减号</span><br><span class=\"line\">.   英文句点</span><br><span class=\"line\">!   惊叹号</span><br></pre></td></tr></table></figure>\n<p>插入之后，将不再解析这些字符，而是原样输出。</p>\n<h2 id=\"表格\">表格</h2>\n<p>表格是github风格独有的语法，但近年来渐渐被大多数编辑器支持。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| Item     | Value | Qty   |</span><br><span class=\"line\">| :------- | ----: | :---: |</span><br><span class=\"line\">| Computer | $1600 |  5    |</span><br><span class=\"line\">| Phone    | $12   |  12   |</span><br><span class=\"line\">| Pipe     | $1    |  234  |</span><br></pre></td></tr></table></figure>\n<p>会被解释成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;table&gt;</span><br><span class=\"line\">&lt;thead&gt;</span><br><span class=\"line\">&lt;tr&gt;</span><br><span class=\"line\">  &lt;th align=&quot;left&quot;&gt;Item&lt;/th&gt;</span><br><span class=\"line\">  &lt;th align=&quot;right&quot;&gt;Value&lt;/th&gt;</span><br><span class=\"line\">  &lt;th align=&quot;center&quot;&gt;Qty&lt;/th&gt;</span><br><span class=\"line\">&lt;/tr&gt;</span><br><span class=\"line\">&lt;/thead&gt;</span><br><span class=\"line\">&lt;tbody&gt;&lt;tr&gt;</span><br><span class=\"line\">  &lt;td align=&quot;left&quot;&gt;Computer&lt;/td&gt;</span><br><span class=\"line\">  &lt;td align=&quot;right&quot;&gt;$1600&lt;/td&gt;</span><br><span class=\"line\">  &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;</span><br><span class=\"line\">&lt;/tr&gt;</span><br><span class=\"line\">&lt;tr&gt;</span><br><span class=\"line\">  &lt;td align=&quot;left&quot;&gt;Phone&lt;/td&gt;</span><br><span class=\"line\">  &lt;td align=&quot;right&quot;&gt;$12&lt;/td&gt;</span><br><span class=\"line\">  &lt;td align=&quot;center&quot;&gt;12&lt;/td&gt;</span><br><span class=\"line\">&lt;/tr&gt;</span><br><span class=\"line\">&lt;tr&gt;</span><br><span class=\"line\">  &lt;td align=&quot;left&quot;&gt;Pipe&lt;/td&gt;</span><br><span class=\"line\">  &lt;td align=&quot;right&quot;&gt;$1&lt;/td&gt;</span><br><span class=\"line\">  &lt;td align=&quot;center&quot;&gt;234&lt;/td&gt;</span><br><span class=\"line\">&lt;/tr&gt;</span><br><span class=\"line\">&lt;/tbody&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure>\n<p>要注意第二行的冒号决定了居左居右还是居中，如果你不加冒号，默认是居左的。</p>\n<p>另外可以把第一行去掉，做成没有表头的表格，但第二行始终是要有的。</p>\n<h2 id=\"内联-html\">内联 HTML</h2>\n<p>markdown 的语法简洁，但有其局限性，所以特意保留了内联html这种方式。任何html标签及其内容，都会原样输出到结果中。也就是说，标签中的星号等作为markdown结构的符号，以及构成html标签和实体的符号，都不会做任何转义。</p>\n"},{"title":"Markdown高级语法","catalog":true,"date":"2018-06-21T03:58:34.000Z","subtitle":null,"header-img":null,"category":null,"_content":">原文链接：\n>https://github.com/wizardforcel/markdown-simple-world/blob/master/3.md\n---\n# Markdown 高级语法\n\n只有少数编辑器支持，使用前请先确认。\n\n## 定义列表\n\n```\nTerm 1\nTerm 2\n:   Definition A\n:   Definition B\n```\n\n会被编译成\n\n```\n<dl>\n<dd>Term 1</dd>\n<dd>Term 2</dd>\n<dt>Definition A<dt>\n<dt>Definition A<dt>\n</dl>\n```\n\n## 目录\n\n通过`[TOC]`标记来插入目录。\n\n## TeX公式\n\n内联的TeX公式使用一个美元符号标记。\n\n```\n$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$\n```\n\n会被编译成\n\n![](img/3-1.png)\n\nTeX公式块用独占一行的两个美元符号来标记。\n\n```\n$$\n\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.\n$$\n```\n\n会被编译成\n\n![](img/3-2.png)\n\n如果你的编辑器不支持这个功能，可以手动解决。首先引入mathjax脚本：\n\n```\n<script type=\"text/javascript\" src=\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML\"></script>\n```\n\n之后，在需要插入公式的地方使用`<script>`标签包裹公式：\n\n```\n<script type=\"math/tex\">\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N</script>\n\n<script type=\"math/tex; mode=display\">\n\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.\n</script>\n```\n\nTeX的语法参考请见[这里](http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference)。\n\n## UML图\n\n可以像这样来画uml时序图：\n\n![](img/3-3.png)\n\n![](img/3-4.png)\n\n这是uml流程图：\n\n![](img/3-5.png)\n\n![](img/3-6.png)\n\n时序图的语法请见[这里](http://bramp.github.io/js-sequence-diagrams/)。流程图的语法请见[这里](http://adrai.github.io/flowchart.js/)。","source":"_posts/2018-06-21-Markdown高级语法.md","raw":"---\ntitle: Markdown高级语法\ncatalog: true\ndate: 2018-06-21 11:58:34\nsubtitle:\nheader-img:\ntags:\ncategory:\n---\n>原文链接：\n>https://github.com/wizardforcel/markdown-simple-world/blob/master/3.md\n---\n# Markdown 高级语法\n\n只有少数编辑器支持，使用前请先确认。\n\n## 定义列表\n\n```\nTerm 1\nTerm 2\n:   Definition A\n:   Definition B\n```\n\n会被编译成\n\n```\n<dl>\n<dd>Term 1</dd>\n<dd>Term 2</dd>\n<dt>Definition A<dt>\n<dt>Definition A<dt>\n</dl>\n```\n\n## 目录\n\n通过`[TOC]`标记来插入目录。\n\n## TeX公式\n\n内联的TeX公式使用一个美元符号标记。\n\n```\n$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$\n```\n\n会被编译成\n\n![](img/3-1.png)\n\nTeX公式块用独占一行的两个美元符号来标记。\n\n```\n$$\n\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.\n$$\n```\n\n会被编译成\n\n![](img/3-2.png)\n\n如果你的编辑器不支持这个功能，可以手动解决。首先引入mathjax脚本：\n\n```\n<script type=\"text/javascript\" src=\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML\"></script>\n```\n\n之后，在需要插入公式的地方使用`<script>`标签包裹公式：\n\n```\n<script type=\"math/tex\">\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N</script>\n\n<script type=\"math/tex; mode=display\">\n\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.\n</script>\n```\n\nTeX的语法参考请见[这里](http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference)。\n\n## UML图\n\n可以像这样来画uml时序图：\n\n![](img/3-3.png)\n\n![](img/3-4.png)\n\n这是uml流程图：\n\n![](img/3-5.png)\n\n![](img/3-6.png)\n\n时序图的语法请见[这里](http://bramp.github.io/js-sequence-diagrams/)。流程图的语法请见[这里](http://adrai.github.io/flowchart.js/)。","slug":"Markdown高级语法","published":1,"updated":"2018-06-21T03:59:54.103Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj75gxw1000jtktujfb3fem7","content":"<blockquote>\n<p>原文链接：<br>\n<a href=\"https://github.com/wizardforcel/markdown-simple-world/blob/master/3.md\" target=\"_blank\" rel=\"noopener\">https://github.com/wizardforcel/markdown-simple-world/blob/master/3.md</a></p>\n</blockquote>\n<hr>\n<h1>Markdown 高级语法</h1>\n<p>只有少数编辑器支持，使用前请先确认。</p>\n<h2 id=\"定义列表\">定义列表</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Term 1</span><br><span class=\"line\">Term 2</span><br><span class=\"line\">:   Definition A</span><br><span class=\"line\">:   Definition B</span><br></pre></td></tr></table></figure>\n<p>会被编译成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dl&gt;</span><br><span class=\"line\">&lt;dd&gt;Term 1&lt;/dd&gt;</span><br><span class=\"line\">&lt;dd&gt;Term 2&lt;/dd&gt;</span><br><span class=\"line\">&lt;dt&gt;Definition A&lt;dt&gt;</span><br><span class=\"line\">&lt;dt&gt;Definition A&lt;dt&gt;</span><br><span class=\"line\">&lt;/dl&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"目录\">目录</h2>\n<p>通过<code>[TOC]</code>标记来插入目录。</p>\n<h2 id=\"tex公式\">TeX公式</h2>\n<p>内联的TeX公式使用一个美元符号标记。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$</span><br></pre></td></tr></table></figure>\n<p>会被编译成</p>\n<p><img src=\"img/3-1.png\" alt=\"\"></p>\n<p>TeX公式块用独占一行的两个美元符号来标记。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<p>会被编译成</p>\n<p><img src=\"img/3-2.png\" alt=\"\"></p>\n<p>如果你的编辑器不支持这个功能，可以手动解决。首先引入mathjax脚本：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>之后，在需要插入公式的地方使用<code>&lt;script&gt;</code>标签包裹公式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;math/tex&quot;&gt;\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script type=&quot;math/tex; mode=display&quot;&gt;</span><br><span class=\"line\">\\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>TeX的语法参考请见<a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\" target=\"_blank\" rel=\"noopener\">这里</a>。</p>\n<h2 id=\"uml图\">UML图</h2>\n<p>可以像这样来画uml时序图：</p>\n<p><img src=\"img/3-3.png\" alt=\"\"></p>\n<p><img src=\"img/3-4.png\" alt=\"\"></p>\n<p>这是uml流程图：</p>\n<p><img src=\"img/3-5.png\" alt=\"\"></p>\n<p><img src=\"img/3-6.png\" alt=\"\"></p>\n<p>时序图的语法请见<a href=\"http://bramp.github.io/js-sequence-diagrams/\" target=\"_blank\" rel=\"noopener\">这里</a>。流程图的语法请见<a href=\"http://adrai.github.io/flowchart.js/\" target=\"_blank\" rel=\"noopener\">这里</a>。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>原文链接：<br>\n<a href=\"https://github.com/wizardforcel/markdown-simple-world/blob/master/3.md\" target=\"_blank\" rel=\"noopener\">https://github.com/wizardforcel/markdown-simple-world/blob/master/3.md</a></p>\n</blockquote>\n<hr>\n<h1>Markdown 高级语法</h1>\n<p>只有少数编辑器支持，使用前请先确认。</p>\n<h2 id=\"定义列表\">定义列表</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Term 1</span><br><span class=\"line\">Term 2</span><br><span class=\"line\">:   Definition A</span><br><span class=\"line\">:   Definition B</span><br></pre></td></tr></table></figure>\n<p>会被编译成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dl&gt;</span><br><span class=\"line\">&lt;dd&gt;Term 1&lt;/dd&gt;</span><br><span class=\"line\">&lt;dd&gt;Term 2&lt;/dd&gt;</span><br><span class=\"line\">&lt;dt&gt;Definition A&lt;dt&gt;</span><br><span class=\"line\">&lt;dt&gt;Definition A&lt;dt&gt;</span><br><span class=\"line\">&lt;/dl&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"目录\">目录</h2>\n<p>通过<code>[TOC]</code>标记来插入目录。</p>\n<h2 id=\"tex公式\">TeX公式</h2>\n<p>内联的TeX公式使用一个美元符号标记。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$</span><br></pre></td></tr></table></figure>\n<p>会被编译成</p>\n<p><img src=\"img/3-1.png\" alt=\"\"></p>\n<p>TeX公式块用独占一行的两个美元符号来标记。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$</span><br><span class=\"line\">\\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.</span><br><span class=\"line\">$$</span><br></pre></td></tr></table></figure>\n<p>会被编译成</p>\n<p><img src=\"img/3-2.png\" alt=\"\"></p>\n<p>如果你的编辑器不支持这个功能，可以手动解决。首先引入mathjax脚本：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>之后，在需要插入公式的地方使用<code>&lt;script&gt;</code>标签包裹公式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;math/tex&quot;&gt;\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script type=&quot;math/tex; mode=display&quot;&gt;</span><br><span class=\"line\">\\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>TeX的语法参考请见<a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\" target=\"_blank\" rel=\"noopener\">这里</a>。</p>\n<h2 id=\"uml图\">UML图</h2>\n<p>可以像这样来画uml时序图：</p>\n<p><img src=\"img/3-3.png\" alt=\"\"></p>\n<p><img src=\"img/3-4.png\" alt=\"\"></p>\n<p>这是uml流程图：</p>\n<p><img src=\"img/3-5.png\" alt=\"\"></p>\n<p><img src=\"img/3-6.png\" alt=\"\"></p>\n<p>时序图的语法请见<a href=\"http://bramp.github.io/js-sequence-diagrams/\" target=\"_blank\" rel=\"noopener\">这里</a>。流程图的语法请见<a href=\"http://adrai.github.io/flowchart.js/\" target=\"_blank\" rel=\"noopener\">这里</a>。</p>\n"},{"title":"postgreSQL数据库的备份与恢复","catalog":true,"date":"2018-06-21T02:13:36.000Z","subtitle":null,"header-img":null,"_content":"> 使用pg_dump备份数据库，使用psql 恢复数据库\n\n---\n# 命令\n以管理员身份运行cmd， 导航到postgreSQL bin文件夹下,如已将bin路径添加到环境变量path中，可直接执行命令。\ncd C:\\Program Files\\PostgreSQL\\9.6\\bin\n\n## 导出整个数据库\npg_dump -h localhost(数据库地址) -U postgres(用户名) 数据库名(缺省时同用户名) >data\\dum.sql(导出位置)\n例如：\n```\npg_dump -h localhost -U postgres wedding_platform >D:\\project\\wedding_platform.sql\n\n```\n## 导出某个表\npg_dump -h localhost(数据库地址) -U postgres(用户名) 数据库名(缺省时同用户名)  -t table(表名) >data\\dum.sql(导出位置)\n\n## 恢复数据库\n首先创建一个新数据库\n```\ncreatedb -U postgres wedding_temp\n```\n导入数据库：\npsql -U postgres(用户名)  数据库名(缺省时同用户名) < data\\dum.sql\n```\npsql -U postgres wedding_temp < D:\\project\\wedding_platform.sql\n```\n# 使用pgAdmin\n官方文档：\nhttps://www.pgadmin.org/docs/pgadmin4/3.x/backup_and_restore.html\n\n\n\n","source":"_posts/2018-06-21-postgre数据库的备份与恢复.md","raw":"---\ntitle: 'postgreSQL数据库的备份与恢复'\ncatalog: true\ndate: 2018-06-21 10:13:36\nsubtitle:\nheader-img:\ntags:\n- postgreSQL\ncategory:\n- 数据库\n---\n> 使用pg_dump备份数据库，使用psql 恢复数据库\n\n---\n# 命令\n以管理员身份运行cmd， 导航到postgreSQL bin文件夹下,如已将bin路径添加到环境变量path中，可直接执行命令。\ncd C:\\Program Files\\PostgreSQL\\9.6\\bin\n\n## 导出整个数据库\npg_dump -h localhost(数据库地址) -U postgres(用户名) 数据库名(缺省时同用户名) >data\\dum.sql(导出位置)\n例如：\n```\npg_dump -h localhost -U postgres wedding_platform >D:\\project\\wedding_platform.sql\n\n```\n## 导出某个表\npg_dump -h localhost(数据库地址) -U postgres(用户名) 数据库名(缺省时同用户名)  -t table(表名) >data\\dum.sql(导出位置)\n\n## 恢复数据库\n首先创建一个新数据库\n```\ncreatedb -U postgres wedding_temp\n```\n导入数据库：\npsql -U postgres(用户名)  数据库名(缺省时同用户名) < data\\dum.sql\n```\npsql -U postgres wedding_temp < D:\\project\\wedding_platform.sql\n```\n# 使用pgAdmin\n官方文档：\nhttps://www.pgadmin.org/docs/pgadmin4/3.x/backup_and_restore.html\n\n\n\n","slug":"postgre数据库的备份与恢复","published":1,"updated":"2018-06-21T03:09:42.221Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj75gxw5000ktktusqldzlo3","content":"<blockquote>\n<p>使用pg_dump备份数据库，使用psql 恢复数据库</p>\n</blockquote>\n<hr>\n<h1>命令</h1>\n<p>以管理员身份运行cmd， 导航到postgreSQL bin文件夹下,如已将bin路径添加到环境变量path中，可直接执行命令。<br>\ncd C:\\Program Files\\PostgreSQL\\9.6\\bin</p>\n<h2 id=\"导出整个数据库\">导出整个数据库</h2>\n<p>pg_dump -h localhost(数据库地址) -U postgres(用户名) 数据库名(缺省时同用户名) &gt;data\\dum.sql(导出位置)<br>\n例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pg_dump -h localhost -U postgres wedding_platform &gt;D:\\project\\wedding_platform.sql</span><br></pre></td></tr></table></figure>\n<h2 id=\"导出某个表\">导出某个表</h2>\n<p>pg_dump -h localhost(数据库地址) -U postgres(用户名) 数据库名(缺省时同用户名)  -t table(表名) &gt;data\\dum.sql(导出位置)</p>\n<h2 id=\"恢复数据库\">恢复数据库</h2>\n<p>首先创建一个新数据库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">createdb -U postgres wedding_temp</span><br></pre></td></tr></table></figure>\n<p>导入数据库：<br>\npsql -U postgres(用户名)  数据库名(缺省时同用户名) &lt; data\\dum.sql</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">psql -U postgres wedding_temp &lt; D:\\project\\wedding_platform.sql</span><br></pre></td></tr></table></figure>\n<h1>使用pgAdmin</h1>\n<p>官方文档：<br>\n<a href=\"https://www.pgadmin.org/docs/pgadmin4/3.x/backup_and_restore.html\" target=\"_blank\" rel=\"noopener\">https://www.pgadmin.org/docs/pgadmin4/3.x/backup_and_restore.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>使用pg_dump备份数据库，使用psql 恢复数据库</p>\n</blockquote>\n<hr>\n<h1>命令</h1>\n<p>以管理员身份运行cmd， 导航到postgreSQL bin文件夹下,如已将bin路径添加到环境变量path中，可直接执行命令。<br>\ncd C:\\Program Files\\PostgreSQL\\9.6\\bin</p>\n<h2 id=\"导出整个数据库\">导出整个数据库</h2>\n<p>pg_dump -h localhost(数据库地址) -U postgres(用户名) 数据库名(缺省时同用户名) &gt;data\\dum.sql(导出位置)<br>\n例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pg_dump -h localhost -U postgres wedding_platform &gt;D:\\project\\wedding_platform.sql</span><br></pre></td></tr></table></figure>\n<h2 id=\"导出某个表\">导出某个表</h2>\n<p>pg_dump -h localhost(数据库地址) -U postgres(用户名) 数据库名(缺省时同用户名)  -t table(表名) &gt;data\\dum.sql(导出位置)</p>\n<h2 id=\"恢复数据库\">恢复数据库</h2>\n<p>首先创建一个新数据库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">createdb -U postgres wedding_temp</span><br></pre></td></tr></table></figure>\n<p>导入数据库：<br>\npsql -U postgres(用户名)  数据库名(缺省时同用户名) &lt; data\\dum.sql</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">psql -U postgres wedding_temp &lt; D:\\project\\wedding_platform.sql</span><br></pre></td></tr></table></figure>\n<h1>使用pgAdmin</h1>\n<p>官方文档：<br>\n<a href=\"https://www.pgadmin.org/docs/pgadmin4/3.x/backup_and_restore.html\" target=\"_blank\" rel=\"noopener\">https://www.pgadmin.org/docs/pgadmin4/3.x/backup_and_restore.html</a></p>\n"},{"title":"BOM的常见内置方法和内置对象","catalog":true,"date":"2018-07-04T09:02:40.000Z","subtitle":null,"header-img":null,"category":null,"_content":"\n# JavaScript的组成\n\njavascript的组成分为三部分\n\n+ ECMAScript:JavaScript 的语法标准。包括变量、表达式、运算符、函数、if语句、for语句等等。\n+ DOM: Document Object Model,文档对象模型，操作网页上的元素的API。比如让盒子移动、变色、轮播图等\n+ BOM：Browser Object Model,浏览器对象模型，操作浏览器部分功能的API。比如让浏览器自动滚动。\n\n# 什么是BOM\n\nBOM 的结构图\n![BOM结构图](BOM.png)\n从上图可以看出：\n\n+ windows对象是BOM的顶层核心对象，所有的对象都是通过它延申出来的，也可以称为windows的子对象。\n+ DOM是BOM的一部分\n\n## window对象\n\n+ window对象是JavaScript中的顶级对象。\n+ 全局变量、自定义函数也是windowd对象的属性和方法\n+ window对象下的属性和方法调用时可以省略window.\n\n# BOM常见的内置方法和对象\n\n## 弹出系统对话框\n\n比如说，alert(1) 是 window.alert（1）的缩写，因为它是window的子方法\n系统对话框有三种：\n\n```JavaScript\nalert(); //警告框，不同浏览器下的外观是不一样的\nconfirm(); //确认框，兼容不好\nprompt();   //提示框，不推荐使用\n```\n\n## 打开窗口，关闭窗口\n\n1、打开窗口\n\n```JavaScript\n    window.open(url,target,param);\n```\n\n参数解释:\n\n+ url:要打开的地址\n+ target：新窗口的位置,可以是：_blank、_self(当前窗口)，_parent(父框架).\n+ param:新窗口的一些设置\n+ 返回值：新窗口的句柄\n\n**param**这个参数，可以填很多的参数（），比如\n\n+ name：新窗口的名称，可以为空\n+ featurse：属性控制字符串，在此控制窗口的各种属性，属性之间以逗号隔开。\n+ fullscreen= { yes/no/1/0 } 是否全屏，默认no\n+ channelmode= { yes/no/1/0 } 是否显示频道栏，默认no\n+ toolbar= { yes/no/1/0 } 是否显示工具条，默认no\n+ location= { yes/no/1/0 } 是否显示地址栏，默认no。（有的浏览器不一定支持）\n+ directories = { yes/no/1/0 } 是否显示转向按钮，默认no\n+ status= { yes/no/1/0 } 是否显示窗口状态条，默认no\n+ menubar= { yes/no/1/0 } 是否显示菜单，默认no\n+ scrollbars= { yes/no/1/0 } 是否显示滚动条，默认yes\n+ resizable= { yes/no/1/0 } 是否窗口可调整大小，默认no\n+ width=number 窗口宽度（像素单位）\n+ height=number 窗口高度（像素单位）\n+ top=number 窗口离屏幕顶部距离（像素单位）\n+ left=number 窗口离屏幕左边距离（像素单位）\n\n各个参数之间用逗号隔开就行，但我们最好是把它们统一放到json里。\n\n2、 关闭窗口： window.close();\n代码例子：\n\n```html\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <title></title>\n</head>\n<body>\n<a href=\"javascript:;\">点击我打开一个新的页面</a>\n<a href=\"javascript:;\">点击我关闭本页面</a>\n<script>\n    //新窗口 = window.open(地址,是否开新窗口,新窗口的各种参数);\n    var a1 = document.getElementsByTagName(\"a\")[0];\n    var a2 = document.getElementsByTagName(\"a\")[1];\n    a1.onclick = function () {\n//举例1： window.open(\"http://www.jd.com\",\"_blank\");\n        var json = {\n            \"name\": \"helloworld\",\n            \"fullscreen\": \"no\",\n            \"location\": \"no\",\n            \"width\": \"100px\",\n            \"height\": \"100px\",\n            \"top\": \"100px\",\n            \"left\": \"100px\"\n        };\n        window.open(\"http://www.baidu.com\", \"_blank\", json); //举例2\n    }\n\n    //关闭本页面\n    a2.onclick = function () {\n        window.close();\n    }\n</script>\n</body>\n</html>\n```\n\n3、新窗口相关\n\n+ 新窗口.moveTo(5,5);\n+ 新窗口.moveBy();\n+ 新窗口.resizeTo();\n+ window.resizeBy();   不大懂\n\n代码举例：\n\n```javascript\nvar newWin=window.open('http://baidu.com','_blank',json);\nnewWin.moveTo(500,500)\n```\n\n## localtion 对象\n\nwindow.location 可以简写为location。location相当于浏览器的地址栏，可以将url解析成独立的片段。\n**location对象的属性**\n\n+ href:跳转\n+ hash:返回url中#后面的内容，包含#\n+ host:主机名\n+ pathname url中的路径部分\n+ protocol 协议一般是http,https\n+ search 查询字符串\n\n**location.href 属性举例**\n点击盒子时，进行跳转\n\n```html\n<body>\n<div>smyhvae</div>\n<script>\n\n    var div = document.getElementsByTagName(\"div\")[0];\n\n    div.onclick = function () {\n        location.href = \"http://www.baidu.com\";   //点击div时,跳转到指定链接\n        //window.open(\"http://www.baidu.com\",\"_blank\");  //方式二\n    }\n\n</script>\n</body>\n```\n\nlocation对象的方法:\n\n+ location.assign():改变浏览器地址栏的地址，并记录到历史中\n+ 设置location.href就会调用assign(),一般使用location.href 进行页面跳转\n+ location.replace:替换浏览器地址栏的地址，不会记录到历史中\n+ location.reload()：重新加载，刷新呗\n\n## navigator对象\n\nwindow.navigator 的一些属性可以获取客户端的一些信息\n\n+ userAgent:系统，浏览器\n+ platform:浏览器支持的系统，win/mac/linux\n\n举例:\n\n```javascript\nconsole.log(navigator.userAgent);\nconsole.log(navigator.platform);\n```\n\n## history\n\n1、历史纪录管理\n2、后退\n\n+ history.back();\n+ history.go(-1); //0是刷新\n\n3、前进\n\n+ history.forward();\n+ history.go(1)\n","source":"_posts/2018-07-04-BOM的常见内置方法和内置对象.md","raw":"---\ntitle: BOM的常见内置方法和内置对象\ncatalog: true\ndate: 2018-07-04 17:02:40\nsubtitle:\nheader-img:\ntags:\ncategory:\n---\n\n# JavaScript的组成\n\njavascript的组成分为三部分\n\n+ ECMAScript:JavaScript 的语法标准。包括变量、表达式、运算符、函数、if语句、for语句等等。\n+ DOM: Document Object Model,文档对象模型，操作网页上的元素的API。比如让盒子移动、变色、轮播图等\n+ BOM：Browser Object Model,浏览器对象模型，操作浏览器部分功能的API。比如让浏览器自动滚动。\n\n# 什么是BOM\n\nBOM 的结构图\n![BOM结构图](BOM.png)\n从上图可以看出：\n\n+ windows对象是BOM的顶层核心对象，所有的对象都是通过它延申出来的，也可以称为windows的子对象。\n+ DOM是BOM的一部分\n\n## window对象\n\n+ window对象是JavaScript中的顶级对象。\n+ 全局变量、自定义函数也是windowd对象的属性和方法\n+ window对象下的属性和方法调用时可以省略window.\n\n# BOM常见的内置方法和对象\n\n## 弹出系统对话框\n\n比如说，alert(1) 是 window.alert（1）的缩写，因为它是window的子方法\n系统对话框有三种：\n\n```JavaScript\nalert(); //警告框，不同浏览器下的外观是不一样的\nconfirm(); //确认框，兼容不好\nprompt();   //提示框，不推荐使用\n```\n\n## 打开窗口，关闭窗口\n\n1、打开窗口\n\n```JavaScript\n    window.open(url,target,param);\n```\n\n参数解释:\n\n+ url:要打开的地址\n+ target：新窗口的位置,可以是：_blank、_self(当前窗口)，_parent(父框架).\n+ param:新窗口的一些设置\n+ 返回值：新窗口的句柄\n\n**param**这个参数，可以填很多的参数（），比如\n\n+ name：新窗口的名称，可以为空\n+ featurse：属性控制字符串，在此控制窗口的各种属性，属性之间以逗号隔开。\n+ fullscreen= { yes/no/1/0 } 是否全屏，默认no\n+ channelmode= { yes/no/1/0 } 是否显示频道栏，默认no\n+ toolbar= { yes/no/1/0 } 是否显示工具条，默认no\n+ location= { yes/no/1/0 } 是否显示地址栏，默认no。（有的浏览器不一定支持）\n+ directories = { yes/no/1/0 } 是否显示转向按钮，默认no\n+ status= { yes/no/1/0 } 是否显示窗口状态条，默认no\n+ menubar= { yes/no/1/0 } 是否显示菜单，默认no\n+ scrollbars= { yes/no/1/0 } 是否显示滚动条，默认yes\n+ resizable= { yes/no/1/0 } 是否窗口可调整大小，默认no\n+ width=number 窗口宽度（像素单位）\n+ height=number 窗口高度（像素单位）\n+ top=number 窗口离屏幕顶部距离（像素单位）\n+ left=number 窗口离屏幕左边距离（像素单位）\n\n各个参数之间用逗号隔开就行，但我们最好是把它们统一放到json里。\n\n2、 关闭窗口： window.close();\n代码例子：\n\n```html\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\">\n    <title></title>\n</head>\n<body>\n<a href=\"javascript:;\">点击我打开一个新的页面</a>\n<a href=\"javascript:;\">点击我关闭本页面</a>\n<script>\n    //新窗口 = window.open(地址,是否开新窗口,新窗口的各种参数);\n    var a1 = document.getElementsByTagName(\"a\")[0];\n    var a2 = document.getElementsByTagName(\"a\")[1];\n    a1.onclick = function () {\n//举例1： window.open(\"http://www.jd.com\",\"_blank\");\n        var json = {\n            \"name\": \"helloworld\",\n            \"fullscreen\": \"no\",\n            \"location\": \"no\",\n            \"width\": \"100px\",\n            \"height\": \"100px\",\n            \"top\": \"100px\",\n            \"left\": \"100px\"\n        };\n        window.open(\"http://www.baidu.com\", \"_blank\", json); //举例2\n    }\n\n    //关闭本页面\n    a2.onclick = function () {\n        window.close();\n    }\n</script>\n</body>\n</html>\n```\n\n3、新窗口相关\n\n+ 新窗口.moveTo(5,5);\n+ 新窗口.moveBy();\n+ 新窗口.resizeTo();\n+ window.resizeBy();   不大懂\n\n代码举例：\n\n```javascript\nvar newWin=window.open('http://baidu.com','_blank',json);\nnewWin.moveTo(500,500)\n```\n\n## localtion 对象\n\nwindow.location 可以简写为location。location相当于浏览器的地址栏，可以将url解析成独立的片段。\n**location对象的属性**\n\n+ href:跳转\n+ hash:返回url中#后面的内容，包含#\n+ host:主机名\n+ pathname url中的路径部分\n+ protocol 协议一般是http,https\n+ search 查询字符串\n\n**location.href 属性举例**\n点击盒子时，进行跳转\n\n```html\n<body>\n<div>smyhvae</div>\n<script>\n\n    var div = document.getElementsByTagName(\"div\")[0];\n\n    div.onclick = function () {\n        location.href = \"http://www.baidu.com\";   //点击div时,跳转到指定链接\n        //window.open(\"http://www.baidu.com\",\"_blank\");  //方式二\n    }\n\n</script>\n</body>\n```\n\nlocation对象的方法:\n\n+ location.assign():改变浏览器地址栏的地址，并记录到历史中\n+ 设置location.href就会调用assign(),一般使用location.href 进行页面跳转\n+ location.replace:替换浏览器地址栏的地址，不会记录到历史中\n+ location.reload()：重新加载，刷新呗\n\n## navigator对象\n\nwindow.navigator 的一些属性可以获取客户端的一些信息\n\n+ userAgent:系统，浏览器\n+ platform:浏览器支持的系统，win/mac/linux\n\n举例:\n\n```javascript\nconsole.log(navigator.userAgent);\nconsole.log(navigator.platform);\n```\n\n## history\n\n1、历史纪录管理\n2、后退\n\n+ history.back();\n+ history.go(-1); //0是刷新\n\n3、前进\n\n+ history.forward();\n+ history.go(1)\n","slug":"BOM的常见内置方法和内置对象","published":1,"updated":"2018-07-04T13:20:12.173Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj75gxwb000otktukm9hytsm","content":"<h1>JavaScript的组成</h1>\n<p>javascript的组成分为三部分</p>\n<ul>\n<li>ECMAScript:JavaScript 的语法标准。包括变量、表达式、运算符、函数、if语句、for语句等等。</li>\n<li>DOM: Document Object Model,文档对象模型，操作网页上的元素的API。比如让盒子移动、变色、轮播图等</li>\n<li>BOM：Browser Object Model,浏览器对象模型，操作浏览器部分功能的API。比如让浏览器自动滚动。</li>\n</ul>\n<h1>什么是BOM</h1>\n<p>BOM 的结构图<br>\n<img src=\"BOM.png\" alt=\"BOM结构图\"><br>\n从上图可以看出：</p>\n<ul>\n<li>windows对象是BOM的顶层核心对象，所有的对象都是通过它延申出来的，也可以称为windows的子对象。</li>\n<li>DOM是BOM的一部分</li>\n</ul>\n<h2 id=\"window对象\">window对象</h2>\n<ul>\n<li>window对象是JavaScript中的顶级对象。</li>\n<li>全局变量、自定义函数也是windowd对象的属性和方法</li>\n<li>window对象下的属性和方法调用时可以省略window.</li>\n</ul>\n<h1>BOM常见的内置方法和对象</h1>\n<h2 id=\"弹出系统对话框\">弹出系统对话框</h2>\n<p>比如说，alert(1) 是 window.alert（1）的缩写，因为它是window的子方法<br>\n系统对话框有三种：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(); <span class=\"comment\">//警告框，不同浏览器下的外观是不一样的</span></span><br><span class=\"line\">confirm(); <span class=\"comment\">//确认框，兼容不好</span></span><br><span class=\"line\">prompt();   <span class=\"comment\">//提示框，不推荐使用</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"打开窗口-关闭窗口\">打开窗口，关闭窗口</h2>\n<p>1、打开窗口</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.open(url,target,param);</span><br></pre></td></tr></table></figure>\n<p>参数解释:</p>\n<ul>\n<li>url:要打开的地址</li>\n<li>target：新窗口的位置,可以是：_blank、_self(当前窗口)，_parent(父框架).</li>\n<li>param:新窗口的一些设置</li>\n<li>返回值：新窗口的句柄</li>\n</ul>\n<p><strong>param</strong>这个参数，可以填很多的参数（），比如</p>\n<ul>\n<li>name：新窗口的名称，可以为空</li>\n<li>featurse：属性控制字符串，在此控制窗口的各种属性，属性之间以逗号隔开。</li>\n<li>fullscreen= { yes/no/1/0 } 是否全屏，默认no</li>\n<li>channelmode= { yes/no/1/0 } 是否显示频道栏，默认no</li>\n<li>toolbar= { yes/no/1/0 } 是否显示工具条，默认no</li>\n<li>location= { yes/no/1/0 } 是否显示地址栏，默认no。（有的浏览器不一定支持）</li>\n<li>directories = { yes/no/1/0 } 是否显示转向按钮，默认no</li>\n<li>status= { yes/no/1/0 } 是否显示窗口状态条，默认no</li>\n<li>menubar= { yes/no/1/0 } 是否显示菜单，默认no</li>\n<li>scrollbars= { yes/no/1/0 } 是否显示滚动条，默认yes</li>\n<li>resizable= { yes/no/1/0 } 是否窗口可调整大小，默认no</li>\n<li>width=number 窗口宽度（像素单位）</li>\n<li>height=number 窗口高度（像素单位）</li>\n<li>top=number 窗口离屏幕顶部距离（像素单位）</li>\n<li>left=number 窗口离屏幕左边距离（像素单位）</li>\n</ul>\n<p>各个参数之间用逗号隔开就行，但我们最好是把它们统一放到json里。</p>\n<p>2、 关闭窗口： window.close();<br>\n代码例子：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:;\"</span>&gt;</span>点击我打开一个新的页面<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:;\"</span>&gt;</span>点击我关闭本页面<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//新窗口 = window.open(地址,是否开新窗口,新窗口的各种参数);</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> a1 = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"a\"</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> a2 = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"a\"</span>)[<span class=\"number\">1</span>];</span></span><br><span class=\"line\"><span class=\"javascript\">    a1.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//举例1： window.open(\"http://www.jd.com\",\"_blank\");</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> json = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"name\"</span>: <span class=\"string\">\"helloworld\"</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"fullscreen\"</span>: <span class=\"string\">\"no\"</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"location\"</span>: <span class=\"string\">\"no\"</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"width\"</span>: <span class=\"string\">\"100px\"</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"height\"</span>: <span class=\"string\">\"100px\"</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"top\"</span>: <span class=\"string\">\"100px\"</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"left\"</span>: <span class=\"string\">\"100px\"</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">window</span>.open(<span class=\"string\">\"http://www.baidu.com\"</span>, <span class=\"string\">\"_blank\"</span>, json); <span class=\"comment\">//举例2</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//关闭本页面</span></span></span><br><span class=\"line\"><span class=\"javascript\">    a2.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">window</span>.close();</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>3、新窗口相关</p>\n<ul>\n<li>新窗口.moveTo(5,5);</li>\n<li>新窗口.moveBy();</li>\n<li>新窗口.resizeTo();</li>\n<li>window.resizeBy();   不大懂</li>\n</ul>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newWin=<span class=\"built_in\">window</span>.open(<span class=\"string\">'http://baidu.com'</span>,<span class=\"string\">'_blank'</span>,json);</span><br><span class=\"line\">newWin.moveTo(<span class=\"number\">500</span>,<span class=\"number\">500</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"localtion-对象\">localtion 对象</h2>\n<p>window.location 可以简写为location。location相当于浏览器的地址栏，可以将url解析成独立的片段。<br>\n<strong>location对象的属性</strong></p>\n<ul>\n<li>href:跳转</li>\n<li>hash:返回url中#后面的内容，包含#</li>\n<li>host:主机名</li>\n<li>pathname url中的路径部分</li>\n<li>protocol 协议一般是http,https</li>\n<li>search 查询字符串</li>\n</ul>\n<p><strong>location.href 属性举例</strong><br>\n点击盒子时，进行跳转</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>smyhvae<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> div = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"div\"</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    div.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        location.href = <span class=\"string\">\"http://www.baidu.com\"</span>;   <span class=\"comment\">//点击div时,跳转到指定链接</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//window.open(\"http://www.baidu.com\",\"_blank\");  //方式二</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>location对象的方法:</p>\n<ul>\n<li>location.assign():改变浏览器地址栏的地址，并记录到历史中</li>\n<li>设置location.href就会调用assign(),一般使用location.href 进行页面跳转</li>\n<li>location.replace:替换浏览器地址栏的地址，不会记录到历史中</li>\n<li>location.reload()：重新加载，刷新呗</li>\n</ul>\n<h2 id=\"navigator对象\">navigator对象</h2>\n<p>window.navigator 的一些属性可以获取客户端的一些信息</p>\n<ul>\n<li>userAgent:系统，浏览器</li>\n<li>platform:浏览器支持的系统，win/mac/linux</li>\n</ul>\n<p>举例:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(navigator.userAgent);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(navigator.platform);</span><br></pre></td></tr></table></figure>\n<h2 id=\"history\">history</h2>\n<p>1、历史纪录管理<br>\n2、后退</p>\n<ul>\n<li>history.back();</li>\n<li>history.go(-1); //0是刷新</li>\n</ul>\n<p>3、前进</p>\n<ul>\n<li>history.forward();</li>\n<li>history.go(1)</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1>JavaScript的组成</h1>\n<p>javascript的组成分为三部分</p>\n<ul>\n<li>ECMAScript:JavaScript 的语法标准。包括变量、表达式、运算符、函数、if语句、for语句等等。</li>\n<li>DOM: Document Object Model,文档对象模型，操作网页上的元素的API。比如让盒子移动、变色、轮播图等</li>\n<li>BOM：Browser Object Model,浏览器对象模型，操作浏览器部分功能的API。比如让浏览器自动滚动。</li>\n</ul>\n<h1>什么是BOM</h1>\n<p>BOM 的结构图<br>\n<img src=\"BOM.png\" alt=\"BOM结构图\"><br>\n从上图可以看出：</p>\n<ul>\n<li>windows对象是BOM的顶层核心对象，所有的对象都是通过它延申出来的，也可以称为windows的子对象。</li>\n<li>DOM是BOM的一部分</li>\n</ul>\n<h2 id=\"window对象\">window对象</h2>\n<ul>\n<li>window对象是JavaScript中的顶级对象。</li>\n<li>全局变量、自定义函数也是windowd对象的属性和方法</li>\n<li>window对象下的属性和方法调用时可以省略window.</li>\n</ul>\n<h1>BOM常见的内置方法和对象</h1>\n<h2 id=\"弹出系统对话框\">弹出系统对话框</h2>\n<p>比如说，alert(1) 是 window.alert（1）的缩写，因为它是window的子方法<br>\n系统对话框有三种：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(); <span class=\"comment\">//警告框，不同浏览器下的外观是不一样的</span></span><br><span class=\"line\">confirm(); <span class=\"comment\">//确认框，兼容不好</span></span><br><span class=\"line\">prompt();   <span class=\"comment\">//提示框，不推荐使用</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"打开窗口-关闭窗口\">打开窗口，关闭窗口</h2>\n<p>1、打开窗口</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.open(url,target,param);</span><br></pre></td></tr></table></figure>\n<p>参数解释:</p>\n<ul>\n<li>url:要打开的地址</li>\n<li>target：新窗口的位置,可以是：_blank、_self(当前窗口)，_parent(父框架).</li>\n<li>param:新窗口的一些设置</li>\n<li>返回值：新窗口的句柄</li>\n</ul>\n<p><strong>param</strong>这个参数，可以填很多的参数（），比如</p>\n<ul>\n<li>name：新窗口的名称，可以为空</li>\n<li>featurse：属性控制字符串，在此控制窗口的各种属性，属性之间以逗号隔开。</li>\n<li>fullscreen= { yes/no/1/0 } 是否全屏，默认no</li>\n<li>channelmode= { yes/no/1/0 } 是否显示频道栏，默认no</li>\n<li>toolbar= { yes/no/1/0 } 是否显示工具条，默认no</li>\n<li>location= { yes/no/1/0 } 是否显示地址栏，默认no。（有的浏览器不一定支持）</li>\n<li>directories = { yes/no/1/0 } 是否显示转向按钮，默认no</li>\n<li>status= { yes/no/1/0 } 是否显示窗口状态条，默认no</li>\n<li>menubar= { yes/no/1/0 } 是否显示菜单，默认no</li>\n<li>scrollbars= { yes/no/1/0 } 是否显示滚动条，默认yes</li>\n<li>resizable= { yes/no/1/0 } 是否窗口可调整大小，默认no</li>\n<li>width=number 窗口宽度（像素单位）</li>\n<li>height=number 窗口高度（像素单位）</li>\n<li>top=number 窗口离屏幕顶部距离（像素单位）</li>\n<li>left=number 窗口离屏幕左边距离（像素单位）</li>\n</ul>\n<p>各个参数之间用逗号隔开就行，但我们最好是把它们统一放到json里。</p>\n<p>2、 关闭窗口： window.close();<br>\n代码例子：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:;\"</span>&gt;</span>点击我打开一个新的页面<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:;\"</span>&gt;</span>点击我关闭本页面<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//新窗口 = window.open(地址,是否开新窗口,新窗口的各种参数);</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> a1 = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"a\"</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> a2 = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"a\"</span>)[<span class=\"number\">1</span>];</span></span><br><span class=\"line\"><span class=\"javascript\">    a1.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//举例1： window.open(\"http://www.jd.com\",\"_blank\");</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> json = &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"name\"</span>: <span class=\"string\">\"helloworld\"</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"fullscreen\"</span>: <span class=\"string\">\"no\"</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"location\"</span>: <span class=\"string\">\"no\"</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"width\"</span>: <span class=\"string\">\"100px\"</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"height\"</span>: <span class=\"string\">\"100px\"</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"top\"</span>: <span class=\"string\">\"100px\"</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"string\">\"left\"</span>: <span class=\"string\">\"100px\"</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">window</span>.open(<span class=\"string\">\"http://www.baidu.com\"</span>, <span class=\"string\">\"_blank\"</span>, json); <span class=\"comment\">//举例2</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//关闭本页面</span></span></span><br><span class=\"line\"><span class=\"javascript\">    a2.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">window</span>.close();</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>3、新窗口相关</p>\n<ul>\n<li>新窗口.moveTo(5,5);</li>\n<li>新窗口.moveBy();</li>\n<li>新窗口.resizeTo();</li>\n<li>window.resizeBy();   不大懂</li>\n</ul>\n<p>代码举例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newWin=<span class=\"built_in\">window</span>.open(<span class=\"string\">'http://baidu.com'</span>,<span class=\"string\">'_blank'</span>,json);</span><br><span class=\"line\">newWin.moveTo(<span class=\"number\">500</span>,<span class=\"number\">500</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"localtion-对象\">localtion 对象</h2>\n<p>window.location 可以简写为location。location相当于浏览器的地址栏，可以将url解析成独立的片段。<br>\n<strong>location对象的属性</strong></p>\n<ul>\n<li>href:跳转</li>\n<li>hash:返回url中#后面的内容，包含#</li>\n<li>host:主机名</li>\n<li>pathname url中的路径部分</li>\n<li>protocol 协议一般是http,https</li>\n<li>search 查询字符串</li>\n</ul>\n<p><strong>location.href 属性举例</strong><br>\n点击盒子时，进行跳转</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>smyhvae<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> div = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"div\"</span>)[<span class=\"number\">0</span>];</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    div.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        location.href = <span class=\"string\">\"http://www.baidu.com\"</span>;   <span class=\"comment\">//点击div时,跳转到指定链接</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//window.open(\"http://www.baidu.com\",\"_blank\");  //方式二</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>location对象的方法:</p>\n<ul>\n<li>location.assign():改变浏览器地址栏的地址，并记录到历史中</li>\n<li>设置location.href就会调用assign(),一般使用location.href 进行页面跳转</li>\n<li>location.replace:替换浏览器地址栏的地址，不会记录到历史中</li>\n<li>location.reload()：重新加载，刷新呗</li>\n</ul>\n<h2 id=\"navigator对象\">navigator对象</h2>\n<p>window.navigator 的一些属性可以获取客户端的一些信息</p>\n<ul>\n<li>userAgent:系统，浏览器</li>\n<li>platform:浏览器支持的系统，win/mac/linux</li>\n</ul>\n<p>举例:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(navigator.userAgent);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(navigator.platform);</span><br></pre></td></tr></table></figure>\n<h2 id=\"history\">history</h2>\n<p>1、历史纪录管理<br>\n2、后退</p>\n<ul>\n<li>history.back();</li>\n<li>history.go(-1); //0是刷新</li>\n</ul>\n<p>3、前进</p>\n<ul>\n<li>history.forward();</li>\n<li>history.go(1)</li>\n</ul>\n"},{"title":"[ooo]  吉娃娃","catalog":true,"date":"2017-04-18T02:51:24.000Z","subtitle":"This is ooo  Demo.","header-img":null,"_content":"\n> Ported  of [Hux Blog](https://github.com/Huxpro/huxpro.github.io), Thank [Huxpro](https://github.com/Huxpro) for designing such a flawless .\n> \n> This BeanTech  created by [YuHsuan](http://beantech.org) modified from the original Porter [Kaijun](http://kaijun.rocks/ooo--huxblog/)\n\n---\n\n# Usage\n---\nI publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!\n\nLet's begin!!!\n\n## Init\n---\n```bash\ngit clone https://github.com/YenYuHsuan/ooo--beantech.git ./ooo-beantech\ncd ooo-beantech\nnpm install\n```\n\n## Modify\n---\nModify `_config.yml` file with your own info.\nEspecially the section:\n### Deployment\nReplace to your own repo!\n```yml\ndeploy:\n  type: git\n  repo: https://github.com/<yourAccount>/<repo>\n  branch: <your-branch>\n```\n\n### Sidebar settings\nCopy your avatar image to `<root>/img/` and modify the `_config.yml`:\n```yml\nsidebar: true    # whether or not using Sidebar.\nsidebar-about-description: \"<your description>\"\nsidebar-avatar: img/<your avatar path>\n```\nand activate your personal widget you like\n```yml\nwidgets:         # here are widget you can use, you can comment out\n- featured-tags\n- short-about\n- recent-posts\n- friends-blog\n- archive\n- category\n```\nif you want to add sidebar widget, please add at `layout/_widget`.\n### Signature Setup\nCopy your signature image to `<root>/img/signature` and modify the `_config.yml`:\n```yml\nsignature: true   # show signature\nsignature-img: img/signature/<your-signature-ID>\n```\n### Go to top icon Setup\nMy icon is using iron man, you can change to your own icon at `css/image`.\n\n### Post tag\nYou can decide to show post tags or not.\n```yml\nhome_posts_tag: true\n```\n![home_posts_tag-true](home_posts_tag-true.png)\n```yml\nhome_posts_tag: false\n```\n![home_posts_tag-false](home_posts_tag-false.png)\n\n### Markdown render\nMy markdown render engine plugin is [ooo-renderer-markdown-it](https://github.com/celsomiranda/ooo-renderer-markdown-it).\n```yml\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/ooo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n```\nand if you want to change the header anchor 'ℬ', you can go to `layout/post.ejs` to change it.\n```javascript\nasync(\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'left',\n          icon: ℬ // this is the header anchor \"unicode\" icon\n        };\n```\n\n## ooo Basics\n---\nSome ooo command:\n```bash\nooo new post \"<post name>\" # you can change post to another layout if you want\nooo clean && ooo generate # generate the static file\nooo server # run ooo in local environment\nooo deploy # ooo will push the static files automatically into the specific branch(gh-pages) of your repo!\n```\n\n# Have fun ^_^ \n---\n\n\nPlease Star this Project if you like it! \nPeace!\n","source":"_posts/hexo-theme-beantech.md","raw":"---\ntitle: \"[ooo]  吉娃娃\"\ncatalog: true\ndate: 2017-04-18 10:51:24\nsubtitle: \"This is ooo  Demo.\"\nheader-img: \ntags:\n- Blog\ncategory:\n- 教程\n---\n\n> Ported  of [Hux Blog](https://github.com/Huxpro/huxpro.github.io), Thank [Huxpro](https://github.com/Huxpro) for designing such a flawless .\n> \n> This BeanTech  created by [YuHsuan](http://beantech.org) modified from the original Porter [Kaijun](http://kaijun.rocks/ooo--huxblog/)\n\n---\n\n# Usage\n---\nI publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!\n\nLet's begin!!!\n\n## Init\n---\n```bash\ngit clone https://github.com/YenYuHsuan/ooo--beantech.git ./ooo-beantech\ncd ooo-beantech\nnpm install\n```\n\n## Modify\n---\nModify `_config.yml` file with your own info.\nEspecially the section:\n### Deployment\nReplace to your own repo!\n```yml\ndeploy:\n  type: git\n  repo: https://github.com/<yourAccount>/<repo>\n  branch: <your-branch>\n```\n\n### Sidebar settings\nCopy your avatar image to `<root>/img/` and modify the `_config.yml`:\n```yml\nsidebar: true    # whether or not using Sidebar.\nsidebar-about-description: \"<your description>\"\nsidebar-avatar: img/<your avatar path>\n```\nand activate your personal widget you like\n```yml\nwidgets:         # here are widget you can use, you can comment out\n- featured-tags\n- short-about\n- recent-posts\n- friends-blog\n- archive\n- category\n```\nif you want to add sidebar widget, please add at `layout/_widget`.\n### Signature Setup\nCopy your signature image to `<root>/img/signature` and modify the `_config.yml`:\n```yml\nsignature: true   # show signature\nsignature-img: img/signature/<your-signature-ID>\n```\n### Go to top icon Setup\nMy icon is using iron man, you can change to your own icon at `css/image`.\n\n### Post tag\nYou can decide to show post tags or not.\n```yml\nhome_posts_tag: true\n```\n![home_posts_tag-true](home_posts_tag-true.png)\n```yml\nhome_posts_tag: false\n```\n![home_posts_tag-false](home_posts_tag-false.png)\n\n### Markdown render\nMy markdown render engine plugin is [ooo-renderer-markdown-it](https://github.com/celsomiranda/ooo-renderer-markdown-it).\n```yml\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/ooo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n```\nand if you want to change the header anchor 'ℬ', you can go to `layout/post.ejs` to change it.\n```javascript\nasync(\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'left',\n          icon: ℬ // this is the header anchor \"unicode\" icon\n        };\n```\n\n## ooo Basics\n---\nSome ooo command:\n```bash\nooo new post \"<post name>\" # you can change post to another layout if you want\nooo clean && ooo generate # generate the static file\nooo server # run ooo in local environment\nooo deploy # ooo will push the static files automatically into the specific branch(gh-pages) of your repo!\n```\n\n# Have fun ^_^ \n---\n\n\nPlease Star this Project if you like it! \nPeace!\n","slug":"hexo-theme-beantech","published":1,"updated":"2018-04-26T14:47:58.043Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjj75gxwg000qtktusgyhn32p","content":"<blockquote>\n<p>Ported  of <a href=\"https://github.com/Huxpro/huxpro.github.io\" target=\"_blank\" rel=\"noopener\">Hux Blog</a>, Thank <a href=\"https://github.com/Huxpro\" target=\"_blank\" rel=\"noopener\">Huxpro</a> for designing such a flawless .</p>\n<p>This BeanTech  created by <a href=\"http://beantech.org\" target=\"_blank\" rel=\"noopener\">YuHsuan</a> modified from the original Porter <a href=\"http://kaijun.rocks/ooo--huxblog/\" target=\"_blank\" rel=\"noopener\">Kaijun</a></p>\n</blockquote>\n<hr>\n<h1>Usage</h1>\n<hr>\n<p>I publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!</p>\n<p>Let’s begin!!!</p>\n<h2 id=\"init\">Init</h2>\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/YenYuHsuan/ooo--beantech.git ./ooo-beantech</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ooo-beantech</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"modify\">Modify</h2>\n<hr>\n<p>Modify <code>_config.yml</code> file with your own info.<br>\nEspecially the section:</p>\n<h3 id=\"deployment\">Deployment</h3>\n<p>Replace to your own repo!</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"attr\">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">&lt;your-branch&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"sidebar-settings\">Sidebar settings</h3>\n<p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span> <span class=\"literal\">true</span>    <span class=\"comment\"># whether or not using Sidebar.</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-about-description:</span> <span class=\"string\">\"&lt;your description&gt;\"</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-avatar:</span> <span class=\"string\">img/&lt;your</span> <span class=\"string\">avatar</span> <span class=\"string\">path&gt;</span></span><br></pre></td></tr></table></figure>\n<p>and activate your personal widget you like</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">widgets:</span>         <span class=\"comment\"># here are widget you can use, you can comment out</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">featured-tags</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">short-about</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">recent-posts</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">friends-blog</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">archive</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">category</span></span><br></pre></td></tr></table></figure>\n<p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p>\n<h3 id=\"signature-setup\">Signature Setup</h3>\n<p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">signature:</span> <span class=\"literal\">true</span>   <span class=\"comment\"># show signature</span></span><br><span class=\"line\"><span class=\"attr\">signature-img:</span> <span class=\"string\">img/signature/&lt;your-signature-ID&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"go-to-top-icon-setup\">Go to top icon Setup</h3>\n<p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p>\n<h3 id=\"post-tag\">Post tag</h3>\n<p>You can decide to show post tags or not.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">home_posts_tag:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"home_posts_tag-true.png\" alt=\"home_posts_tag-true\"></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">home_posts_tag:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"home_posts_tag-false.png\" alt=\"home_posts_tag-false\"></p>\n<h3 id=\"markdown-render\">Markdown render</h3>\n<p>My markdown render engine plugin is <a href=\"https://github.com/celsomiranda/ooo-renderer-markdown-it\" target=\"_blank\" rel=\"noopener\">ooo-renderer-markdown-it</a>.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Markdown-it config</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://github.com/celsomiranda/ooo-renderer-markdown-it/wiki</span></span><br><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\"><span class=\"attr\">  render:</span></span><br><span class=\"line\"><span class=\"attr\">    html:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    xhtmlOut:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">    breaks:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    linkify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    typographer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    quotes:</span> <span class=\"string\">'“”‘’'</span></span><br></pre></td></tr></table></figure>\n<p>and if you want to change the header anchor ‘ℬ’, you can go to <code>layout/post.ejs</code> to change it.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span>(<span class=\"string\">\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        anchors.options = &#123;</span><br><span class=\"line\">          visible: <span class=\"string\">'hover'</span>,</span><br><span class=\"line\">          placement: <span class=\"string\">'left'</span>,</span><br><span class=\"line\">          icon: ℬ <span class=\"comment\">// this is the header anchor \"unicode\" icon</span></span><br><span class=\"line\">        &#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ooo-basics\">ooo Basics</h2>\n<hr>\n<p>Some ooo command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ooo new post <span class=\"string\">\"&lt;post name&gt;\"</span> <span class=\"comment\"># you can change post to another layout if you want</span></span><br><span class=\"line\">ooo clean &amp;&amp; ooo generate <span class=\"comment\"># generate the static file</span></span><br><span class=\"line\">ooo server <span class=\"comment\"># run ooo in local environment</span></span><br><span class=\"line\">ooo deploy <span class=\"comment\"># ooo will push the static files automatically into the specific branch(gh-pages) of your repo!</span></span><br></pre></td></tr></table></figure>\n<h1>Have fun ^_^</h1>\n<hr>\n<p>Please Star this Project if you like it!<br>\nPeace!</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Ported  of <a href=\"https://github.com/Huxpro/huxpro.github.io\" target=\"_blank\" rel=\"noopener\">Hux Blog</a>, Thank <a href=\"https://github.com/Huxpro\" target=\"_blank\" rel=\"noopener\">Huxpro</a> for designing such a flawless .</p>\n<p>This BeanTech  created by <a href=\"http://beantech.org\" target=\"_blank\" rel=\"noopener\">YuHsuan</a> modified from the original Porter <a href=\"http://kaijun.rocks/ooo--huxblog/\" target=\"_blank\" rel=\"noopener\">Kaijun</a></p>\n</blockquote>\n<hr>\n<h1>Usage</h1>\n<hr>\n<p>I publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!</p>\n<p>Let’s begin!!!</p>\n<h2 id=\"init\">Init</h2>\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/YenYuHsuan/ooo--beantech.git ./ooo-beantech</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ooo-beantech</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"modify\">Modify</h2>\n<hr>\n<p>Modify <code>_config.yml</code> file with your own info.<br>\nEspecially the section:</p>\n<h3 id=\"deployment\">Deployment</h3>\n<p>Replace to your own repo!</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"attr\">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">&lt;your-branch&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"sidebar-settings\">Sidebar settings</h3>\n<p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span> <span class=\"literal\">true</span>    <span class=\"comment\"># whether or not using Sidebar.</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-about-description:</span> <span class=\"string\">\"&lt;your description&gt;\"</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-avatar:</span> <span class=\"string\">img/&lt;your</span> <span class=\"string\">avatar</span> <span class=\"string\">path&gt;</span></span><br></pre></td></tr></table></figure>\n<p>and activate your personal widget you like</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">widgets:</span>         <span class=\"comment\"># here are widget you can use, you can comment out</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">featured-tags</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">short-about</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">recent-posts</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">friends-blog</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">archive</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">category</span></span><br></pre></td></tr></table></figure>\n<p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p>\n<h3 id=\"signature-setup\">Signature Setup</h3>\n<p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">signature:</span> <span class=\"literal\">true</span>   <span class=\"comment\"># show signature</span></span><br><span class=\"line\"><span class=\"attr\">signature-img:</span> <span class=\"string\">img/signature/&lt;your-signature-ID&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"go-to-top-icon-setup\">Go to top icon Setup</h3>\n<p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p>\n<h3 id=\"post-tag\">Post tag</h3>\n<p>You can decide to show post tags or not.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">home_posts_tag:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"home_posts_tag-true.png\" alt=\"home_posts_tag-true\"></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">home_posts_tag:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"home_posts_tag-false.png\" alt=\"home_posts_tag-false\"></p>\n<h3 id=\"markdown-render\">Markdown render</h3>\n<p>My markdown render engine plugin is <a href=\"https://github.com/celsomiranda/ooo-renderer-markdown-it\" target=\"_blank\" rel=\"noopener\">ooo-renderer-markdown-it</a>.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Markdown-it config</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://github.com/celsomiranda/ooo-renderer-markdown-it/wiki</span></span><br><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\"><span class=\"attr\">  render:</span></span><br><span class=\"line\"><span class=\"attr\">    html:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    xhtmlOut:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">    breaks:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    linkify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    typographer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    quotes:</span> <span class=\"string\">'“”‘’'</span></span><br></pre></td></tr></table></figure>\n<p>and if you want to change the header anchor ‘ℬ’, you can go to <code>layout/post.ejs</code> to change it.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span>(<span class=\"string\">\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        anchors.options = &#123;</span><br><span class=\"line\">          visible: <span class=\"string\">'hover'</span>,</span><br><span class=\"line\">          placement: <span class=\"string\">'left'</span>,</span><br><span class=\"line\">          icon: ℬ <span class=\"comment\">// this is the header anchor \"unicode\" icon</span></span><br><span class=\"line\">        &#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ooo-basics\">ooo Basics</h2>\n<hr>\n<p>Some ooo command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ooo new post <span class=\"string\">\"&lt;post name&gt;\"</span> <span class=\"comment\"># you can change post to another layout if you want</span></span><br><span class=\"line\">ooo clean &amp;&amp; ooo generate <span class=\"comment\"># generate the static file</span></span><br><span class=\"line\">ooo server <span class=\"comment\"># run ooo in local environment</span></span><br><span class=\"line\">ooo deploy <span class=\"comment\"># ooo will push the static files automatically into the specific branch(gh-pages) of your repo!</span></span><br></pre></td></tr></table></figure>\n<h1>Have fun ^_^</h1>\n<hr>\n<p>Please Star this Project if you like it!<br>\nPeace!</p>\n"}],"PostAsset":[{"_id":"source/_posts/2018-04-23-EntityFramework连接PostgreSQL数据库并添加迁移/0180424083706.png","slug":"0180424083706.png","post":"cjj75gxvb0001tktuxr85dulf","modified":1,"renderable":0},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/adminMenu.png","slug":"adminMenu.png","post":"cjj75gxvt000etktu8mfbdh7i","modified":1,"renderable":0},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/installDetail.png","slug":"installDetail.png","post":"cjj75gxvt000etktu8mfbdh7i","modified":1,"renderable":0},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/settingWeb.png","slug":"settingWeb.png","post":"cjj75gxvt000etktu8mfbdh7i","modified":1,"renderable":0},{"_id":"source/_posts/hexo-theme-beantech/home_posts_tag-false.png","slug":"home_posts_tag-false.png","post":"cjj75gxwg000qtktusgyhn32p","modified":1,"renderable":0},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/installConfig.png","slug":"installConfig.png","post":"cjj75gxvt000etktu8mfbdh7i","modified":1,"renderable":0},{"_id":"source/_posts/hexo-theme-beantech/home_posts_tag-true.png","slug":"home_posts_tag-true.png","post":"cjj75gxwg000qtktusgyhn32p","modified":1,"renderable":0},{"_id":"source/_posts/2018-07-04-BOM的常见内置方法和内置对象/BOM.png","post":"cjj75gxwb000otktukm9hytsm","slug":"BOM.png","modified":1,"renderable":1},{"_id":"source/_posts/hexo-theme-beantech/Demo.webp","post":"cjj75gxwg000qtktusgyhn32p","slug":"Demo.webp","modified":1,"renderable":1},{"_id":"source/_posts/2018-04-23-EntityFramework连接PostgreSQL数据库并添加迁移/Add-Mig.png","post":"cjj75gxvb0001tktuxr85dulf","slug":"Add-Mig.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-04-23-EntityFramework连接PostgreSQL数据库并添加迁移/NuGetPackage.png","post":"cjj75gxvb0001tktuxr85dulf","slug":"NuGetPackage.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-04-23-EntityFramework连接PostgreSQL数据库并添加迁移/database.png","post":"cjj75gxvb0001tktuxr85dulf","slug":"database.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-04-23-EntityFramework连接PostgreSQL数据库并添加迁移/uodate.png","post":"cjj75gxvb0001tktuxr85dulf","slug":"uodate.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/DrupalDatabases.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"DrupalDatabases.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/HostSetting.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"HostSetting.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/HostSettingError.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"HostSettingError.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/StandardDrupal.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"StandardDrupal.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/adminFanyi.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"adminFanyi.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/adminPanl.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"adminPanl.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/chown.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"chown.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/chownHtaccess.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"chownHtaccess.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/hello.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"hello.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/htaccess.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"htaccess.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/installCreateUser.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"installCreateUser.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/installDrupal.png","slug":"installDrupal.png","post":"cjj75gxvt000etktu8mfbdh7i","modified":1,"renderable":0},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/installDrupalOK.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"installDrupalOK.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/settingsConfig.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"settingsConfig.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/startHttpd.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"startHttpd.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/stttingDrupal.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"stttingDrupal.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/translatorInput.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"translatorInput.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/updateHttpd.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"updateHttpd.png","modified":1,"renderable":1},{"_id":"source/_posts/2018-05-03-Drupal8安装说明/wgetDrupal.png","post":"cjj75gxvt000etktu8mfbdh7i","slug":"wgetDrupal.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjj75gxvb0001tktuxr85dulf","category_id":"cjj75gxvj0005tktuoq0q5cd0","_id":"cjj75gxvx000gtktu2z4lokjj"},{"post_id":"cjj75gxvg0003tktunwgsu7v5","category_id":"cjj75gxvr000btktuhxos4vsq","_id":"cjj75gxw6000ltktuyx1ege21"},{"post_id":"cjj75gxvl0007tktut411t61x","category_id":"cjj75gxvx000htktuea6dkd3z","_id":"cjj75gxwj000ttktuzucyqdsm"},{"post_id":"cjj75gxvo0009tktu5oy3er95","category_id":"cjj75gxvx000htktuea6dkd3z","_id":"cjj75gxwl000wtktujpm0umxk"},{"post_id":"cjj75gxvp000atktut9znwcvw","category_id":"cjj75gxwj000stktuq08et6hb","_id":"cjj75gxwn0010tktugviwoj4w"},{"post_id":"cjj75gxvt000etktu8mfbdh7i","category_id":"cjj75gxwm000xtktuzu67ahmm","_id":"cjj75gxwo0013tkturtptl33n"},{"post_id":"cjj75gxvw000ftktuwdnj6gpp","category_id":"cjj75gxwo0011tktu6n0wtd65","_id":"cjj75gxwq0018tktu2ubparr9"},{"post_id":"cjj75gxw5000ktktusqldzlo3","category_id":"cjj75gxwp0014tktuujbgk3tz","_id":"cjj75gxwr001btktujysnaiow"},{"post_id":"cjj75gxwg000qtktusgyhn32p","category_id":"cjj75gxwr0019tktupkxjgcta","_id":"cjj75gxwr001dtktukcdajw4s"}],"PostTag":[{"post_id":"cjj75gxvb0001tktuxr85dulf","tag_id":"cjj75gxvl0006tktuntm1x4q2","_id":"cjj75gxvs000dtktu2v9m389q"},{"post_id":"cjj75gxvg0003tktunwgsu7v5","tag_id":"cjj75gxvr000ctktu80yqm8vl","_id":"cjj75gxwc000ptktuotj6oulr"},{"post_id":"cjj75gxvg0003tktunwgsu7v5","tag_id":"cjj75gxvy000itktuqptsyl11","_id":"cjj75gxwh000rtktuym5vhiyr"},{"post_id":"cjj75gxvl0007tktut411t61x","tag_id":"cjj75gxw9000ntktusyi6xfpg","_id":"cjj75gxwl000vtktutxouqeis"},{"post_id":"cjj75gxvo0009tktu5oy3er95","tag_id":"cjj75gxw9000ntktusyi6xfpg","_id":"cjj75gxwn000ztktuxiaxmdnh"},{"post_id":"cjj75gxvp000atktut9znwcvw","tag_id":"cjj75gxwm000ytktuyyoaov77","_id":"cjj75gxwq0016tktug2tty11a"},{"post_id":"cjj75gxvp000atktut9znwcvw","tag_id":"cjj75gxwo0012tktu5nr8vbwv","_id":"cjj75gxwq0017tktuudnhsb2r"},{"post_id":"cjj75gxvt000etktu8mfbdh7i","tag_id":"cjj75gxwp0015tktu7ds9e1t5","_id":"cjj75gxws001ftktu2ql3q2ts"},{"post_id":"cjj75gxvt000etktu8mfbdh7i","tag_id":"cjj75gxwr001atktu64xuiju2","_id":"cjj75gxws001gtktu71fjjghb"},{"post_id":"cjj75gxvt000etktu8mfbdh7i","tag_id":"cjj75gxwr001ctktu9lroq46q","_id":"cjj75gxwt001itktun2wpdqiz"},{"post_id":"cjj75gxvw000ftktuwdnj6gpp","tag_id":"cjj75gxwr001etktuazfhyi66","_id":"cjj75gxwt001ktktufdxibfdz"},{"post_id":"cjj75gxvw000ftktuwdnj6gpp","tag_id":"cjj75gxws001htktuhe5xfsyb","_id":"cjj75gxwt001ltktutgnhtgnz"},{"post_id":"cjj75gxw5000ktktusqldzlo3","tag_id":"cjj75gxwt001jtktuht4c04gw","_id":"cjj75gxwu001ntktutzxxexr5"},{"post_id":"cjj75gxwg000qtktusgyhn32p","tag_id":"cjj75gxwt001mtktubj2xsrr2","_id":"cjj75gxwu001otktum8zh9nv3"}],"Tag":[{"name":"EntityFramework","_id":"cjj75gxvl0006tktuntm1x4q2"},{"name":"hexo","_id":"cjj75gxvr000ctktu80yqm8vl"},{"name":"博客","_id":"cjj75gxvy000itktuqptsyl11"},{"name":"Git","_id":"cjj75gxw9000ntktusyi6xfpg"},{"name":"JavaScript","_id":"cjj75gxwm000ytktuyyoaov77"},{"name":"ES6","_id":"cjj75gxwo0012tktu5nr8vbwv"},{"name":"Drupal8","_id":"cjj75gxwp0015tktu7ds9e1t5"},{"name":"CentOS","_id":"cjj75gxwr001atktu64xuiju2"},{"name":"PHP","_id":"cjj75gxwr001ctktu9lroq46q"},{"name":"Markdown","_id":"cjj75gxwr001etktuazfhyi66"},{"name":"语法","_id":"cjj75gxws001htktuhe5xfsyb"},{"name":"postgreSQL","_id":"cjj75gxwt001jtktuht4c04gw"},{"name":"Blog","_id":"cjj75gxwt001mtktubj2xsrr2"}]}}